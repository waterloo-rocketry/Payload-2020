

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 27 16:37:40 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     _RXB1CONbits	set	14320
    57  0000                     _RXB1DLCbits	set	14325
    58  0000                     _RXB1SIDL	set	14322
    59  0000                     _RXB1SIDH	set	14321
    60  0000                     _TXB0DLCbits	set	14309
    61  0000                     _TXB0SIDL	set	14306
    62  0000                     _TXB0SIDH	set	14305
    63  0000                     _TXB0CONbits	set	14304
    64  0000                     _RXM1SIDL	set	14269
    65  0000                     _RXM1SIDH	set	14268
    66  0000                     _RXM0SIDL	set	14265
    67  0000                     _RXM0SIDH	set	14264
    68  0000                     _BRGCON3bits	set	14085
    69  0000                     _BRGCON2bits	set	14084
    70  0000                     _BRGCON1bits	set	14083
    71  0000                     _CIOCONbits	set	14080
    72  0000                     _RXB1D0	set	14326
    73  0000                     _TXB0D0	set	14310
    74  0000                     _PIE0bits	set	14736
    75  0000                     _PIR3bits	set	14755
    76  0000                     _PIR5	set	14757
    77  0000                     _PIE3bits	set	14739
    78  0000                     _PIR5bits	set	14757
    79  0000                     _PIE5bits	set	14741
    80  0000                     _IOCAPbits	set	14917
    81  0000                     _ANSELAbits	set	14912
    82  0000                     _IOCAFbits	set	14919
    83  0000                     _CANRXPPS	set	15085
    84  0000                     _RC0PPS	set	14864
    85  0000                     _ANSELCbits	set	14944
    86  0000                     _ANSELC1	set	119553
    87  0000                     _ADPCH	set	16113
    88  0000                     _ADRESL	set	16111
    89  0000                     _ADRESH	set	16112
    90  0000                     _ADREFbits	set	16125
    91  0000                     _ADCON0bits	set	16120
    92  0000                     _TRISAbits	set	16322
    93  0000                     _INTCON0bits	set	16338
    94  0000                     _TRISCbits	set	16324
    95  0000                     _T0CON1bits	set	16313
    96  0000                     _T0CON0bits	set	16312
    97  0000                     _RXB0DLCbits	set	16261
    98  0000                     _RXB0SIDL	set	16258
    99  0000                     _RXB0SIDH	set	16257
   100  0000                     _COMSTATbits	set	16272
   101  0000                     _RXB0CONbits	set	16256
   102  0000                     _ECANCONbits	set	16273
   103  0000                     _CANSTATbits	set	16270
   104  0000                     _CANCONbits	set	16271
   105  0000                     _RXB0D0	set	16262
   106  0000                     _LATB4	set	130524
   107  0000                     _TRISB4	set	130588
   108  0000                     _LATB3	set	130523
   109  0000                     _TRISB3	set	130587
   110  0000                     _LATB2	set	130522
   111  0000                     _TRISB2	set	130586
   112  0000                     _TRISC1	set	130593
   113  0000                     _TRISC0	set	130592
   114                           
   115                           ; #config settings
   116                           
   117                           	psect	cinit
   118  0000'                    __pcinit:
   119                           	callstack 0
   120  0000'                    start_initialization:
   121                           	callstack 0
   122  0000'                    __initialization:
   123                           	callstack 0
   124                           
   125                           ; Clear objects allocated to BANK1 (100 bytes)
   126  0000' EE00' F000'        	lfsr	0,__pbssBANK1
   127  0004' 0E64               	movlw	100
   128  0006'                    clear_0:
   129  0006' 6A00'              	clrf	postinc0,c
   130  0008' 0700'              	decf	wreg,f,b
   131  000A' E1FD               	bnz	clear_0
   132                           
   133                           ; Clear objects allocated to BANK0 (15 bytes)
   134  000C' EE00' F000'        	lfsr	0,__pbssBANK0
   135  0010' 0E0F               	movlw	15
   136  0012'                    clear_1:
   137  0012' 6A00'              	clrf	postinc0,c
   138  0014' 0700'              	decf	wreg,f,b
   139  0016' E1FD               	bnz	clear_1
   140                           
   141                           ; Clear objects allocated to COMRAM (22 bytes)
   142  0018' EE00' F000'        	lfsr	0,__pbssCOMRAM
   143  001C' 0E16               	movlw	22
   144  001E'                    clear_2:
   145  001E' 6A00'              	clrf	postinc0,c
   146  0020' 0700'              	decf	wreg,f,b
   147  0022' E1FD               	bnz	clear_2
   148                           
   149                           ;
   150                           ; Setup IVTBASE
   151                           ;
   152  0024' 0E00'              	movlw	(ivt0x8_base shr 0)& (0+255)
   153  0026' 6ED5               	movwf	213,c
   154  0028' 0E00'              	movlw	(ivt0x8_base shr (0+8))& (0+255)
   155  002A' 6ED6               	movwf	214,c
   156  002C' 0E00'              	movlw	(ivt0x8_base shr (0+16))& (0+255)
   157  002E' 6ED7               	movwf	215,c
   158  0030'                    end_of_initialization:
   159                           	callstack 0
   160  0030'                    __end_of__initialization:
   161                           	callstack 0
   162  0030' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   163  0032' 6F00'              	movwf	tblptru,b
   164  0034' 0100               	movlb	0
   165  0036' EF00' F000'        	goto	_main	;jump to C main() function
   166                           
   167                           	psect	bssCOMRAM
   168  0000'                    __pbssCOMRAM:
   169                           	callstack 0
   170  0000'                    _last_can_traffic_timestamp_ms:
   171                           	callstack 0
   172  0000'                    	ds	4
   173  0004'                    _millis_counter:
   174                           	callstack 0
   175  0004'                    	ds	4
   176  0008'                    _can_rcv_cb:
   177                           	callstack 0
   178  0008'                    	ds	2
   179  000A'                    timer0_handle_interrupt@internal_count:
   180                           	callstack 0
   181  000A'                    	ds	1
   182  000B'                    _overflow_flag:
   183                           	callstack 0
   184  000B'                    	ds	1
   185  000C'                    _buf:
   186                           	callstack 0
   187  000C'                    	ds	10
   188                           
   189                           	psect	bssBANK0
   190  0000'                    __pbssBANK0:
   191                           	callstack 0
   192  0000'                    _ctx:
   193                           	callstack 0
   194  0000'                    	ds	4
   195  0004'                    _sensor_identifier:
   196                           	callstack 0
   197  0004'                    	ds	1
   198  0005'                    _buf@can_tx_buffer$F533:
   199                           	callstack 0
   200  0005'                    	ds	10
   201                           
   202                           	psect	bssBANK1
   203  0000'                    __pbssBANK1:
   204                           	callstack 0
   205  0000'                    _tx_pool:
   206                           	callstack 0
   207  0000'                    	ds	100
   208                           
   209                           	psect	cstackBANK0
   210  0000'                    __pcstackBANK0:
   211                           	callstack 0
   212  0000'                    ?___wmul:
   213                           	callstack 0
   214  0000'                    ?___lwdiv:
   215                           	callstack 0
   216  0000'                    ?_millis:
   217                           	callstack 0
   218  0000'                    srb_is_full@ctx:
   219                           	callstack 0
   220  0000'                    srb_is_empty@ctx:
   221                           	callstack 0
   222  0000'                    can_init@timing:
   223                           	callstack 0
   224  0000'                    ___wmul@multiplier:
   225                           	callstack 0
   226  0000'                    ___lwdiv@dividend:
   227                           	callstack 0
   228  0000'                    memcpy@d1:
   229                           	callstack 0
   230  0000'                    write_timestamp_3bytes@timestamp:
   231                           	callstack 0
   232  0000'                    can_generate_timing_params@can_frequency:
   233                           	callstack 0
   234                           
   235                           ; 4 bytes @ 0x0
   236  0000'                    	ds	2
   237  0002'                    ??_srb_is_full:
   238  0002'                    can_init@receive_callback:
   239                           	callstack 0
   240  0002'                    ___wmul@multiplicand:
   241                           	callstack 0
   242  0002'                    ___lwdiv@divisor:
   243                           	callstack 0
   244  0002'                    memcpy@s1:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x2
   248  0002'                    	ds	2
   249  0004'                    ??_can_init:
   250  0004'                    ___lwdiv@counter:
   251                           	callstack 0
   252  0004'                    write_timestamp_3bytes@output:
   253                           	callstack 0
   254  0004'                    can_generate_timing_params@timing:
   255                           	callstack 0
   256  0004'                    ___wmul@product:
   257                           	callstack 0
   258  0004'                    memcpy@n:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x4
   262  0004'                    	ds	1
   263  0005'                    ___lwdiv@quotient:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x5
   267  0005'                    	ds	1
   268  0006'                    ??_can_generate_timing_params:
   269  0006'                    ?_get_offset_bytes:
   270                           	callstack 0
   271  0006'                    memcpy@tmp:
   272                           	callstack 0
   273  0006'                    get_offset_bytes@ctx:
   274                           	callstack 0
   275  0006'                    build_board_stat_msg@timestamp:
   276                           	callstack 0
   277  0006'                    build_radi_info_msg@timestamp:
   278                           	callstack 0
   279                           
   280                           ; 4 bytes @ 0x6
   281  0006'                    	ds	1
   282  0007'                    srb_init@ctx:
   283                           	callstack 0
   284  0007'                    memcpy@d:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x7
   288  0007'                    	ds	1
   289  0008'                    get_offset_bytes@index:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x8
   293  0008'                    	ds	1
   294  0009'                    srb_init@pool:
   295                           	callstack 0
   296  0009'                    memcpy@s:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x9
   300  0009'                    	ds	1
   301  000A'                    build_board_stat_msg@error_code:
   302                           	callstack 0
   303  000A'                    build_radi_info_msg@sensor_identifier:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0xA
   307  000A'                    	ds	1
   308  000B'                    build_board_stat_msg@error_data:
   309                           	callstack 0
   310  000B'                    build_radi_info_msg@adc_value:
   311                           	callstack 0
   312  000B'                    srb_init@pool_size:
   313                           	callstack 0
   314  000B'                    can_send@message:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0xB
   318  000B'                    	ds	1
   319  000C'                    srb_push@ctx:
   320                           	callstack 0
   321  000C'                    srb_pop@ctx:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0xC
   325  000C'                    	ds	1
   326  000D'                    ??_can_send:
   327  000D'                    build_board_stat_msg@error_data_len:
   328                           	callstack 0
   329  000D'                    build_radi_info_msg@output:
   330                           	callstack 0
   331  000D'                    srb_init@element_size:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xD
   335  000D'                    	ds	1
   336  000E'                    build_board_stat_msg@output:
   337                           	callstack 0
   338  000E'                    srb_push@element:
   339                           	callstack 0
   340  000E'                    srb_pop@element:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0xE
   344  000E'                    	ds	1
   345  000F'                    txb_init@pool:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xF
   349  000F'                    	ds	1
   350  0010'                    ??_srb_push:
   351  0010'                    ??_srb_pop:
   352  0010'                    ??_build_board_stat_msg:
   353                           
   354                           ; 1 bytes @ 0x10
   355  0010'                    	ds	1
   356  0011'                    txb_init@pool_size:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x11
   360  0011'                    	ds	2
   361  0013'                    build_board_stat_msg@i:
   362                           	callstack 0
   363  0013'                    txb_init@can_send_fp:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x13
   367  0013'                    	ds	1
   368  0014'                    srb_push@offset:
   369                           	callstack 0
   370  0014'                    srb_pop@offset:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x14
   374  0014'                    	ds	1
   375  0015'                    txb_init@can_tx_ready:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x15
   379  0015'                    	ds	1
   380  0016'                    txb_enqueue@msg:
   381                           	callstack 0
   382  0016'                    txb_heartbeat@msg_sent:
   383                           	callstack 0
   384                           
   385                           ; 11 bytes @ 0x16
   386  0016'                    	ds	1
   387  0017'                    
   388                           ; 1 bytes @ 0x17
   389  0017'                    	ds	1
   390  0018'                    send_status_ok@board_stat_msg:
   391                           	callstack 0
   392                           
   393                           ; 11 bytes @ 0x18
   394  0018'                    	ds	11
   395  0023'                    
   396                           ; 2 bytes @ 0x23
   397  0023'                    	ds	2
   398  0025'                    
   399                           ; 3 bytes @ 0x25
   400  0025'                    	ds	3
   401  0028'                    ??_main:
   402                           
   403                           ; 1 bytes @ 0x28
   404  0028'                    	ds	4
   405  002C'                    main@adc_res:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x2C
   409  002C'                    	ds	2
   410  002E'                    main@last_millis:
   411                           	callstack 0
   412                           
   413                           ; 4 bytes @ 0x2E
   414  002E'                    	ds	4
   415  0032'                    main@led_heartbeat:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x32
   419  0032'                    	ds	1
   420  0033'                    main@radiation_msg:
   421                           	callstack 0
   422                           
   423                           ; 11 bytes @ 0x33
   424  0033'                    	ds	11
   425  003E'                    main@can_setup:
   426                           	callstack 0
   427                           
   428                           ; 7 bytes @ 0x3E
   429  003E'                    	ds	7
   430                           
   431                           	psect	cstackCOMRAM
   432  0000'                    __pcstackCOMRAM:
   433                           	callstack 0
   434  0000'                    ?_get_message_type:
   435                           	callstack 0
   436  0000'                    ?i2_millis:
   437                           	callstack 0
   438  0000'                    get_message_type@msg:
   439                           	callstack 0
   440  0000'                    get_board_unique_id@msg:
   441                           	callstack 0
   442  0000'                    i2memcpy@d1:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x0
   446  0000'                    	ds	2
   447  0002'                    ??_get_message_type:
   448  0002'                    i2memcpy@s1:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x2
   452  0002'                    	ds	2
   453  0004'                    can_msg_handler@msg:
   454                           	callstack 0
   455  0004'                    i2memcpy@n:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x4
   459  0004'                    	ds	2
   460  0006'                    ??_can_msg_handler:
   461  0006'                    i2memcpy@d:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x6
   465  0006'                    	ds	2
   466  0008'                    can_msg_handler@msg_type:
   467                           	callstack 0
   468  0008'                    i2memcpy@s:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x8
   472  0008'                    	ds	2
   473  000A'                    i2memcpy@tmp:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0xA
   477  000A'                    	ds	1
   478  000B'                    ??_can_handle_interrupt:
   479                           
   480                           ; 1 bytes @ 0xB
   481  000B'                    	ds	4
   482  000F'                    can_handle_interrupt@rcvd_msg:
   483                           	callstack 0
   484                           
   485                           ; 11 bytes @ 0xF
   486  000F'                    	ds	11
   487  001A'                    can_handle_interrupt@rcvd_msg_1373:
   488                           	callstack 0
   489                           
   490                           ; 11 bytes @ 0x1A
   491  001A'                    	ds	11
   492  0025'                    
   493                           ; 1 bytes @ 0x25
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   496 ;;
   497 ;; *************** function _main *****************
   498 ;; Defined at:
   499 ;;		line 34 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  argc            2   35[BANK0 ] int 
   502 ;;  argv            3   37[BANK0 ] PTR PTR unsigned char 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  radiation_ms   11   51[BANK0 ] struct .
   505 ;;  adc_res         2   44[BANK0 ] unsigned short 
   506 ;;  can_setup       7   62[BANK0 ] struct .
   507 ;;  last_millis     4   46[BANK0 ] unsigned long 
   508 ;;  led_heartbea    1   50[BANK0 ] _Bool 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  2   35[BANK0 ] int 
   511 ;; Registers used:
   512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   518 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;Total ram usage:       34 bytes
   523 ;; Hardware stack levels required when called: 9
   524 ;; This function calls:
   525 ;;		_BLUE_LED_OFF
   526 ;;		_BLUE_LED_ON
   527 ;;		_WHITE_LED_OFF
   528 ;;		_WHITE_LED_ON
   529 ;;		_adc_init
   530 ;;		_build_radi_info_msg
   531 ;;		_can_generate_timing_params
   532 ;;		_can_init
   533 ;;		_led_init
   534 ;;		_millis
   535 ;;		_pin_interrupt_init
   536 ;;		_send_status_ok
   537 ;;		_timer0_init
   538 ;;		_txb_enqueue
   539 ;;		_txb_heartbeat
   540 ;;		_txb_init
   541 ;; This function is called by:
   542 ;;		Startup code after reset
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text0
   547  0000'                    __ptext0:
   548                           	callstack 0
   549  0000'                    _main:
   550                           	callstack 22
   551  0000'                    
   552                           ;main.c: 36:     timer0_init();
   553  0000' EC00' F000'        	call	_timer0_init	;wreg free
   554  0004'                    
   555                           ;main.c: 39:     INTCON0bits.GIE = 1;
   556  0004' 8ED2               	bsf	210,7,c	;volatile
   557  0006'                    
   558                           ;main.c: 42:     TRISC0 = 0;
   559  0006' 90C4               	bcf	16324,0,c	;volatile
   560  0008'                    
   561                           ;main.c: 43:     RC0PPS = 0x33;
   562  0008' 0E33               	movlw	51
   563  000A' 013A               	movlb	58	; () banked
   564  000C' 6F10               	movwf	16,b	;volatile
   565  000E'                    
   566                           ; BSR set to: 58
   567                           ;main.c: 46:     TRISC1 = 1;
   568  000E' 82C4               	bsf	16324,1,c	;volatile
   569  0010'                    
   570                           ; BSR set to: 58
   571                           ;main.c: 47:     ANSELC1 = 0;
   572  0010' 9360               	bcf	96,1,b	;volatile
   573  0012'                    
   574                           ; BSR set to: 58
   575                           ;main.c: 48:     CANRXPPS = 0x11;
   576  0012' 0E11               	movlw	17
   577  0014' 6FED               	movwf	237,b	;volatile
   578                           
   579                           ;main.c: 51:     adc_init();
   580  0016' EC00' F000'        	call	_adc_init	;wreg free
   581  001A'                    
   582                           ;main.c: 54:     pin_interrupt_init();
   583  001A' EC00' F000'        	call	_pin_interrupt_init	;wreg free
   584  001E'                    
   585                           ;main.c: 57:     led_init();
   586  001E' EC00' F000'        	call	_led_init	;wreg free
   587  0022'                    
   588                           ;main.c: 60:     can_timing_t can_setup;;main.c: 61:     can_generate_timing_params(1000
      +                          000, &can_setup);
   589  0022' 0E40               	movlw	64
   590  0024' 0100               	movlb	0	; () banked
   591  0026' 6F00'              	movwf	can_generate_timing_params@can_frequency& (0+255),b
   592  0028' 0E42               	movlw	66
   593  002A' 6F00'              	movwf	(can_generate_timing_params@can_frequency+1)& (0+255),b
   594  002C' 0E0F               	movlw	15
   595  002E' 6F00'              	movwf	(can_generate_timing_params@can_frequency+2)& (0+255),b
   596  0030' 0E00               	movlw	0
   597  0032' 6F00'              	movwf	(can_generate_timing_params@can_frequency+3)& (0+255),b
   598  0034' 0E00'              	movlw	low main@can_setup
   599  0036' 6F00'              	movwf	can_generate_timing_params@timing& (0+255),b
   600  0038' 0E00'              	movlw	high main@can_setup
   601  003A' 6F00'              	movwf	(can_generate_timing_params@timing+1)& (0+255),b
   602  003C' EC00' F000'        	call	_can_generate_timing_params	;wreg free
   603  0040'                    
   604                           ;main.c: 62:     can_init(&can_setup, can_msg_handler);
   605  0040' 0E00'              	movlw	low main@can_setup
   606  0042' 0100               	movlb	0	; () banked
   607  0044' 6F00'              	movwf	can_init@timing& (0+255),b
   608  0046' 0E00'              	movlw	high main@can_setup
   609  0048' 6F00'              	movwf	(can_init@timing+1)& (0+255),b
   610  004A' 0E00'              	movlw	low _can_msg_handler
   611  004C' 6F00'              	movwf	can_init@receive_callback& (0+255),b
   612  004E' 0E00'              	movlw	high _can_msg_handler
   613  0050' 6F00'              	movwf	(can_init@receive_callback+1)& (0+255),b
   614  0052' EC00' F000'        	call	_can_init	;wreg free
   615  0056'                    
   616                           ;main.c: 64:     txb_init(tx_pool, sizeof(tx_pool), can_send, can_send_rdy);
   617  0056' 0E00'              	movlw	low _tx_pool
   618  0058' 0100               	movlb	0	; () banked
   619  005A' 6F00'              	movwf	txb_init@pool& (0+255),b
   620  005C' 0E00'              	movlw	high _tx_pool
   621  005E' 6F00'              	movwf	(txb_init@pool+1)& (0+255),b
   622  0060' 0E00               	movlw	0
   623  0062' 6F00'              	movwf	(txb_init@pool_size+1)& (0+255),b
   624  0064' 0E64               	movlw	100
   625  0066' 6F00'              	movwf	txb_init@pool_size& (0+255),b
   626  0068' 0E00'              	movlw	low _can_send
   627  006A' 6F00'              	movwf	txb_init@can_send_fp& (0+255),b
   628  006C' 0E00'              	movlw	high _can_send
   629  006E' 6F00'              	movwf	(txb_init@can_send_fp+1)& (0+255),b
   630  0070' 0E00'              	movlw	low _can_send_rdy
   631  0072' 6F00'              	movwf	txb_init@can_tx_ready& (0+255),b
   632  0074' 0E00'              	movlw	high _can_send_rdy
   633  0076' 6F00'              	movwf	(txb_init@can_tx_ready+1)& (0+255),b
   634  0078' EC00' F000'        	call	_txb_init	;wreg free
   635  007C'                    
   636                           ;main.c: 67:     uint32_t last_millis = millis();
   637  007C' EC00' F000'        	call	_millis	;wreg free
   638  0080' C000' F02E'        	movff	?_millis,main@last_millis
   639  0084' C001' F02F'        	movff	?_millis+1,main@last_millis+1
   640  0088' C002' F030'        	movff	?_millis+2,main@last_millis+2
   641  008C' C003' F031'        	movff	?_millis+3,main@last_millis+3
   642  0090'                    
   643                           ;main.c: 68:     _Bool led_heartbeat = 0;
   644  0090' 0E00               	movlw	0
   645  0092' 0100               	movlb	0	; () banked
   646  0094' 6F00'              	movwf	main@led_heartbeat& (0+255),b
   647  0096'                    l4963:
   648                           
   649                           ;main.c: 71:         if (millis() - last_millis > 250) {
   650  0096' EC00' F000'        	call	_millis	;wreg free
   651  009A' 0100               	movlb	0	; () banked
   652  009C' 5100'              	movf	main@last_millis& (0+255),w,b
   653  009E' 5D00'              	subwf	?_millis& (0+255),w,b
   654  00A0' 6F00'              	movwf	??_main& (0+255),b
   655  00A2' 5100'              	movf	(main@last_millis+1)& (0+255),w,b
   656  00A4' 5900'              	subwfb	(?_millis+1)& (0+255),w,b
   657  00A6' 6F00'              	movwf	(??_main+1)& (0+255),b
   658  00A8' 5100'              	movf	(main@last_millis+2)& (0+255),w,b
   659  00AA' 5900'              	subwfb	(?_millis+2)& (0+255),w,b
   660  00AC' 6F00'              	movwf	(??_main+2)& (0+255),b
   661  00AE' 5100'              	movf	(main@last_millis+3)& (0+255),w,b
   662  00B0' 5900'              	subwfb	(?_millis+3)& (0+255),w,b
   663  00B2' 6F00'              	movwf	(??_main+3)& (0+255),b
   664  00B4' 5100'              	movf	(??_main+3)& (0+255),w,b
   665  00B6' 1100'              	iorwf	(??_main+2)& (0+255),w,b
   666  00B8' 1100'              	iorwf	(??_main+1)& (0+255),w,b
   667  00BA' E109               	bnz	u3380
   668  00BC' 0EFB               	movlw	251
   669  00BE' 5D00'              	subwf	??_main& (0+255),w,b
   670  00C0' A100'              	btfss	status,0,b
   671  00C2' EF00' F000'        	goto	u3381
   672  00C6' EF00' F000'        	goto	u3380
   673  00CA'                    u3381:
   674  00CA' EF00' F000'        	goto	l4977
   675  00CE'                    u3380:
   676  00CE'                    
   677                           ; BSR set to: 0
   678                           ;main.c: 73:             led_heartbeat ^= 1;
   679  00CE' 0E01               	movlw	1
   680  00D0' 1B00'              	xorwf	main@led_heartbeat& (0+255),f,b
   681  00D2'                    
   682                           ; BSR set to: 0
   683                           ;main.c: 74:             if (led_heartbeat) { BLUE_LED_ON(); }
   684  00D2' 5100'              	movf	main@led_heartbeat& (0+255),w,b
   685  00D4' B500'              	btfsc	status,2,b
   686  00D6' EF00' F000'        	goto	u3391
   687  00DA' EF00' F000'        	goto	u3390
   688  00DE'                    u3391:
   689  00DE' EF00' F000'        	goto	l4971
   690  00E2'                    u3390:
   691  00E2'                    
   692                           ; BSR set to: 0
   693  00E2' EC00' F000'        	call	_BLUE_LED_ON	;wreg free
   694  00E6' EF00' F000'        	goto	l4973
   695  00EA'                    l4971:
   696                           
   697                           ; BSR set to: 0
   698  00EA' EC00' F000'        	call	_BLUE_LED_OFF	;wreg free
   699  00EE'                    l4973:
   700                           
   701                           ;main.c: 77:             send_status_ok();
   702  00EE' EC00' F000'        	call	_send_status_ok	;wreg free
   703  00F2'                    
   704                           ;main.c: 80:             last_millis = millis();
   705  00F2' EC00' F000'        	call	_millis	;wreg free
   706  00F6' C000' F02E'        	movff	?_millis,main@last_millis
   707  00FA' C001' F02F'        	movff	?_millis+1,main@last_millis+1
   708  00FE' C002' F030'        	movff	?_millis+2,main@last_millis+2
   709  0102' C003' F031'        	movff	?_millis+3,main@last_millis+3
   710  0106'                    l4977:
   711                           
   712                           ;main.c: 83:         txb_heartbeat();
   713  0106' EC00' F000'        	call	_txb_heartbeat	;wreg free
   714  010A'                    
   715                           ;main.c: 85:         if(sensor_identifier)
   716  010A' 0100               	movlb	0	; () banked
   717  010C' 5100'              	movf	_sensor_identifier& (0+255),w,b	;volatile
   718  010E' B500'              	btfsc	status,2,b
   719  0110' EF00' F000'        	goto	u3401
   720  0114' EF00' F000'        	goto	u3400
   721  0118'                    u3401:
   722  0118' EF00' F000'        	goto	l4997
   723  011C'                    u3400:
   724  011C'                    
   725                           ; BSR set to: 0
   726                           ;main.c: 86:         {;main.c: 87:             ADCON0bits.ON = 1;
   727  011C' 013E               	movlb	62	; () banked
   728  011E' 8FF8               	bsf	248,7,b	;volatile
   729  0120'                    
   730                           ; BSR set to: 62
   731                           ;main.c: 89:             WHITE_LED_ON();
   732  0120' EC00' F000'        	call	_WHITE_LED_ON	;wreg free
   733  0124'                    
   734                           ;main.c: 90:             ADCON0bits.GO = 1;
   735  0124' 013E               	movlb	62	; () banked
   736  0126' 81F8               	bsf	248,0,b	;volatile
   737  0128'                    l629:
   738                           
   739                           ; BSR set to: 62
   740  0128' B1F8               	btfsc	248,0,b	;volatile
   741  012A' EF00' F000'        	goto	u3411
   742  012E' EF00' F000'        	goto	u3410
   743  0132'                    u3411:
   744  0132' EF00' F000'        	goto	l629
   745  0136'                    u3410:
   746  0136'                    
   747                           ; BSR set to: 62
   748                           ;main.c: 96:             can_msg_t radiation_msg;;main.c: 97:             uint16_t adc_r
      +                          es = (ADRESH << 8) | ADRESL;
   749  0136' 51EF               	movf	239,w,b	;volatile
   750  0138' 006F F000' F000'   	movff	16112,??_main	;volatile
   751  013E' 0100               	movlb	0	; () banked
   752  0140' 6B00'              	clrf	(??_main+1)& (0+255),b
   753  0142' C028' F029'        	movff	??_main,??_main+1
   754  0146' 6B00'              	clrf	??_main& (0+255),b
   755  0148' 1100'              	iorwf	??_main& (0+255),w,b
   756  014A' 6F00'              	movwf	main@adc_res& (0+255),b
   757  014C' 5100'              	movf	(??_main+1)& (0+255),w,b
   758  014E' 6F00'              	movwf	(main@adc_res+1)& (0+255),b
   759  0150'                    
   760                           ; BSR set to: 0
   761                           ;main.c: 98:             build_radi_info_msg(millis(), sensor_identifier, adc_res, &radi
      +                          ation_msg);
   762  0150' EC00' F000'        	call	_millis	;wreg free
   763  0154' C000' F006'        	movff	?_millis,build_radi_info_msg@timestamp
   764  0158' C001' F007'        	movff	?_millis+1,build_radi_info_msg@timestamp+1
   765  015C' C002' F008'        	movff	?_millis+2,build_radi_info_msg@timestamp+2
   766  0160' C003' F009'        	movff	?_millis+3,build_radi_info_msg@timestamp+3
   767  0164' C004' F00A'        	movff	_sensor_identifier,build_radi_info_msg@sensor_identifier	;volatile
   768  0168' C02C' F00B'        	movff	main@adc_res,build_radi_info_msg@adc_value
   769  016C' C02D' F00C'        	movff	main@adc_res+1,build_radi_info_msg@adc_value+1
   770  0170' 0E00'              	movlw	low main@radiation_msg
   771  0172' 0100               	movlb	0	; () banked
   772  0174' 6F00'              	movwf	build_radi_info_msg@output& (0+255),b
   773  0176' 0E00'              	movlw	high main@radiation_msg
   774  0178' 6F00'              	movwf	(build_radi_info_msg@output+1)& (0+255),b
   775  017A' EC00' F000'        	call	_build_radi_info_msg	;wreg free
   776  017E'                    
   777                           ;main.c: 99:             txb_enqueue(&radiation_msg);
   778  017E' 0E00'              	movlw	low main@radiation_msg
   779  0180' 0100               	movlb	0	; () banked
   780  0182' 6F00'              	movwf	txb_enqueue@msg& (0+255),b
   781  0184' 0E00'              	movlw	high main@radiation_msg
   782  0186' 6F00'              	movwf	(txb_enqueue@msg+1)& (0+255),b
   783  0188' EC00' F000'        	call	_txb_enqueue	;wreg free
   784  018C'                    
   785                           ;main.c: 100:             sensor_identifier = 0;
   786  018C' 0E00               	movlw	0
   787  018E' 0100               	movlb	0	; () banked
   788  0190' 6F00'              	movwf	_sensor_identifier& (0+255),b	;volatile
   789  0192'                    
   790                           ; BSR set to: 0
   791                           ;main.c: 102:             ADCON0bits.ON = 0;
   792  0192' 013E               	movlb	62	; () banked
   793  0194' 9FF8               	bcf	248,7,b	;volatile
   794  0196'                    l4997:
   795                           
   796                           ;main.c: 105:         WHITE_LED_OFF();
   797  0196' EC00' F000'        	call	_WHITE_LED_OFF	;wreg free
   798  019A' EF00' F000'        	goto	l4963
   799  019E' EF00' F000'        	goto	start
   800  01A2'                    __end_of_main:
   801                           	callstack 0
   802                           
   803 ;; *************** function _txb_init *****************
   804 ;; Defined at:
   805 ;;		line 15 in file "canlib/util/can_tx_buffer.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  pool            2   15[BANK0 ] PTR void 
   808 ;;		 -> tx_pool(100), 
   809 ;;  pool_size       2   17[BANK0 ] unsigned int 
   810 ;;  can_send_fp     2   19[BANK0 ] PTR FTN(PTR const struct
   811 ;;		 -> can_send(1), 
   812 ;;  can_tx_ready    2   21[BANK0 ] PTR FTN()_Bool 
   813 ;;		 -> can_send_rdy(1), 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   825 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;Total ram usage:        8 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 6
   832 ;; This function calls:
   833 ;;		_srb_init
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text1
   840  0000'                    __ptext1:
   841                           	callstack 0
   842  0000'                    _txb_init:
   843                           	callstack 24
   844  0000'                    
   845                           ;canlib/util/can_tx_buffer.c: 15: void txb_init(void *pool, size_t pool_size,;canlib/uti
      +                          l/can_tx_buffer.c: 16:               void (*can_send_fp)(const can_msg_t *),;canlib/util
      +                          /can_tx_buffer.c: 17:               _Bool (*can_tx_ready)(void)) {;canlib/util/can_tx_bu
      +                          ffer.c: 18:     ctx.can_send_fp = can_send_fp;
   846  0000' C013' F000'        	movff	txb_init@can_send_fp,_ctx
   847  0004' C014' F001'        	movff	txb_init@can_send_fp+1,_ctx+1
   848                           
   849                           ;canlib/util/can_tx_buffer.c: 19:     ctx.can_tx_ready = can_tx_ready;
   850  0008' C015' F002'        	movff	txb_init@can_tx_ready,_ctx+2
   851  000C' C016' F003'        	movff	txb_init@can_tx_ready+1,_ctx+3
   852  0010'                    
   853                           ;canlib/util/can_tx_buffer.c: 20:     srb_init(&buf, pool, pool_size, sizeof(can_msg_t))
      +                          ;
   854  0010' 0E00'              	movlw	low _buf@can_tx_buffer$F533
   855  0012' 0100               	movlb	0	; () banked
   856  0014' 6F00'              	movwf	srb_init@ctx& (0+255),b
   857  0016' 0E00'              	movlw	high _buf@can_tx_buffer$F533
   858  0018' 6F00'              	movwf	(srb_init@ctx+1)& (0+255),b
   859  001A' C00F' F009'        	movff	txb_init@pool,srb_init@pool
   860  001E' C010' F00A'        	movff	txb_init@pool+1,srb_init@pool+1
   861  0022' C011' F00B'        	movff	txb_init@pool_size,srb_init@pool_size
   862  0026' C012' F00C'        	movff	txb_init@pool_size+1,srb_init@pool_size+1
   863  002A' 0E00               	movlw	0
   864  002C' 6F00'              	movwf	(srb_init@element_size+1)& (0+255),b
   865  002E' 0E0B               	movlw	11
   866  0030' 6F00'              	movwf	srb_init@element_size& (0+255),b
   867  0032' EC00' F000'        	call	_srb_init	;wreg free
   868  0036' 0012               	return		;funcret
   869  0038'                    __end_of_txb_init:
   870                           	callstack 0
   871                           
   872 ;; *************** function _srb_init *****************
   873 ;; Defined at:
   874 ;;		line 14 in file "canlib/util/safe_ring_buffer.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  ctx             2    7[BANK0 ] PTR struct .
   877 ;;		 -> buf@can_tx_buffer$F533(10), buf(10), 
   878 ;;  pool            2    9[BANK0 ] PTR void 
   879 ;;		 -> tx_pool(100), 
   880 ;;  pool_size       2   11[BANK0 ] unsigned int 
   881 ;;  element_size    2   13[BANK0 ] unsigned int 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   893 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;Total ram usage:        8 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; Hardware stack levels required when called: 5
   900 ;; This function calls:
   901 ;;		___lwdiv
   902 ;; This function is called by:
   903 ;;		_txb_init
   904 ;;		_rcvb_init
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text2
   909  0000'                    __ptext2:
   910                           	callstack 0
   911  0000'                    _srb_init:
   912                           	callstack 24
   913  0000'                    
   914                           ;canlib/util/safe_ring_buffer.c: 14: void srb_init(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 15:               void *pool,;canlib/util/safe_ring_buffer.c: 16:            
      +                             size_t pool_size,;canlib/util/safe_ring_buffer.c: 17:               size_t element_si
      +                          ze);canlib/util/safe_ring_buffer.c: 18: {;canlib/util/safe_ring_buffer.c: 19:     ctx->m
      +                          emory_pool = pool;
   915  0000' 0060' F000' F000'  	movff	srb_init@ctx,fsr2l
   916  0006' 0060' F000' F000'  	movff	srb_init@ctx+1,fsr2h
   917  000C' 0060' F000' F000'  	movff	srb_init@pool,postinc2
   918  0012' 0060' F000' F000'  	movff	srb_init@pool+1,postdec2
   919  0018'                    
   920                           ;canlib/util/safe_ring_buffer.c: 20:     ctx->element_size = element_size;
   921  0018' 0100               	movlb	0	; () banked
   922  001A' EE20 F002          	lfsr	2,2
   923  001E' 5100'              	movf	srb_init@ctx& (0+255),w,b
   924  0020' 2700'              	addwf	fsr2l,f,b
   925  0022' 5100'              	movf	(srb_init@ctx+1)& (0+255),w,b
   926  0024' 2300'              	addwfc	fsr2h,f,b
   927  0026' 0060' F000' F000'  	movff	srb_init@element_size,postinc2
   928  002C' 0060' F000' F000'  	movff	srb_init@element_size+1,postdec2
   929  0032'                    
   930                           ; BSR set to: 0
   931                           ;canlib/util/safe_ring_buffer.c: 21:     ctx->max_elements = (pool_size / (element_size)
      +                          );
   932  0032' C00B' F000'        	movff	srb_init@pool_size,___lwdiv@dividend
   933  0036' C00C' F001'        	movff	srb_init@pool_size+1,___lwdiv@dividend+1
   934  003A' C00D' F002'        	movff	srb_init@element_size,___lwdiv@divisor
   935  003E' C00E' F003'        	movff	srb_init@element_size+1,___lwdiv@divisor+1
   936  0042' EC00' F000'        	call	___lwdiv	;wreg free
   937  0046' 0100               	movlb	0	; () banked
   938  0048' EE20 F004          	lfsr	2,4
   939  004C' 5100'              	movf	srb_init@ctx& (0+255),w,b
   940  004E' 2700'              	addwf	fsr2l,f,b
   941  0050' 5100'              	movf	(srb_init@ctx+1)& (0+255),w,b
   942  0052' 2300'              	addwfc	fsr2h,f,b
   943  0054' 0060' F000' F000'  	movff	?___lwdiv,postinc2
   944  005A' 0060' F000' F000'  	movff	?___lwdiv+1,postdec2
   945  0060'                    
   946                           ; BSR set to: 0
   947                           ;canlib/util/safe_ring_buffer.c: 22:     ctx->rd_idx = 0;
   948  0060' EE20 F006          	lfsr	2,6
   949  0064' 5100'              	movf	srb_init@ctx& (0+255),w,b
   950  0066' 2700'              	addwf	fsr2l,f,b
   951  0068' 5100'              	movf	(srb_init@ctx+1)& (0+255),w,b
   952  006A' 2300'              	addwfc	fsr2h,f,b
   953  006C' 0E00               	movlw	0
   954  006E' 6E00'              	movwf	postinc2,c
   955  0070' 0E00               	movlw	0
   956  0072' 6E00'              	movwf	postdec2,c
   957  0074'                    
   958                           ; BSR set to: 0
   959                           ;canlib/util/safe_ring_buffer.c: 23:     ctx->wr_idx = 0;
   960  0074' EE20 F008          	lfsr	2,8
   961  0078' 5100'              	movf	srb_init@ctx& (0+255),w,b
   962  007A' 2700'              	addwf	fsr2l,f,b
   963  007C' 5100'              	movf	(srb_init@ctx+1)& (0+255),w,b
   964  007E' 2300'              	addwfc	fsr2h,f,b
   965  0080' 0E00               	movlw	0
   966  0082' 6E00'              	movwf	postinc2,c
   967  0084' 0E00               	movlw	0
   968  0086' 6E00'              	movwf	postdec2,c
   969  0088'                    
   970                           ; BSR set to: 0
   971  0088' 0012               	return		;funcret
   972  008A'                    __end_of_srb_init:
   973                           	callstack 0
   974                           
   975 ;; *************** function ___lwdiv *****************
   976 ;; Defined at:
   977 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  dividend        2    0[BANK0 ] unsigned int 
   980 ;;  divisor         2    2[BANK0 ] unsigned int 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  quotient        2    5[BANK0 ] unsigned int 
   983 ;;  counter         1    4[BANK0 ] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  2    0[BANK0 ] unsigned int 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   993 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;Total ram usage:        7 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 4
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_srb_init
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text3
  1008  0000'                    __ptext3:
  1009                           	callstack 0
  1010  0000'                    ___lwdiv:
  1011                           	callstack 24
  1012  0000' 0E00               	movlw	0
  1013  0002' 0100               	movlb	0	; () banked
  1014  0004' 6F00'              	movwf	(___lwdiv@quotient+1)& (0+255),b
  1015  0006' 0E00               	movlw	0
  1016  0008' 6F00'              	movwf	___lwdiv@quotient& (0+255),b
  1017  000A'                    
  1018                           ; BSR set to: 0
  1019  000A' 5100'              	movf	___lwdiv@divisor& (0+255),w,b
  1020  000C' 1100'              	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1021  000E' B500'              	btfsc	status,2,b
  1022  0010' EF00' F000'        	goto	u2971
  1023  0014' EF00' F000'        	goto	u2970
  1024  0018'                    u2971:
  1025  0018' EF00' F000'        	goto	l1211
  1026  001C'                    u2970:
  1027  001C'                    
  1028                           ; BSR set to: 0
  1029  001C' 0E01               	movlw	1
  1030  001E' 6F00'              	movwf	___lwdiv@counter& (0+255),b
  1031  0020' EF00' F000'        	goto	l4413
  1032  0024'                    l4411:
  1033                           
  1034                           ; BSR set to: 0
  1035  0024' 9100'              	bcf	status,0,b
  1036  0026' 3700'              	rlcf	___lwdiv@divisor& (0+255),f,b
  1037  0028' 3700'              	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1038  002A' 2B00'              	incf	___lwdiv@counter& (0+255),f,b
  1039  002C'                    l4413:
  1040                           
  1041                           ; BSR set to: 0
  1042  002C' AF00'              	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1043  002E' EF00' F000'        	goto	u2981
  1044  0032' EF00' F000'        	goto	u2980
  1045  0036'                    u2981:
  1046  0036' EF00' F000'        	goto	l4411
  1047  003A'                    u2980:
  1048  003A'                    l4415:
  1049                           
  1050                           ; BSR set to: 0
  1051  003A' 9100'              	bcf	status,0,b
  1052  003C' 3700'              	rlcf	___lwdiv@quotient& (0+255),f,b
  1053  003E' 3700'              	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1054  0040'                    
  1055                           ; BSR set to: 0
  1056  0040' 5100'              	movf	___lwdiv@divisor& (0+255),w,b
  1057  0042' 5D00'              	subwf	___lwdiv@dividend& (0+255),w,b
  1058  0044' 5100'              	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1059  0046' 5900'              	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1060  0048' A100'              	btfss	status,0,b
  1061  004A' EF00' F000'        	goto	u2991
  1062  004E' EF00' F000'        	goto	u2990
  1063  0052'                    u2991:
  1064  0052' EF00' F000'        	goto	l4423
  1065  0056'                    u2990:
  1066  0056'                    
  1067                           ; BSR set to: 0
  1068  0056' 5100'              	movf	___lwdiv@divisor& (0+255),w,b
  1069  0058' 5F00'              	subwf	___lwdiv@dividend& (0+255),f,b
  1070  005A' 5100'              	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1071  005C' 5B00'              	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1072  005E'                    
  1073                           ; BSR set to: 0
  1074  005E' 8100'              	bsf	___lwdiv@quotient& (0+255),0,b
  1075  0060'                    l4423:
  1076                           
  1077                           ; BSR set to: 0
  1078  0060' 9100'              	bcf	status,0,b
  1079  0062' 3300'              	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1080  0064' 3300'              	rrcf	___lwdiv@divisor& (0+255),f,b
  1081  0066'                    
  1082                           ; BSR set to: 0
  1083  0066' 2F00'              	decfsz	___lwdiv@counter& (0+255),f,b
  1084  0068' EF00' F000'        	goto	l4415
  1085  006C'                    l1211:
  1086                           
  1087                           ; BSR set to: 0
  1088  006C' C005' F000'        	movff	___lwdiv@quotient,?___lwdiv
  1089  0070' C006' F001'        	movff	___lwdiv@quotient+1,?___lwdiv+1
  1090  0074'                    
  1091                           ; BSR set to: 0
  1092  0074' 0012               	return		;funcret
  1093  0076'                    __end_of___lwdiv:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _txb_heartbeat *****************
  1097 ;; Defined at:
  1098 ;;		line 31 in file "canlib/util/can_tx_buffer.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  msg_sent       11   22[BANK0 ] struct .
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;Total ram usage:       11 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 7
  1119 ;; This function calls:
  1120 ;;		_can_send
  1121 ;;		_can_send_rdy
  1122 ;;		_srb_is_empty
  1123 ;;		_srb_pop
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text4
  1130  0000'                    __ptext4:
  1131                           	callstack 0
  1132  0000'                    _txb_heartbeat:
  1133                           	callstack 23
  1134  0000'                    
  1135                           ;canlib/util/can_tx_buffer.c: 32:     if (!srb_is_empty(&buf)) {
  1136  0000' 0E00'              	movlw	low _buf@can_tx_buffer$F533
  1137  0002' 0100               	movlb	0	; () banked
  1138  0004' 6F00'              	movwf	srb_is_empty@ctx& (0+255),b
  1139  0006' 0E00'              	movlw	high _buf@can_tx_buffer$F533
  1140  0008' 6F00'              	movwf	(srb_is_empty@ctx+1)& (0+255),b
  1141  000A' EC00' F000'        	call	_srb_is_empty	;wreg free
  1142  000E' 0900               	iorlw	0
  1143  0010' A500'              	btfss	status,2,b
  1144  0012' EF00' F000'        	goto	u3151
  1145  0016' EF00' F000'        	goto	u3150
  1146  001A'                    u3151:
  1147  001A' EF00' F000'        	goto	l357
  1148  001E'                    u3150:
  1149  001E'                    
  1150                           ;canlib/util/can_tx_buffer.c: 33:         if ((*(ctx.can_tx_ready))()) {
  1151  001E' EE20' F000'        	lfsr	2,_ctx+2
  1152  0022' D802               	call	u3168
  1153  0024' EF00' F000'        	goto	u3169
  1154  0028'                    u3168:
  1155  0028' 0005               	push	
  1156  002A' 6F00'              	movwf	pclath,b
  1157  002C' 5100'              	movf	postinc2,w,b
  1158  002E' 6F00'              	movwf	tosl,b
  1159  0030' 5100'              	movf	postinc2,w,b
  1160  0032' 6F01'              	movwf	tosl+1,b
  1161  0034' 5100'              	movf	tblptru,w,b
  1162  0036' 6F02'              	movwf	tosl+2,b
  1163  0038' 5100'              	movf	pclath,w,b
  1164  003A' 0012               	return		;indir
  1165  003C'                    u3169:
  1166  003C' 0900               	iorlw	0
  1167  003E' B500'              	btfsc	status,2,b
  1168  0040' EF00' F000'        	goto	u3171
  1169  0044' EF00' F000'        	goto	u3170
  1170  0048'                    u3171:
  1171  0048' EF00' F000'        	goto	l357
  1172  004C'                    u3170:
  1173  004C'                    
  1174                           ;canlib/util/can_tx_buffer.c: 34:             can_msg_t msg_sent;;canlib/util/can_tx_buf
      +                          fer.c: 35:             srb_pop(&buf, &msg_sent);
  1175  004C' 0E00'              	movlw	low _buf@can_tx_buffer$F533
  1176  004E' 0100               	movlb	0	; () banked
  1177  0050' 6F00'              	movwf	srb_pop@ctx& (0+255),b
  1178  0052' 0E00'              	movlw	high _buf@can_tx_buffer$F533
  1179  0054' 6F00'              	movwf	(srb_pop@ctx+1)& (0+255),b
  1180  0056' 0E00'              	movlw	low txb_heartbeat@msg_sent
  1181  0058' 6F00'              	movwf	srb_pop@element& (0+255),b
  1182  005A' 0E00'              	movlw	high txb_heartbeat@msg_sent
  1183  005C' 6F00'              	movwf	(srb_pop@element+1)& (0+255),b
  1184  005E' EC00' F000'        	call	_srb_pop	;wreg free
  1185  0062'                    
  1186                           ;canlib/util/can_tx_buffer.c: 36:             (*(ctx.can_send_fp))(&msg_sent);
  1187  0062' 0E00'              	movlw	low txb_heartbeat@msg_sent
  1188  0064' 0100               	movlb	0	; () banked
  1189  0066' 6F00'              	movwf	can_send@message& (0+255),b
  1190  0068' 0E00'              	movlw	high txb_heartbeat@msg_sent
  1191  006A' 6F00'              	movwf	(can_send@message+1)& (0+255),b
  1192  006C' D802               	call	u3188
  1193  006E' EF00' F000'        	goto	u3189
  1194  0072'                    u3188:
  1195  0072' 0005               	push	
  1196  0074' 6F00'              	movwf	pclath,b
  1197  0076' 5100'              	movf	_ctx& (0+255),w,b
  1198  0078' 6F00'              	movwf	tosl,b
  1199  007A' 5100'              	movf	(_ctx+1)& (0+255),w,b
  1200  007C' 6F01'              	movwf	tosl+1,b
  1201  007E' 5100'              	movf	tblptru,w,b
  1202  0080' 6F02'              	movwf	tosl+2,b
  1203  0082' 5100'              	movf	pclath,w,b
  1204  0084' 0012               	return		;indir
  1205  0086'                    u3189:
  1206  0086'                    l357:
  1207  0086' 0012               	return		;funcret
  1208  0088'                    __end_of_txb_heartbeat:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _srb_pop *****************
  1212 ;; Defined at:
  1213 ;;		line 58 in file "canlib/util/safe_ring_buffer.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  ctx             2   12[BANK0 ] PTR struct .
  1216 ;;		 -> buf@can_tx_buffer$F533(10), buf(10), 
  1217 ;;  element         2   14[BANK0 ] PTR void 
  1218 ;;		 -> txb_heartbeat@msg_sent(11), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  offset          2   20[BANK0 ] unsigned int 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      _Bool 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;Total ram usage:       10 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 6
  1237 ;; This function calls:
  1238 ;;		_get_offset_bytes
  1239 ;;		_memcpy
  1240 ;;		_srb_is_empty
  1241 ;; This function is called by:
  1242 ;;		_txb_heartbeat
  1243 ;;		_rcvb_pop_message
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text5
  1248  0000'                    __ptext5:
  1249                           	callstack 0
  1250  0000'                    _srb_pop:
  1251                           	callstack 23
  1252  0000'                    
  1253                           ;canlib/util/safe_ring_buffer.c: 58: _Bool srb_pop(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 59:              void *element);canlib/util/safe_ring_buffer.c: 60: {;canlib/
      +                          util/safe_ring_buffer.c: 61:     if (srb_is_empty(ctx)) {
  1254  0000' C00C' F000'        	movff	srb_pop@ctx,srb_is_empty@ctx
  1255  0004' C00D' F001'        	movff	srb_pop@ctx+1,srb_is_empty@ctx+1
  1256  0008' EC00' F000'        	call	_srb_is_empty	;wreg free
  1257  000C' 0900               	iorlw	0
  1258  000E' B500'              	btfsc	status,2,b
  1259  0010' EF00' F000'        	goto	u3051
  1260  0014' EF00' F000'        	goto	u3050
  1261  0018'                    u3051:
  1262  0018' EF00' F000'        	goto	l4475
  1263  001C'                    u3050:
  1264  001C'                    
  1265                           ;canlib/util/safe_ring_buffer.c: 62:         return 0;
  1266  001C' 0E00               	movlw	0
  1267  001E' EF00' F000'        	goto	l389
  1268  0022'                    l4475:
  1269                           
  1270                           ;canlib/util/safe_ring_buffer.c: 64:     size_t offset = get_offset_bytes(ctx, ctx->rd_i
      +                          dx);
  1271  0022' C00C' F006'        	movff	srb_pop@ctx,get_offset_bytes@ctx
  1272  0026' C00D' F007'        	movff	srb_pop@ctx+1,get_offset_bytes@ctx+1
  1273  002A' 0100               	movlb	0	; () banked
  1274  002C' EE20 F006          	lfsr	2,6
  1275  0030' 5100'              	movf	srb_pop@ctx& (0+255),w,b
  1276  0032' 2700'              	addwf	fsr2l,f,b
  1277  0034' 5100'              	movf	(srb_pop@ctx+1)& (0+255),w,b
  1278  0036' 2300'              	addwfc	fsr2h,f,b
  1279  0038' 0060' F000' F000'  	movff	postinc2,get_offset_bytes@index
  1280  003E' 0060' F000' F000'  	movff	postdec2,get_offset_bytes@index+1
  1281  0044' EC00' F000'        	call	_get_offset_bytes	;wreg free
  1282  0048' C006' F014'        	movff	?_get_offset_bytes,srb_pop@offset
  1283  004C' C007' F015'        	movff	?_get_offset_bytes+1,srb_pop@offset+1
  1284  0050'                    
  1285                           ;canlib/util/safe_ring_buffer.c: 65:     memcpy(element, ((uint8_t *)ctx->memory_pool) +
      +                           offset, ctx->element_size);
  1286  0050' C00E' F000'        	movff	srb_pop@element,memcpy@d1
  1287  0054' C00F' F001'        	movff	srb_pop@element+1,memcpy@d1+1
  1288  0058' 0060' F000' F000'  	movff	srb_pop@ctx,fsr2l
  1289  005E' 0060' F000' F000'  	movff	srb_pop@ctx+1,fsr2h
  1290  0064' 0060' F000' F000'  	movff	postinc2,??_srb_pop
  1291  006A' 0060' F000' F000'  	movff	postdec2,??_srb_pop+1
  1292  0070' 0100               	movlb	0	; () banked
  1293  0072' 5100'              	movf	srb_pop@offset& (0+255),w,b
  1294  0074' 2500'              	addwf	??_srb_pop& (0+255),w,b
  1295  0076' 6F00'              	movwf	memcpy@s1& (0+255),b
  1296  0078' 5100'              	movf	(srb_pop@offset+1)& (0+255),w,b
  1297  007A' 2100'              	addwfc	(??_srb_pop+1)& (0+255),w,b
  1298  007C' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
  1299  007E' EE20 F002          	lfsr	2,2
  1300  0082' 5100'              	movf	srb_pop@ctx& (0+255),w,b
  1301  0084' 2700'              	addwf	fsr2l,f,b
  1302  0086' 5100'              	movf	(srb_pop@ctx+1)& (0+255),w,b
  1303  0088' 2300'              	addwfc	fsr2h,f,b
  1304  008A' 0060' F000' F000'  	movff	postinc2,memcpy@n
  1305  0090' 0060' F000' F000'  	movff	postdec2,memcpy@n+1
  1306  0096' EC00' F000'        	call	_memcpy	;wreg free
  1307  009A'                    
  1308                           ;canlib/util/safe_ring_buffer.c: 66:     if ( ++(ctx->rd_idx) >= ctx->max_elements) {
  1309  009A' 0100               	movlb	0	; () banked
  1310  009C' EE20 F004          	lfsr	2,4
  1311  00A0' 5100'              	movf	srb_pop@ctx& (0+255),w,b
  1312  00A2' 2700'              	addwf	fsr2l,f,b
  1313  00A4' 5100'              	movf	(srb_pop@ctx+1)& (0+255),w,b
  1314  00A6' 2300'              	addwfc	fsr2h,f,b
  1315  00A8' EE10 F006          	lfsr	1,6
  1316  00AC' 5100'              	movf	srb_pop@ctx& (0+255),w,b
  1317  00AE' 2700'              	addwf	fsr1l,f,b
  1318  00B0' 5100'              	movf	(srb_pop@ctx+1)& (0+255),w,b
  1319  00B2' 2300'              	addwfc	fsr1h,f,b
  1320  00B4' 2B00'              	incf	postinc1,f,b
  1321  00B6' 0E00               	movlw	0
  1322  00B8' 2300'              	addwfc	postdec1,f,b
  1323  00BA' 5100'              	movf	postinc2,w,b
  1324  00BC' 5D00'              	subwf	postinc1,w,b
  1325  00BE' 5100'              	movf	postinc2,w,b
  1326  00C0' 5900'              	subwfb	postinc1,w,b
  1327  00C2' A100'              	btfss	status,0,b
  1328  00C4' EF00' F000'        	goto	u3061
  1329  00C8' EF00' F000'        	goto	u3060
  1330  00CC'                    u3061:
  1331  00CC' EF00' F000'        	goto	l4483
  1332  00D0'                    u3060:
  1333  00D0'                    
  1334                           ; BSR set to: 0
  1335                           ;canlib/util/safe_ring_buffer.c: 67:         ctx->rd_idx = 0;
  1336  00D0' EE20 F006          	lfsr	2,6
  1337  00D4' 5100'              	movf	srb_pop@ctx& (0+255),w,b
  1338  00D6' 2700'              	addwf	fsr2l,f,b
  1339  00D8' 5100'              	movf	(srb_pop@ctx+1)& (0+255),w,b
  1340  00DA' 2300'              	addwfc	fsr2h,f,b
  1341  00DC' 0E00               	movlw	0
  1342  00DE' 6E00'              	movwf	postinc2,c
  1343  00E0' 0E00               	movlw	0
  1344  00E2' 6E00'              	movwf	postdec2,c
  1345  00E4'                    l4483:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;canlib/util/safe_ring_buffer.c: 69:     return 1;
  1349  00E4' 0E01               	movlw	1
  1350  00E6'                    l389:
  1351  00E6' 0012               	return		;funcret
  1352  00E8'                    __end_of_srb_pop:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _srb_is_empty *****************
  1356 ;; Defined at:
  1357 ;;		line 49 in file "canlib/util/safe_ring_buffer.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  ctx             2    0[BANK0 ] PTR const struct .
  1360 ;;		 -> buf@can_tx_buffer$F533(10), buf(10), 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      _Bool 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:        6 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 4
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_txb_heartbeat
  1383 ;;		_srb_pop
  1384 ;;		_rcvb_is_empty
  1385 ;;		_srb_peek
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text6
  1390  0000'                    __ptext6:
  1391                           	callstack 0
  1392  0000'                    _srb_is_empty:
  1393                           	callstack 24
  1394  0000'                    
  1395                           ;canlib/util/safe_ring_buffer.c: 49: _Bool srb_is_empty(const srb_ctx_t *ctx);canlib/uti
      +                          l/safe_ring_buffer.c: 50: {;canlib/util/safe_ring_buffer.c: 51:     if (ctx->wr_idx == c
      +                          tx->rd_idx) {
  1396  0000' 0100               	movlb	0	; () banked
  1397  0002' EE20 F006          	lfsr	2,6
  1398  0006' 5100'              	movf	srb_is_empty@ctx& (0+255),w,b
  1399  0008' 2700'              	addwf	fsr2l,f,b
  1400  000A' 5100'              	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  1401  000C' 2300'              	addwfc	fsr2h,f,b
  1402  000E' EE10 F008          	lfsr	1,8
  1403  0012' 5100'              	movf	srb_is_empty@ctx& (0+255),w,b
  1404  0014' 2700'              	addwf	fsr1l,f,b
  1405  0016' 5100'              	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  1406  0018' 2300'              	addwfc	fsr1h,f,b
  1407  001A' 5100'              	movf	postinc2,w,b
  1408  001C' 1900'              	xorwf	postinc1,w,b
  1409  001E' E107               	bnz	u2961
  1410  0020' 5100'              	movf	postinc2,w,b
  1411  0022' 1900'              	xorwf	postinc1,w,b
  1412  0024' A500'              	btfss	status,2,b
  1413  0026' EF00' F000'        	goto	u2961
  1414  002A' EF00' F000'        	goto	u2960
  1415  002E'                    u2961:
  1416  002E' EF00' F000'        	goto	l4401
  1417  0032'                    u2960:
  1418  0032'                    
  1419                           ; BSR set to: 0
  1420                           ;canlib/util/safe_ring_buffer.c: 52:         return 1;
  1421  0032' 0E01               	movlw	1
  1422  0034' EF00' F000'        	goto	l384
  1423  0038'                    l4401:
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;canlib/util/safe_ring_buffer.c: 54:         return 0;
  1427  0038' 0E00               	movlw	0
  1428  003A'                    l384:
  1429                           
  1430                           ; BSR set to: 0
  1431  003A' 0012               	return		;funcret
  1432  003C'                    __end_of_srb_is_empty:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _can_send_rdy *****************
  1436 ;; Defined at:
  1437 ;;		line 114 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      _Bool 
  1444 ;; Registers used:
  1445 ;;		wreg
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 4
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;;		_txb_heartbeat
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text7
  1467  0000'                    __ptext7:
  1468                           	callstack 0
  1469  0000'                    _can_send_rdy:
  1470                           	callstack 25
  1471  0000'                    
  1472                           ;canlib/pic18f26k83/pic18f26k83_can.c: 115:     return TXB0CONbits.TXREQ == 0;
  1473  0000' 0137               	movlb	55	; () banked
  1474  0002' A7E0               	btfss	224,3,b	;volatile
  1475  0004' EF00' F000'        	goto	u3121
  1476  0008' EF00' F000'        	goto	u3120
  1477  000C'                    u3121:
  1478  000C' 0E01               	movlw	1
  1479  000E' EF00' F000'        	goto	u3130
  1480  0012'                    u3120:
  1481  0012' 0E00               	movlw	0
  1482  0014'                    u3130:
  1483  0014'                    
  1484                           ; BSR set to: 55
  1485  0014' 0012               	return		;funcret
  1486  0016'                    __end_of_can_send_rdy:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _can_send *****************
  1490 ;; Defined at:
  1491 ;;		line 85 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  message         2   11[BANK0 ] PTR const struct .
  1494 ;;		 -> txb_heartbeat@msg_sent(11), 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;Total ram usage:        4 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 5
  1513 ;; This function calls:
  1514 ;;		_memcpy
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;;		_txb_heartbeat
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text8
  1522  0000'                    __ptext8:
  1523                           	callstack 0
  1524  0000'                    _can_send:
  1525                           	callstack 24
  1526  0000'                    
  1527                           ;canlib/pic18f26k83/pic18f26k83_can.c: 87:     if (TXB0CONbits.TXREQ != 0) {
  1528  0000' 0137               	movlb	55	; () banked
  1529  0002' A7E0               	btfss	224,3,b	;volatile
  1530  0004' EF00' F000'        	goto	u3081
  1531  0008' EF00' F000'        	goto	u3080
  1532  000C'                    u3081:
  1533  000C' EF00' F000'        	goto	l4499
  1534  0010'                    u3080:
  1535  0010' EF00' F000'        	goto	l479
  1536  0014'                    l4499:
  1537                           
  1538                           ; BSR set to: 55
  1539                           ;canlib/pic18f26k83/pic18f26k83_can.c: 92:     if(message->data_len > 8 || message->sid 
      +                          > 0x7FF) {
  1540  0014' 0100               	movlb	0	; () banked
  1541  0016' EE20 F002          	lfsr	2,2
  1542  001A' 5100'              	movf	can_send@message& (0+255),w,b
  1543  001C' 2700'              	addwf	fsr2l,f,b
  1544  001E' 5100'              	movf	(can_send@message+1)& (0+255),w,b
  1545  0020' 2300'              	addwfc	fsr2h,f,b
  1546  0022' 0E09               	movlw	9
  1547  0024' 6100'              	cpfslt	indf2,b
  1548  0026' EF00' F000'        	goto	u3091
  1549  002A' EF00' F000'        	goto	u3090
  1550  002E'                    u3091:
  1551  002E' EF00' F000'        	goto	l479
  1552  0032'                    u3090:
  1553  0032'                    
  1554                           ; BSR set to: 0
  1555  0032' 0060' F000' F000'  	movff	can_send@message,fsr2l
  1556  0038' 0060' F000' F000'  	movff	can_send@message+1,fsr2h
  1557  003E' 5300'              	movf	postinc2,f,b
  1558  0040' 0E08               	movlw	8
  1559  0042' 5D00'              	subwf	postinc2,w,b
  1560  0044' A100'              	btfss	status,0,b
  1561  0046' EF00' F000'        	goto	u3101
  1562  004A' EF00' F000'        	goto	u3100
  1563  004E'                    u3101:
  1564  004E' EF00' F000'        	goto	l4503
  1565  0052'                    u3100:
  1566  0052' EF00' F000'        	goto	l479
  1567  0056'                    l4503:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;canlib/pic18f26k83/pic18f26k83_can.c: 97:     TXB0CONbits.TXPRI = 0;
  1571  0056' 0EFC               	movlw	-4
  1572  0058' 0137               	movlb	55	; () banked
  1573  005A' 17E0               	andwf	224,f,b	;volatile
  1574  005C'                    
  1575                           ; BSR set to: 55
  1576                           ;canlib/pic18f26k83/pic18f26k83_can.c: 98:     TXB0SIDH = ((message->sid) >> 3);
  1577  005C' 0060' F000' F000'  	movff	can_send@message,fsr2l
  1578  0062' 0060' F000' F000'  	movff	can_send@message+1,fsr2h
  1579  0068' 0060' F000' F000'  	movff	postinc2,??_can_send
  1580  006E' 0060' F000' F000'  	movff	postdec2,??_can_send+1
  1581  0074' 0100               	movlb	0	; () banked
  1582  0076' 9100'              	bcf	status,0,b
  1583  0078' 3300'              	rrcf	(??_can_send+1)& (0+255),f,b
  1584  007A' 3300'              	rrcf	??_can_send& (0+255),f,b
  1585  007C' 9100'              	bcf	status,0,b
  1586  007E' 3300'              	rrcf	(??_can_send+1)& (0+255),f,b
  1587  0080' 3300'              	rrcf	??_can_send& (0+255),f,b
  1588  0082' 9100'              	bcf	status,0,b
  1589  0084' 3300'              	rrcf	(??_can_send+1)& (0+255),f,b
  1590  0086' 3300'              	rrcf	??_can_send& (0+255),f,b
  1591  0088' 5100'              	movf	??_can_send& (0+255),w,b
  1592  008A' 0137               	movlb	55	; () banked
  1593  008C' 6FE1               	movwf	225,b	;volatile
  1594  008E'                    
  1595                           ; BSR set to: 55
  1596                           ;canlib/pic18f26k83/pic18f26k83_can.c: 99:     TXB0SIDL = (((message->sid) & 0x7) << 5);
  1597  008E' 0060' F000' F000'  	movff	can_send@message,fsr2l
  1598  0094' 0060' F000' F000'  	movff	can_send@message+1,fsr2h
  1599  009A' 5100'              	movf	indf2,w,b
  1600  009C' 0100               	movlb	0	; () banked
  1601  009E' 6F00'              	movwf	??_can_send& (0+255),b
  1602  00A0' 0E07               	movlw	7
  1603  00A2' 1700'              	andwf	??_can_send& (0+255),f,b
  1604  00A4' 0E05               	movlw	5
  1605  00A6' 6F00'              	movwf	(??_can_send+1)& (0+255),b
  1606  00A8'                    u3115:
  1607  00A8' 9100'              	bcf	status,0,b
  1608  00AA' 3700'              	rlcf	??_can_send& (0+255),f,b
  1609  00AC' 2F00'              	decfsz	(??_can_send+1)& (0+255),f,b
  1610  00AE' EF00' F000'        	goto	u3115
  1611  00B2' 5100'              	movf	??_can_send& (0+255),w,b
  1612  00B4' 0137               	movlb	55	; () banked
  1613  00B6' 6FE2               	movwf	226,b	;volatile
  1614  00B8'                    
  1615                           ; BSR set to: 55
  1616                           ;canlib/pic18f26k83/pic18f26k83_can.c: 102:     TXB0DLCbits.TXRTR = 0;
  1617  00B8' 9DE5               	bcf	229,6,b	;volatile
  1618  00BA'                    
  1619                           ; BSR set to: 55
  1620                           ;canlib/pic18f26k83/pic18f26k83_can.c: 104:     TXB0DLCbits.DLC = message->data_len;
  1621  00BA' 0100               	movlb	0	; () banked
  1622  00BC' EE20 F002          	lfsr	2,2
  1623  00C0' 5100'              	movf	can_send@message& (0+255),w,b
  1624  00C2' 2700'              	addwf	fsr2l,f,b
  1625  00C4' 5100'              	movf	(can_send@message+1)& (0+255),w,b
  1626  00C6' 2300'              	addwfc	fsr2h,f,b
  1627  00C8' 5100'              	movf	indf2,w,b
  1628  00CA' 6F00'              	movwf	??_can_send& (0+255),b
  1629  00CC' 0137               	movlb	55	; () banked
  1630  00CE' 51E5               	movf	229,w,b	;volatile
  1631  00D0' 0100               	movlb	0	; () banked
  1632  00D2' 1900'              	xorwf	??_can_send& (0+255),w,b
  1633  00D4' 0BF0               	andlw	-16
  1634  00D6' 1900'              	xorwf	??_can_send& (0+255),w,b
  1635  00D8' 0137               	movlb	55	; () banked
  1636  00DA' 6FE5               	movwf	229,b	;volatile
  1637  00DC'                    
  1638                           ; BSR set to: 55
  1639                           ;canlib/pic18f26k83/pic18f26k83_can.c: 108:     memcpy((void*) &TXB0D0, message->data, m
      +                          essage->data_len);
  1640  00DC' 0EE6               	movlw	230
  1641  00DE' 0100               	movlb	0	; () banked
  1642  00E0' 6F00'              	movwf	memcpy@d1& (0+255),b
  1643  00E2' 0E37               	movlw	55
  1644  00E4' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
  1645  00E6' 0E03               	movlw	3
  1646  00E8' 2500'              	addwf	can_send@message& (0+255),w,b
  1647  00EA' 6F00'              	movwf	memcpy@s1& (0+255),b
  1648  00EC' 0E00               	movlw	0
  1649  00EE' 2100'              	addwfc	(can_send@message+1)& (0+255),w,b
  1650  00F0' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
  1651  00F2' EE20 F002          	lfsr	2,2
  1652  00F6' 5100'              	movf	can_send@message& (0+255),w,b
  1653  00F8' 2700'              	addwf	fsr2l,f,b
  1654  00FA' 5100'              	movf	(can_send@message+1)& (0+255),w,b
  1655  00FC' 2300'              	addwfc	fsr2h,f,b
  1656  00FE' 5100'              	movf	indf2,w,b
  1657  0100' 6F00'              	movwf	??_can_send& (0+255),b
  1658  0102' 5100'              	movf	??_can_send& (0+255),w,b
  1659  0104' 6F00'              	movwf	memcpy@n& (0+255),b
  1660  0106' 6B00'              	clrf	(memcpy@n+1)& (0+255),b
  1661  0108' EC00' F000'        	call	_memcpy	;wreg free
  1662  010C'                    
  1663                           ;canlib/pic18f26k83/pic18f26k83_can.c: 111:     TXB0CONbits.TXREQ = 1;
  1664  010C' 0137               	movlb	55	; () banked
  1665  010E' 87E0               	bsf	224,3,b	;volatile
  1666  0110'                    l479:
  1667  0110' 0012               	return		;funcret
  1668  0112'                    __end_of_can_send:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _timer0_init *****************
  1672 ;; Defined at:
  1673 ;;		line 30 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 4
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text9
  1702  0000'                    __ptext9:
  1703                           	callstack 0
  1704  0000'                    _timer0_init:
  1705                           	callstack 26
  1706  0000'                    
  1707                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 31:     PIE3bits.TMR0IE = 1;
  1708  0000' 0139               	movlb	57	; () banked
  1709  0002' 8F93               	bsf	147,7,b	;volatile
  1710                           
  1711                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 33:     T0CON0bits.EN = 0;
  1712  0004' 9EB8               	bcf	184,7,c	;volatile
  1713                           
  1714                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 34:     T0CON0bits.MD16 = 0;
  1715  0006' 98B8               	bcf	184,4,c	;volatile
  1716  0008'                    
  1717                           ; BSR set to: 57
  1718                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 36:     T0CON0bits.OUTPS = 0;
  1719  0008' 0EF0               	movlw	-16
  1720  000A' 16B8               	andwf	184,f,c	;volatile
  1721                           
  1722                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 37:     T0CON1bits.CKPS = 0;
  1723  000C' 0EF0               	movlw	-16
  1724  000E' 16B9               	andwf	185,f,c	;volatile
  1725                           
  1726                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 39:     T0CON1bits.CS = 0x5;
  1727  0010' 50B9               	movf	185,w,c	;volatile
  1728  0012' 0B1F               	andlw	-225
  1729  0014' 09A0               	iorlw	160
  1730  0016' 6EB9               	movwf	185,c	;volatile
  1731  0018'                    
  1732                           ; BSR set to: 57
  1733                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 40:     T0CON1bits.ASYNC = 0;
  1734  0018' 98B9               	bcf	185,4,c	;volatile
  1735  001A'                    
  1736                           ; BSR set to: 57
  1737                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 43:     T0CON0bits.EN = 1;
  1738  001A' 8EB8               	bsf	184,7,c	;volatile
  1739  001C'                    
  1740                           ; BSR set to: 57
  1741  001C' 0012               	return		;funcret
  1742  001E'                    __end_of_timer0_init:
  1743                           	callstack 0
  1744                           
  1745 ;; *************** function _send_status_ok *****************
  1746 ;; Defined at:
  1747 ;;		line 170 in file "main.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  board_stat_m   11   24[BANK0 ] struct .
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;Total ram usage:       11 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 8
  1768 ;; This function calls:
  1769 ;;		_build_board_stat_msg
  1770 ;;		_millis
  1771 ;;		_txb_enqueue
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text10
  1778  0000'                    __ptext10:
  1779                           	callstack 0
  1780  0000'                    _send_status_ok:
  1781                           	callstack 22
  1782  0000'                    
  1783                           ;main.c: 171:     can_msg_t board_stat_msg;;main.c: 172:     build_board_stat_msg(millis
      +                          (), E_NOMINAL, ((void*)0), 0, &board_stat_msg);
  1784  0000' EC00' F000'        	call	_millis	;wreg free
  1785  0004' C000' F006'        	movff	?_millis,build_board_stat_msg@timestamp
  1786  0008' C001' F007'        	movff	?_millis+1,build_board_stat_msg@timestamp+1
  1787  000C' C002' F008'        	movff	?_millis+2,build_board_stat_msg@timestamp+2
  1788  0010' C003' F009'        	movff	?_millis+3,build_board_stat_msg@timestamp+3
  1789  0014' 0E00               	movlw	0
  1790  0016' 0100               	movlb	0	; () banked
  1791  0018' 6F00'              	movwf	build_board_stat_msg@error_code& (0+255),b
  1792  001A' 0E00               	movlw	0
  1793  001C' 6F00'              	movwf	build_board_stat_msg@error_data& (0+255),b
  1794  001E' 0E00               	movlw	0
  1795  0020' 6F00'              	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  1796  0022' 0E00               	movlw	0
  1797  0024' 6F00'              	movwf	build_board_stat_msg@error_data_len& (0+255),b
  1798  0026' 0E00'              	movlw	low send_status_ok@board_stat_msg
  1799  0028' 6F00'              	movwf	build_board_stat_msg@output& (0+255),b
  1800  002A' 0E00'              	movlw	high send_status_ok@board_stat_msg
  1801  002C' 6F00'              	movwf	(build_board_stat_msg@output+1)& (0+255),b
  1802  002E' EC00' F000'        	call	_build_board_stat_msg	;wreg free
  1803  0032'                    
  1804                           ;main.c: 175:     txb_enqueue(&board_stat_msg);
  1805  0032' 0E00'              	movlw	low send_status_ok@board_stat_msg
  1806  0034' 0100               	movlb	0	; () banked
  1807  0036' 6F00'              	movwf	txb_enqueue@msg& (0+255),b
  1808  0038' 0E00'              	movlw	high send_status_ok@board_stat_msg
  1809  003A' 6F00'              	movwf	(txb_enqueue@msg+1)& (0+255),b
  1810  003C' EC00' F000'        	call	_txb_enqueue	;wreg free
  1811  0040' 0012               	return		;funcret
  1812  0042'                    __end_of_send_status_ok:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _txb_enqueue *****************
  1816 ;; Defined at:
  1817 ;;		line 23 in file "canlib/util/can_tx_buffer.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  msg             2   22[BANK0 ] PTR const struct .
  1820 ;;		 -> send_status_ok@board_stat_msg(11), main@radiation_msg(11), 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      _Bool 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;Total ram usage:        2 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 7
  1839 ;; This function calls:
  1840 ;;		_srb_is_full
  1841 ;;		_srb_push
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;;		_send_status_ok
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text11
  1849  0000'                    __ptext11:
  1850                           	callstack 0
  1851  0000'                    _txb_enqueue:
  1852                           	callstack 23
  1853  0000'                    
  1854                           ;canlib/util/can_tx_buffer.c: 24:     if (srb_is_full(&buf)) {
  1855  0000' 0E00'              	movlw	low _buf@can_tx_buffer$F533
  1856  0002' 0100               	movlb	0	; () banked
  1857  0004' 6F00'              	movwf	srb_is_full@ctx& (0+255),b
  1858  0006' 0E00'              	movlw	high _buf@can_tx_buffer$F533
  1859  0008' 6F00'              	movwf	(srb_is_full@ctx+1)& (0+255),b
  1860  000A' EC00' F000'        	call	_srb_is_full	;wreg free
  1861  000E' 0900               	iorlw	0
  1862  0010' B500'              	btfsc	status,2,b
  1863  0012' EF00' F000'        	goto	u3071
  1864  0016' EF00' F000'        	goto	u3070
  1865  001A'                    u3071:
  1866  001A' EF00' F000'        	goto	l4491
  1867  001E'                    u3070:
  1868  001E' EF00' F000'        	goto	l352
  1869  0022'                    l4491:
  1870                           
  1871                           ;canlib/util/can_tx_buffer.c: 27:     srb_push(&buf, msg);
  1872  0022' 0E00'              	movlw	low _buf@can_tx_buffer$F533
  1873  0024' 0100               	movlb	0	; () banked
  1874  0026' 6F00'              	movwf	srb_push@ctx& (0+255),b
  1875  0028' 0E00'              	movlw	high _buf@can_tx_buffer$F533
  1876  002A' 6F00'              	movwf	(srb_push@ctx+1)& (0+255),b
  1877  002C' C016' F00E'        	movff	txb_enqueue@msg,srb_push@element
  1878  0030' C017' F00F'        	movff	txb_enqueue@msg+1,srb_push@element+1
  1879  0034' EC00' F000'        	call	_srb_push	;wreg free
  1880  0038'                    l352:
  1881  0038' 0012               	return		;funcret
  1882  003A'                    __end_of_txb_enqueue:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _srb_push *****************
  1886 ;; Defined at:
  1887 ;;		line 26 in file "canlib/util/safe_ring_buffer.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  ctx             2   12[BANK0 ] PTR struct .
  1890 ;;		 -> buf@can_tx_buffer$F533(10), buf(10), 
  1891 ;;  element         2   14[BANK0 ] PTR const void 
  1892 ;;		 -> send_status_ok@board_stat_msg(11), main@radiation_msg(11), 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  offset          2   20[BANK0 ] unsigned int 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      _Bool 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1904 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;Total ram usage:       10 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 6
  1911 ;; This function calls:
  1912 ;;		_get_offset_bytes
  1913 ;;		_memcpy
  1914 ;;		_srb_is_full
  1915 ;; This function is called by:
  1916 ;;		_txb_enqueue
  1917 ;;		_rcvb_push_message
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text12
  1922  0000'                    __ptext12:
  1923                           	callstack 0
  1924  0000'                    _srb_push:
  1925                           	callstack 23
  1926  0000'                    
  1927                           ;canlib/util/safe_ring_buffer.c: 26: _Bool srb_push(srb_ctx_t *ctx,;canlib/util/safe_rin
      +                          g_buffer.c: 27:               const void *element);canlib/util/safe_ring_buffer.c: 28: {
      +                          ;canlib/util/safe_ring_buffer.c: 29:     if (srb_is_full(ctx)) {
  1928  0000' C00C' F000'        	movff	srb_push@ctx,srb_is_full@ctx
  1929  0004' C00D' F001'        	movff	srb_push@ctx+1,srb_is_full@ctx+1
  1930  0008' EC00' F000'        	call	_srb_is_full	;wreg free
  1931  000C' 0900               	iorlw	0
  1932  000E' B500'              	btfsc	status,2,b
  1933  0010' EF00' F000'        	goto	u2941
  1934  0014' EF00' F000'        	goto	u2940
  1935  0018'                    u2941:
  1936  0018' EF00' F000'        	goto	l4381
  1937  001C'                    u2940:
  1938  001C'                    
  1939                           ;canlib/util/safe_ring_buffer.c: 30:         return 0;
  1940  001C' 0E00               	movlw	0
  1941  001E' EF00' F000'        	goto	l372
  1942  0022'                    l4381:
  1943                           
  1944                           ;canlib/util/safe_ring_buffer.c: 32:     size_t offset = get_offset_bytes(ctx, ctx->wr_i
      +                          dx);
  1945  0022' C00C' F006'        	movff	srb_push@ctx,get_offset_bytes@ctx
  1946  0026' C00D' F007'        	movff	srb_push@ctx+1,get_offset_bytes@ctx+1
  1947  002A' 0100               	movlb	0	; () banked
  1948  002C' EE20 F008          	lfsr	2,8
  1949  0030' 5100'              	movf	srb_push@ctx& (0+255),w,b
  1950  0032' 2700'              	addwf	fsr2l,f,b
  1951  0034' 5100'              	movf	(srb_push@ctx+1)& (0+255),w,b
  1952  0036' 2300'              	addwfc	fsr2h,f,b
  1953  0038' 0060' F000' F000'  	movff	postinc2,get_offset_bytes@index
  1954  003E' 0060' F000' F000'  	movff	postdec2,get_offset_bytes@index+1
  1955  0044' EC00' F000'        	call	_get_offset_bytes	;wreg free
  1956  0048' C006' F014'        	movff	?_get_offset_bytes,srb_push@offset
  1957  004C' C007' F015'        	movff	?_get_offset_bytes+1,srb_push@offset+1
  1958  0050'                    
  1959                           ;canlib/util/safe_ring_buffer.c: 33:     memcpy(((uint8_t *) ctx->memory_pool) + offset,
      +                           element, ctx->element_size);
  1960  0050' 0060' F000' F000'  	movff	srb_push@ctx,fsr2l
  1961  0056' 0060' F000' F000'  	movff	srb_push@ctx+1,fsr2h
  1962  005C' 0060' F000' F000'  	movff	postinc2,??_srb_push
  1963  0062' 0060' F000' F000'  	movff	postdec2,??_srb_push+1
  1964  0068' 0100               	movlb	0	; () banked
  1965  006A' 5100'              	movf	srb_push@offset& (0+255),w,b
  1966  006C' 2500'              	addwf	??_srb_push& (0+255),w,b
  1967  006E' 6F00'              	movwf	memcpy@d1& (0+255),b
  1968  0070' 5100'              	movf	(srb_push@offset+1)& (0+255),w,b
  1969  0072' 2100'              	addwfc	(??_srb_push+1)& (0+255),w,b
  1970  0074' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
  1971  0076' C00E' F002'        	movff	srb_push@element,memcpy@s1
  1972  007A' C00F' F003'        	movff	srb_push@element+1,memcpy@s1+1
  1973  007E' EE20 F002          	lfsr	2,2
  1974  0082' 5100'              	movf	srb_push@ctx& (0+255),w,b
  1975  0084' 2700'              	addwf	fsr2l,f,b
  1976  0086' 5100'              	movf	(srb_push@ctx+1)& (0+255),w,b
  1977  0088' 2300'              	addwfc	fsr2h,f,b
  1978  008A' 0060' F000' F000'  	movff	postinc2,memcpy@n
  1979  0090' 0060' F000' F000'  	movff	postdec2,memcpy@n+1
  1980  0096' EC00' F000'        	call	_memcpy	;wreg free
  1981  009A'                    
  1982                           ;canlib/util/safe_ring_buffer.c: 34:     if ( ++(ctx->wr_idx) >= ctx->max_elements) {
  1983  009A' 0100               	movlb	0	; () banked
  1984  009C' EE20 F004          	lfsr	2,4
  1985  00A0' 5100'              	movf	srb_push@ctx& (0+255),w,b
  1986  00A2' 2700'              	addwf	fsr2l,f,b
  1987  00A4' 5100'              	movf	(srb_push@ctx+1)& (0+255),w,b
  1988  00A6' 2300'              	addwfc	fsr2h,f,b
  1989  00A8' EE10 F008          	lfsr	1,8
  1990  00AC' 5100'              	movf	srb_push@ctx& (0+255),w,b
  1991  00AE' 2700'              	addwf	fsr1l,f,b
  1992  00B0' 5100'              	movf	(srb_push@ctx+1)& (0+255),w,b
  1993  00B2' 2300'              	addwfc	fsr1h,f,b
  1994  00B4' 2B00'              	incf	postinc1,f,b
  1995  00B6' 0E00               	movlw	0
  1996  00B8' 2300'              	addwfc	postdec1,f,b
  1997  00BA' 5100'              	movf	postinc2,w,b
  1998  00BC' 5D00'              	subwf	postinc1,w,b
  1999  00BE' 5100'              	movf	postinc2,w,b
  2000  00C0' 5900'              	subwfb	postinc1,w,b
  2001  00C2' A100'              	btfss	status,0,b
  2002  00C4' EF00' F000'        	goto	u2951
  2003  00C8' EF00' F000'        	goto	u2950
  2004  00CC'                    u2951:
  2005  00CC' EF00' F000'        	goto	l4389
  2006  00D0'                    u2950:
  2007  00D0'                    
  2008                           ; BSR set to: 0
  2009                           ;canlib/util/safe_ring_buffer.c: 35:         ctx->wr_idx = 0;
  2010  00D0' EE20 F008          	lfsr	2,8
  2011  00D4' 5100'              	movf	srb_push@ctx& (0+255),w,b
  2012  00D6' 2700'              	addwf	fsr2l,f,b
  2013  00D8' 5100'              	movf	(srb_push@ctx+1)& (0+255),w,b
  2014  00DA' 2300'              	addwfc	fsr2h,f,b
  2015  00DC' 0E00               	movlw	0
  2016  00DE' 6E00'              	movwf	postinc2,c
  2017  00E0' 0E00               	movlw	0
  2018  00E2' 6E00'              	movwf	postdec2,c
  2019  00E4'                    l4389:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;canlib/util/safe_ring_buffer.c: 37:     return 1;
  2023  00E4' 0E01               	movlw	1
  2024  00E6'                    l372:
  2025  00E6' 0012               	return		;funcret
  2026  00E8'                    __end_of_srb_push:
  2027                           	callstack 0
  2028                           
  2029 ;; *************** function _srb_is_full *****************
  2030 ;; Defined at:
  2031 ;;		line 40 in file "canlib/util/safe_ring_buffer.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  ctx             2    0[BANK0 ] PTR const struct .
  2034 ;;		 -> buf@can_tx_buffer$F533(10), buf(10), 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      _Bool 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;Total ram usage:        6 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 4
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_txb_enqueue
  2057 ;;		_srb_push
  2058 ;;		_rcvb_is_full
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text13
  2063  0000'                    __ptext13:
  2064                           	callstack 0
  2065  0000'                    _srb_is_full:
  2066                           	callstack 24
  2067  0000'                    
  2068                           ;canlib/util/safe_ring_buffer.c: 40: _Bool srb_is_full(const srb_ctx_t *ctx);canlib/util
      +                          /safe_ring_buffer.c: 41: {;canlib/util/safe_ring_buffer.c: 42:     if ((ctx->wr_idx + 1 
      +                          == ctx->rd_idx) || (ctx->wr_idx + 1 == ctx->max_elements && ctx->rd_idx == 0)) {
  2069  0000' 0100               	movlb	0	; () banked
  2070  0002' EE20 F006          	lfsr	2,6
  2071  0006' 5100'              	movf	srb_is_full@ctx& (0+255),w,b
  2072  0008' 2700'              	addwf	fsr2l,f,b
  2073  000A' 5100'              	movf	(srb_is_full@ctx+1)& (0+255),w,b
  2074  000C' 2300'              	addwfc	fsr2h,f,b
  2075  000E' EE10 F008          	lfsr	1,8
  2076  0012' 5100'              	movf	srb_is_full@ctx& (0+255),w,b
  2077  0014' 2700'              	addwf	fsr1l,f,b
  2078  0016' 5100'              	movf	(srb_is_full@ctx+1)& (0+255),w,b
  2079  0018' 2300'              	addwfc	fsr1h,f,b
  2080  001A' 0060' F000' F000'  	movff	postinc1,??_srb_is_full+2
  2081  0020' 0060' F000' F000'  	movff	postdec1,??_srb_is_full+3
  2082  0026' 0E01               	movlw	1
  2083  0028' 2700'              	addwf	(??_srb_is_full+2)& (0+255),f,b
  2084  002A' 0E00               	movlw	0
  2085  002C' 2300'              	addwfc	(??_srb_is_full+3)& (0+255),f,b
  2086  002E' 5100'              	movf	postinc2,w,b
  2087  0030' 1900'              	xorwf	(??_srb_is_full+2)& (0+255),w,b
  2088  0032' E109               	bnz	u2890
  2089  0034' 5100'              	movf	postinc2,w,b
  2090  0036' 1900'              	xorwf	(??_srb_is_full+3)& (0+255),w,b
  2091  0038' B500'              	btfsc	status,2,b
  2092  003A' EF00' F000'        	goto	u2891
  2093  003E' EF00' F000'        	goto	u2890
  2094  0042'                    u2891:
  2095  0042' EF00' F000'        	goto	l4341
  2096  0046'                    u2890:
  2097  0046'                    
  2098                           ; BSR set to: 0
  2099  0046' EE20 F004          	lfsr	2,4
  2100  004A' 5100'              	movf	srb_is_full@ctx& (0+255),w,b
  2101  004C' 2700'              	addwf	fsr2l,f,b
  2102  004E' 5100'              	movf	(srb_is_full@ctx+1)& (0+255),w,b
  2103  0050' 2300'              	addwfc	fsr2h,f,b
  2104  0052' EE10 F008          	lfsr	1,8
  2105  0056' 5100'              	movf	srb_is_full@ctx& (0+255),w,b
  2106  0058' 2700'              	addwf	fsr1l,f,b
  2107  005A' 5100'              	movf	(srb_is_full@ctx+1)& (0+255),w,b
  2108  005C' 2300'              	addwfc	fsr1h,f,b
  2109  005E' 0060' F000' F000'  	movff	postinc1,??_srb_is_full+2
  2110  0064' 0060' F000' F000'  	movff	postdec1,??_srb_is_full+3
  2111  006A' 0E01               	movlw	1
  2112  006C' 2700'              	addwf	(??_srb_is_full+2)& (0+255),f,b
  2113  006E' 0E00               	movlw	0
  2114  0070' 2300'              	addwfc	(??_srb_is_full+3)& (0+255),f,b
  2115  0072' 5100'              	movf	postinc2,w,b
  2116  0074' 1900'              	xorwf	(??_srb_is_full+2)& (0+255),w,b
  2117  0076' E107               	bnz	u2901
  2118  0078' 5100'              	movf	postinc2,w,b
  2119  007A' 1900'              	xorwf	(??_srb_is_full+3)& (0+255),w,b
  2120  007C' A500'              	btfss	status,2,b
  2121  007E' EF00' F000'        	goto	u2901
  2122  0082' EF00' F000'        	goto	u2900
  2123  0086'                    u2901:
  2124  0086' EF00' F000'        	goto	l4347
  2125  008A'                    u2900:
  2126  008A'                    
  2127                           ; BSR set to: 0
  2128  008A' EE20 F006          	lfsr	2,6
  2129  008E' 5100'              	movf	srb_is_full@ctx& (0+255),w,b
  2130  0090' 2700'              	addwf	fsr2l,f,b
  2131  0092' 5100'              	movf	(srb_is_full@ctx+1)& (0+255),w,b
  2132  0094' 2300'              	addwfc	fsr2h,f,b
  2133  0096' 5100'              	movf	postinc2,w,b
  2134  0098' 1100'              	iorwf	postinc2,w,b
  2135  009A' A500'              	btfss	status,2,b
  2136  009C' EF00' F000'        	goto	u2911
  2137  00A0' EF00' F000'        	goto	u2910
  2138  00A4'                    u2911:
  2139  00A4' EF00' F000'        	goto	l4347
  2140  00A8'                    u2910:
  2141  00A8'                    l4341:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;canlib/util/safe_ring_buffer.c: 43:         return 1;
  2145  00A8' 0E01               	movlw	1
  2146  00AA' EF00' F000'        	goto	l379
  2147  00AE'                    l4347:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;canlib/util/safe_ring_buffer.c: 45:         return 0;
  2151  00AE' 0E00               	movlw	0
  2152  00B0'                    l379:
  2153                           
  2154                           ; BSR set to: 0
  2155  00B0' 0012               	return		;funcret
  2156  00B2'                    __end_of_srb_is_full:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _memcpy *****************
  2160 ;; Defined at:
  2161 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memcpy.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  d1              2    0[BANK0 ] PTR void 
  2164 ;;		 -> tx_pool(100), can_handle_interrupt@rcvd_msg_1373(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
  2165 ;;		 -> txb_heartbeat@msg_sent(11), 
  2166 ;;  s1              2    2[BANK0 ] PTR const void 
  2167 ;;		 -> send_status_ok@board_stat_msg(11), main@radiation_msg(11), tx_pool(100), RXB1D0(1), 
  2168 ;;		 -> RXB0D0(1), txb_heartbeat@msg_sent(11), 
  2169 ;;  n               2    4[BANK0 ] unsigned int 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2172 ;;		 -> send_status_ok@board_stat_msg(11), main@radiation_msg(11), tx_pool(100), RXB1D0(1), 
  2173 ;;		 -> RXB0D0(1), txb_heartbeat@msg_sent(11), 
  2174 ;;  d               2    7[BANK0 ] PTR unsigned char 
  2175 ;;		 -> tx_pool(100), can_handle_interrupt@rcvd_msg_1373(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
  2176 ;;		 -> txb_heartbeat@msg_sent(11), 
  2177 ;;  tmp             1    6[BANK0 ] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  2    0[BANK0 ] PTR void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2187 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;Total ram usage:       11 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 4
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_srb_push
  2198 ;;		_srb_pop
  2199 ;;		_can_send
  2200 ;;		_srb_peek
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text14
  2205  0000'                    __ptext14:
  2206                           	callstack 0
  2207  0000'                    _memcpy:
  2208                           	callstack 24
  2209  0000' C002' F009'        	movff	memcpy@s1,memcpy@s
  2210  0004' C003' F00A'        	movff	memcpy@s1+1,memcpy@s+1
  2211  0008' C000' F007'        	movff	memcpy@d1,memcpy@d
  2212  000C' C001' F008'        	movff	memcpy@d1+1,memcpy@d+1
  2213  0010' EF00' F000'        	goto	l4371
  2214  0014'                    l4363:
  2215                           
  2216                           ; BSR set to: 0
  2217  0014' 0060' F000' F000'  	movff	memcpy@s,fsr2l
  2218  001A' 0060' F000' F000'  	movff	memcpy@s+1,fsr2h
  2219  0020' 5100'              	movf	indf2,w,b
  2220  0022' 6F00'              	movwf	memcpy@tmp& (0+255),b
  2221  0024'                    
  2222                           ; BSR set to: 0
  2223  0024' 4B00'              	infsnz	memcpy@s& (0+255),f,b
  2224  0026' 2B00'              	incf	(memcpy@s+1)& (0+255),f,b
  2225  0028'                    
  2226                           ; BSR set to: 0
  2227  0028' 0060' F000' F000'  	movff	memcpy@d,fsr2l
  2228  002E' 0060' F000' F000'  	movff	memcpy@d+1,fsr2h
  2229  0034' 0060' F000' F000'  	movff	memcpy@tmp,indf2
  2230  003A'                    
  2231                           ; BSR set to: 0
  2232  003A' 4B00'              	infsnz	memcpy@d& (0+255),f,b
  2233  003C' 2B00'              	incf	(memcpy@d+1)& (0+255),f,b
  2234  003E'                    l4371:
  2235  003E' 0100               	movlb	0	; () banked
  2236  0040' 0700'              	decf	memcpy@n& (0+255),f,b
  2237  0042' A100'              	btfss	status,0,b
  2238  0044' 0700'              	decf	(memcpy@n+1)& (0+255),f,b
  2239  0046' 2900'              	incf	memcpy@n& (0+255),w,b
  2240  0048' E106               	bnz	u2931
  2241  004A' 2900'              	incf	(memcpy@n+1)& (0+255),w,b
  2242  004C' A500'              	btfss	status,2,b
  2243  004E' EF00' F000'        	goto	u2931
  2244  0052' EF00' F000'        	goto	u2930
  2245  0056'                    u2931:
  2246  0056' EF00' F000'        	goto	l4363
  2247  005A'                    u2930:
  2248  005A'                    
  2249                           ; BSR set to: 0
  2250  005A' 0012               	return		;funcret
  2251  005C'                    __end_of_memcpy:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _get_offset_bytes *****************
  2255 ;; Defined at:
  2256 ;;		line 5 in file "canlib/util/safe_ring_buffer.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  ctx             2    6[BANK0 ] PTR const struct .
  2259 ;;		 -> buf@can_tx_buffer$F533(10), buf(10), 
  2260 ;;  index           2    8[BANK0 ] unsigned int 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  2    6[BANK0 ] unsigned int 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;Total ram usage:        6 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 5
  2279 ;; This function calls:
  2280 ;;		___wmul
  2281 ;; This function is called by:
  2282 ;;		_srb_push
  2283 ;;		_srb_pop
  2284 ;;		_srb_peek
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text15
  2289  0000'                    __ptext15:
  2290                           	callstack 0
  2291  0000'                    _get_offset_bytes:
  2292                           	callstack 23
  2293  0000'                    
  2294                           ;canlib/util/safe_ring_buffer.c: 5: static size_t get_offset_bytes(const srb_ctx_t *ctx,
      +                          ;canlib/util/safe_ring_buffer.c: 6:                                size_t index);canlib/
      +                          util/safe_ring_buffer.c: 7: {;canlib/util/safe_ring_buffer.c: 8:     if (index >= ctx->m
      +                          ax_elements) {
  2295  0000' 0100               	movlb	0	; () banked
  2296  0002' EE20 F004          	lfsr	2,4
  2297  0006' 5100'              	movf	get_offset_bytes@ctx& (0+255),w,b
  2298  0008' 2700'              	addwf	fsr2l,f,b
  2299  000A' 5100'              	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
  2300  000C' 2300'              	addwfc	fsr2h,f,b
  2301  000E' 5100'              	movf	postinc2,w,b
  2302  0010' 5D00'              	subwf	get_offset_bytes@index& (0+255),w,b
  2303  0012' 5100'              	movf	postinc2,w,b
  2304  0014' 5900'              	subwfb	(get_offset_bytes@index+1)& (0+255),w,b
  2305  0016' A100'              	btfss	status,0,b
  2306  0018' EF00' F000'        	goto	u2921
  2307  001C' EF00' F000'        	goto	u2920
  2308  0020'                    u2921:
  2309  0020' EF00' F000'        	goto	l4357
  2310  0024'                    u2920:
  2311  0024'                    
  2312                           ; BSR set to: 0
  2313                           ;canlib/util/safe_ring_buffer.c: 9:         return 0;
  2314  0024' 0E00               	movlw	0
  2315  0026' 6F00'              	movwf	(?_get_offset_bytes+1)& (0+255),b
  2316  0028' 0E00               	movlw	0
  2317  002A' 6F00'              	movwf	?_get_offset_bytes& (0+255),b
  2318  002C' EF00' F000'        	goto	l365
  2319  0030'                    l4357:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;canlib/util/safe_ring_buffer.c: 11:     return index * (ctx->element_size);
  2323  0030' EE20 F002          	lfsr	2,2
  2324  0034' 5100'              	movf	get_offset_bytes@ctx& (0+255),w,b
  2325  0036' 2700'              	addwf	fsr2l,f,b
  2326  0038' 5100'              	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
  2327  003A' 2300'              	addwfc	fsr2h,f,b
  2328  003C' 0060' F000' F000'  	movff	postinc2,___wmul@multiplier
  2329  0042' 0060' F000' F000'  	movff	postdec2,___wmul@multiplier+1
  2330  0048' C008' F002'        	movff	get_offset_bytes@index,___wmul@multiplicand
  2331  004C' C009' F003'        	movff	get_offset_bytes@index+1,___wmul@multiplicand+1
  2332  0050' EC00' F000'        	call	___wmul	;wreg free
  2333  0054' C000' F006'        	movff	?___wmul,?_get_offset_bytes
  2334  0058' C001' F007'        	movff	?___wmul+1,?_get_offset_bytes+1
  2335  005C'                    l365:
  2336  005C' 0012               	return		;funcret
  2337  005E'                    __end_of_get_offset_bytes:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function ___wmul *****************
  2341 ;; Defined at:
  2342 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2345 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  product         2    4[BANK0 ] unsigned int 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  2    0[BANK0 ] unsigned int 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, prodl, prodh
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        6 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 4
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_get_offset_bytes
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text16
  2372  0000'                    __ptext16:
  2373                           	callstack 0
  2374  0000'                    ___wmul:
  2375                           	callstack 23
  2376  0000' 0100               	movlb	0	; () banked
  2377  0002' 5100'              	movf	___wmul@multiplier& (0+255),w,b
  2378  0004' 0300'              	mulwf	___wmul@multiplicand& (0+255),b
  2379  0006' 0060' F000' F000'  	movff	prodl,___wmul@product
  2380  000C' 0060' F000' F000'  	movff	prodh,___wmul@product+1
  2381  0012' 5100'              	movf	___wmul@multiplier& (0+255),w,b
  2382  0014' 0300'              	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2383  0016' 5000'              	movf	prodl^(0+16128),w,c
  2384  0018' 2700'              	addwf	(___wmul@product+1)& (0+255),f,b
  2385  001A' 5100'              	movf	(___wmul@multiplier+1)& (0+255),w,b
  2386  001C' 0300'              	mulwf	___wmul@multiplicand& (0+255),b
  2387  001E' 5000'              	movf	prodl^(0+16128),w,c
  2388  0020' 2700'              	addwf	(___wmul@product+1)& (0+255),f,b
  2389  0022'                    
  2390                           ; BSR set to: 0
  2391  0022' C004' F000'        	movff	___wmul@product,?___wmul
  2392  0026' C005' F001'        	movff	___wmul@product+1,?___wmul+1
  2393  002A'                    
  2394                           ; BSR set to: 0
  2395  002A' 0012               	return		;funcret
  2396  002C'                    __end_of___wmul:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function _millis *****************
  2400 ;; Defined at:
  2401 ;;		line 26 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  4    0[BANK0 ] unsigned long 
  2408 ;; Registers used:
  2409 ;;		None
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;Total ram usage:        4 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 4
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;;		_send_status_ok
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text17
  2431  0000'                    __ptext17:
  2432                           	callstack 0
  2433  0000'                    _millis:
  2434                           	callstack 25
  2435  0000'                    
  2436                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 27:     return millis_counter;
  2437  0000' C004' F000'        	movff	_millis_counter,?_millis
  2438  0004' C005' F001'        	movff	_millis_counter+1,?_millis+1
  2439  0008' C006' F002'        	movff	_millis_counter+2,?_millis+2
  2440  000C' C007' F003'        	movff	_millis_counter+3,?_millis+3
  2441  0010' 0012               	return		;funcret
  2442  0012'                    __end_of_millis:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _build_board_stat_msg *****************
  2446 ;; Defined at:
  2447 ;;		line 169 in file "canlib/can_common.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  timestamp       4    6[BANK0 ] unsigned long 
  2450 ;;  error_code      1   10[BANK0 ] enum E60
  2451 ;;  error_data      2   11[BANK0 ] PTR unsigned char 
  2452 ;;		 -> NULL(0), 
  2453 ;;  error_data_l    1   13[BANK0 ] unsigned char 
  2454 ;;  output          2   14[BANK0 ] PTR struct .
  2455 ;;		 -> send_status_ok@board_stat_msg(11), 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  i               2   19[BANK0 ] int 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      _Bool 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2467 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;Total ram usage:       15 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 5
  2474 ;; This function calls:
  2475 ;;		_write_timestamp_3bytes
  2476 ;; This function is called by:
  2477 ;;		_send_status_ok
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text18
  2482  0000'                    __ptext18:
  2483                           	callstack 0
  2484  0000'                    _build_board_stat_msg:
  2485                           	callstack 24
  2486  0000'                    
  2487                           ;canlib/can_common.c: 169: _Bool build_board_stat_msg(uint32_t timestamp,;canlib/can_com
      +                          mon.c: 170:                           enum BOARD_STATUS error_code,;canlib/can_common.c:
      +                           171:                           uint8_t *error_data,;canlib/can_common.c: 172:          
      +                                           uint8_t error_data_len,;canlib/can_common.c: 173:                      
      +                               can_msg_t *output);canlib/can_common.c: 174: {;canlib/can_common.c: 175:     if (er
      +                          ror_data_len > 0 && !error_data) { return 0; }
  2488  0000' 0100               	movlb	0	; () banked
  2489  0002' 5100'              	movf	build_board_stat_msg@error_data_len& (0+255),w,b
  2490  0004' B500'              	btfsc	status,2,b
  2491  0006' EF00' F000'        	goto	u3001
  2492  000A' EF00' F000'        	goto	u3000
  2493  000E'                    u3001:
  2494  000E' EF00' F000'        	goto	l4433
  2495  0012'                    u3000:
  2496  0012'                    
  2497                           ; BSR set to: 0
  2498  0012' 5100'              	movf	build_board_stat_msg@error_data& (0+255),w,b
  2499  0014' 1100'              	iorwf	(build_board_stat_msg@error_data+1)& (0+255),w,b
  2500  0016' A500'              	btfss	status,2,b
  2501  0018' EF00' F000'        	goto	u3011
  2502  001C' EF00' F000'        	goto	u3010
  2503  0020'                    u3011:
  2504  0020' EF00' F000'        	goto	l4433
  2505  0024'                    u3010:
  2506  0024' EF00' F000'        	goto	l48
  2507  0028'                    l4433:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;canlib/can_common.c: 176:     if (!output) { return 0; }
  2511  0028' 5100'              	movf	build_board_stat_msg@output& (0+255),w,b
  2512  002A' 1100'              	iorwf	(build_board_stat_msg@output+1)& (0+255),w,b
  2513  002C' A500'              	btfss	status,2,b
  2514  002E' EF00' F000'        	goto	u3021
  2515  0032' EF00' F000'        	goto	u3020
  2516  0036'                    u3021:
  2517  0036' EF00' F000'        	goto	l4437
  2518  003A'                    u3020:
  2519  003A' EF00' F000'        	goto	l48
  2520  003E'                    l4437:
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;canlib/can_common.c: 177:     if (error_data_len > 4) { return 0; }
  2524  003E' 0E04               	movlw	4
  2525  0040' 6500'              	cpfsgt	build_board_stat_msg@error_data_len& (0+255),b
  2526  0042' EF00' F000'        	goto	u3031
  2527  0046' EF00' F000'        	goto	u3030
  2528  004A'                    u3031:
  2529  004A' EF00' F000'        	goto	l4441
  2530  004E'                    u3030:
  2531  004E' EF00' F000'        	goto	l48
  2532  0052'                    l4441:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;canlib/can_common.c: 179:     output->sid = 0x520 | 0x07;
  2536  0052' 0060' F000' F000'  	movff	build_board_stat_msg@output,fsr2l
  2537  0058' 0060' F000' F000'  	movff	build_board_stat_msg@output+1,fsr2h
  2538  005E' 0E27               	movlw	39
  2539  0060' 6E00'              	movwf	postinc2,c
  2540  0062' 0E05               	movlw	5
  2541  0064' 6E00'              	movwf	postdec2,c
  2542  0066'                    
  2543                           ; BSR set to: 0
  2544                           ;canlib/can_common.c: 180:     write_timestamp_3bytes(timestamp, output);
  2545  0066' C006' F000'        	movff	build_board_stat_msg@timestamp,write_timestamp_3bytes@timestamp
  2546  006A' C007' F001'        	movff	build_board_stat_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
  2547  006E' C008' F002'        	movff	build_board_stat_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
  2548  0072' C009' F003'        	movff	build_board_stat_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
  2549  0076' C00E' F004'        	movff	build_board_stat_msg@output,write_timestamp_3bytes@output
  2550  007A' C00F' F005'        	movff	build_board_stat_msg@output+1,write_timestamp_3bytes@output+1
  2551  007E' EC00' F000'        	call	_write_timestamp_3bytes	;wreg free
  2552  0082'                    
  2553                           ;canlib/can_common.c: 182:     output->data[3] = (uint8_t) error_code;
  2554  0082' 0100               	movlb	0	; () banked
  2555  0084' EE20 F006          	lfsr	2,6
  2556  0088' 5100'              	movf	build_board_stat_msg@output& (0+255),w,b
  2557  008A' 2700'              	addwf	fsr2l,f,b
  2558  008C' 5100'              	movf	(build_board_stat_msg@output+1)& (0+255),w,b
  2559  008E' 2300'              	addwfc	fsr2h,f,b
  2560  0090' 0060' F000' F000'  	movff	build_board_stat_msg@error_code,indf2
  2561  0096'                    
  2562                           ; BSR set to: 0
  2563                           ;canlib/can_common.c: 183:     for (int i = 0; i < error_data_len; ++i) {
  2564  0096' 0E00               	movlw	0
  2565  0098' 6F00'              	movwf	(build_board_stat_msg@i+1)& (0+255),b
  2566  009A' 0E00               	movlw	0
  2567  009C' 6F00'              	movwf	build_board_stat_msg@i& (0+255),b
  2568  009E' EF00' F000'        	goto	l4453
  2569  00A2'                    l4449:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;canlib/can_common.c: 185:         output->data[4 + i] = error_data[i];
  2573  00A2' 5100'              	movf	build_board_stat_msg@i& (0+255),w,b
  2574  00A4' 2500'              	addwf	build_board_stat_msg@error_data& (0+255),w,b
  2575  00A6' 6E00'              	movwf	fsr2l,c
  2576  00A8' 5100'              	movf	(build_board_stat_msg@i+1)& (0+255),w,b
  2577  00AA' 2100'              	addwfc	(build_board_stat_msg@error_data+1)& (0+255),w,b
  2578  00AC' 6E01'              	movwf	fsr2l+1,c
  2579  00AE' 5100'              	movf	build_board_stat_msg@i& (0+255),w,b
  2580  00B0' 2500'              	addwf	build_board_stat_msg@output& (0+255),w,b
  2581  00B2' 6F00'              	movwf	??_build_board_stat_msg& (0+255),b
  2582  00B4' 5100'              	movf	(build_board_stat_msg@i+1)& (0+255),w,b
  2583  00B6' 2100'              	addwfc	(build_board_stat_msg@output+1)& (0+255),w,b
  2584  00B8' 6F00'              	movwf	(??_build_board_stat_msg+1)& (0+255),b
  2585  00BA' 0E07               	movlw	7
  2586  00BC' 2500'              	addwf	??_build_board_stat_msg& (0+255),w,b
  2587  00BE' 6E00'              	movwf	fsr1l,c
  2588  00C0' 0E00               	movlw	0
  2589  00C2' 2100'              	addwfc	(??_build_board_stat_msg+1)& (0+255),w,b
  2590  00C4' 6E01'              	movwf	fsr1l+1,c
  2591  00C6' 0060' F000' F000'  	movff	indf2,indf1
  2592  00CC'                    
  2593                           ; BSR set to: 0
  2594                           ;canlib/can_common.c: 186:     }
  2595  00CC' 4B00'              	infsnz	build_board_stat_msg@i& (0+255),f,b
  2596  00CE' 2B00'              	incf	(build_board_stat_msg@i+1)& (0+255),f,b
  2597  00D0'                    l4453:
  2598                           
  2599                           ; BSR set to: 0
  2600  00D0' 5100'              	movf	build_board_stat_msg@error_data_len& (0+255),w,b
  2601  00D2' 6F00'              	movwf	??_build_board_stat_msg& (0+255),b
  2602  00D4' 6B00'              	clrf	(??_build_board_stat_msg+1)& (0+255),b
  2603  00D6' 5100'              	movf	??_build_board_stat_msg& (0+255),w,b
  2604  00D8' 5D00'              	subwf	build_board_stat_msg@i& (0+255),w,b
  2605  00DA' 5100'              	movf	(build_board_stat_msg@i+1)& (0+255),w,b
  2606  00DC' 0A80               	xorlw	128
  2607  00DE' 6F00'              	movwf	(??_build_board_stat_msg+2)& (0+255),b
  2608  00E0' 5100'              	movf	(??_build_board_stat_msg+1)& (0+255),w,b
  2609  00E2' 0A80               	xorlw	128
  2610  00E4' 5900'              	subwfb	(??_build_board_stat_msg+2)& (0+255),w,b
  2611  00E6' A100'              	btfss	status,0,b
  2612  00E8' EF00' F000'        	goto	u3041
  2613  00EC' EF00' F000'        	goto	u3040
  2614  00F0'                    u3041:
  2615  00F0' EF00' F000'        	goto	l4449
  2616  00F4'                    u3040:
  2617  00F4'                    
  2618                           ; BSR set to: 0
  2619                           ;canlib/can_common.c: 189:     output->data_len = 4 + error_data_len;
  2620  00F4' EE20 F002          	lfsr	2,2
  2621  00F8' 5100'              	movf	build_board_stat_msg@output& (0+255),w,b
  2622  00FA' 2700'              	addwf	fsr2l,f,b
  2623  00FC' 5100'              	movf	(build_board_stat_msg@output+1)& (0+255),w,b
  2624  00FE' 2300'              	addwfc	fsr2h,f,b
  2625  0100' 5100'              	movf	build_board_stat_msg@error_data_len& (0+255),w,b
  2626  0102' 0F04               	addlw	4
  2627  0104' 6E00'              	movwf	indf2,c
  2628  0106'                    l48:
  2629                           
  2630                           ; BSR set to: 0
  2631  0106' 0012               	return		;funcret
  2632  0108'                    __end_of_build_board_stat_msg:
  2633                           	callstack 0
  2634                           
  2635 ;; *************** function _pin_interrupt_init *****************
  2636 ;; Defined at:
  2637 ;;		line 9 in file "pin_interrupt.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		None
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;Total ram usage:        0 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 4
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text19
  2666  0000'                    __ptext19:
  2667                           	callstack 0
  2668  0000'                    _pin_interrupt_init:
  2669                           	callstack 26
  2670  0000'                    
  2671                           ;pin_interrupt.c: 10:     PIE0bits.IOCIE = 1;
  2672  0000' 0139               	movlb	57	; () banked
  2673  0002' 8F90               	bsf	144,7,b	;volatile
  2674                           
  2675                           ;pin_interrupt.c: 11:     ANSELAbits.ANSELA0 = 0;
  2676  0004' 013A               	movlb	58	; () banked
  2677  0006' 9140               	bcf	64,0,b	;volatile
  2678                           
  2679                           ;pin_interrupt.c: 12:     ANSELAbits.ANSELA1 = 0;
  2680  0008' 9340               	bcf	64,1,b	;volatile
  2681                           
  2682                           ;pin_interrupt.c: 13:     ANSELAbits.ANSELA2 = 0;
  2683  000A' 9540               	bcf	64,2,b	;volatile
  2684                           
  2685                           ;pin_interrupt.c: 16:     TRISAbits.TRISA0 = 1;
  2686  000C' 80C2               	bsf	194,0,c	;volatile
  2687                           
  2688                           ;pin_interrupt.c: 17:     TRISAbits.TRISA1 = 1;
  2689  000E' 82C2               	bsf	194,1,c	;volatile
  2690                           
  2691                           ;pin_interrupt.c: 18:     TRISAbits.TRISA2 = 1;
  2692  0010' 84C2               	bsf	194,2,c	;volatile
  2693                           
  2694                           ;pin_interrupt.c: 21:     IOCAPbits.IOCAP0 = 1;
  2695  0012' 8145               	bsf	69,0,b	;volatile
  2696                           
  2697                           ;pin_interrupt.c: 22:     IOCAPbits.IOCAP1 = 1;
  2698  0014' 8345               	bsf	69,1,b	;volatile
  2699                           
  2700                           ;pin_interrupt.c: 23:     IOCAPbits.IOCAP2 = 1;
  2701  0016' 8545               	bsf	69,2,b	;volatile
  2702  0018'                    
  2703                           ; BSR set to: 58
  2704  0018' 0012               	return		;funcret
  2705  001A'                    __end_of_pin_interrupt_init:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _led_init *****************
  2709 ;; Defined at:
  2710 ;;		line 3 in file "mama.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		None
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 4
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text20
  2739  0000'                    __ptext20:
  2740                           	callstack 0
  2741  0000'                    _led_init:
  2742                           	callstack 26
  2743  0000'                    
  2744                           ;mama.c: 5:     TRISB2 = 0;
  2745  0000' 94C3               	bcf	16323,2,c	;volatile
  2746                           
  2747                           ;mama.c: 6:     LATB2 = 0;
  2748  0002' 94BB               	bcf	16315,2,c	;volatile
  2749                           
  2750                           ;mama.c: 9:     TRISB3 = 0;
  2751  0004' 96C3               	bcf	16323,3,c	;volatile
  2752                           
  2753                           ;mama.c: 10:     LATB3 = 0;
  2754  0006' 96BB               	bcf	16315,3,c	;volatile
  2755                           
  2756                           ;mama.c: 13:     TRISB4 = 0;
  2757  0008' 98C3               	bcf	16323,4,c	;volatile
  2758                           
  2759                           ;mama.c: 14:     LATB4 = 0;
  2760  000A' 98BB               	bcf	16315,4,c	;volatile
  2761  000C' 0012               	return		;funcret
  2762  000E'                    __end_of_led_init:
  2763                           	callstack 0
  2764                           
  2765 ;; *************** function _can_init *****************
  2766 ;; Defined at:
  2767 ;;		line 16 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  timing          2    0[BANK0 ] PTR const struct .
  2770 ;;		 -> main@can_setup(7), 
  2771 ;;  receive_call    2    2[BANK0 ] PTR FTN(PTR const struct
  2772 ;;		 -> can_msg_handler(1), 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;Total ram usage:        5 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; Hardware stack levels required when called: 4
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text21
  2799  0000'                    __ptext21:
  2800                           	callstack 0
  2801  0000'                    _can_init:
  2802                           	callstack 26
  2803  0000'                    
  2804                           ;canlib/pic18f26k83/pic18f26k83_can.c: 16: void can_init(const can_timing_t *timing,;can
      +                          lib/pic18f26k83/pic18f26k83_can.c: 17:               void (*receive_callback)(const can_
      +                          msg_t *message)) {;canlib/pic18f26k83/pic18f26k83_can.c: 19:     can_rcv_cb = receive_ca
      +                          llback;
  2805  0000' C002' F008'        	movff	can_init@receive_callback,_can_rcv_cb
  2806  0004' C003' F009'        	movff	can_init@receive_callback+1,_can_rcv_cb+1
  2807  0008'                    
  2808                           ;canlib/pic18f26k83/pic18f26k83_can.c: 22:     CANCONbits.REQOP = 0b100;
  2809  0008' 508F               	movf	143,w,c	;volatile
  2810  000A' 0B1F               	andlw	-225
  2811  000C' 0980               	iorlw	128
  2812  000E' 6E8F               	movwf	143,c	;volatile
  2813  0010'                    l4693:
  2814  0010' 388E               	swapf	142,w,c	;volatile
  2815  0012' 3300'              	rrcf	wreg,f,b
  2816  0014' 0B07               	andlw	7
  2817  0016' 0A04               	xorlw	4
  2818  0018' A500'              	btfss	status,2,b
  2819  001A' EF00' F000'        	goto	u3191
  2820  001E' EF00' F000'        	goto	u3190
  2821  0022'                    u3191:
  2822  0022' EF00' F000'        	goto	l4693
  2823  0026'                    u3190:
  2824  0026'                    
  2825                           ;canlib/pic18f26k83/pic18f26k83_can.c: 28:     ECANCONbits.MDSEL = 0;
  2826  0026' 0E3F               	movlw	-193
  2827  0028' 1691               	andwf	145,f,c	;volatile
  2828  002A'                    
  2829                           ;canlib/pic18f26k83/pic18f26k83_can.c: 32:     CIOCONbits.CLKSEL = 0;
  2830  002A' 0137               	movlb	55	; () banked
  2831  002C' 9100               	bcf	0,0,b	;volatile
  2832  002E'                    
  2833                           ; BSR set to: 55
  2834                           ;canlib/pic18f26k83/pic18f26k83_can.c: 34:     BRGCON1bits.SJW = timing->sjw;
  2835  002E' 0100               	movlb	0	; () banked
  2836  0030' EE20 F001          	lfsr	2,1
  2837  0034' 5100'              	movf	can_init@timing& (0+255),w,b
  2838  0036' 2700'              	addwf	fsr2l,f,b
  2839  0038' 5100'              	movf	(can_init@timing+1)& (0+255),w,b
  2840  003A' 2300'              	addwfc	fsr2h,f,b
  2841  003C' 5100'              	movf	indf2,w,b
  2842  003E' 6F00'              	movwf	??_can_init& (0+255),b
  2843  0040' 3B00'              	swapf	??_can_init& (0+255),f,b
  2844  0042' 4700'              	rlncf	??_can_init& (0+255),f,b
  2845  0044' 4700'              	rlncf	??_can_init& (0+255),f,b
  2846  0046' 0137               	movlb	55	; () banked
  2847  0048' 5103               	movf	3,w,b	;volatile
  2848  004A' 0100               	movlb	0	; () banked
  2849  004C' 1900'              	xorwf	??_can_init& (0+255),w,b
  2850  004E' 0B3F               	andlw	-193
  2851  0050' 1900'              	xorwf	??_can_init& (0+255),w,b
  2852  0052' 0137               	movlb	55	; () banked
  2853  0054' 6F03               	movwf	3,b	;volatile
  2854  0056'                    
  2855                           ; BSR set to: 55
  2856                           ;canlib/pic18f26k83/pic18f26k83_can.c: 35:     BRGCON1bits.BRP = timing->brp;
  2857  0056' 0060' F000' F000'  	movff	can_init@timing,fsr2l
  2858  005C' 0060' F000' F000'  	movff	can_init@timing+1,fsr2h
  2859  0062' 5100'              	movf	indf2,w,b
  2860  0064' 0100               	movlb	0	; () banked
  2861  0066' 6F00'              	movwf	??_can_init& (0+255),b
  2862  0068' 0137               	movlb	55	; () banked
  2863  006A' 5103               	movf	3,w,b	;volatile
  2864  006C' 0100               	movlb	0	; () banked
  2865  006E' 1900'              	xorwf	??_can_init& (0+255),w,b
  2866  0070' 0BC0               	andlw	-64
  2867  0072' 1900'              	xorwf	??_can_init& (0+255),w,b
  2868  0074' 0137               	movlb	55	; () banked
  2869  0076' 6F03               	movwf	3,b	;volatile
  2870  0078'                    
  2871                           ; BSR set to: 55
  2872                           ;canlib/pic18f26k83/pic18f26k83_can.c: 36:     BRGCON2bits.SEG2PHTS = timing->btlmode;
  2873  0078' 0100               	movlb	0	; () banked
  2874  007A' EE20 F006          	lfsr	2,6
  2875  007E' 5100'              	movf	can_init@timing& (0+255),w,b
  2876  0080' 2700'              	addwf	fsr2l,f,b
  2877  0082' 5100'              	movf	(can_init@timing+1)& (0+255),w,b
  2878  0084' 2300'              	addwfc	fsr2h,f,b
  2879  0086' 5100'              	movf	indf2,w,b
  2880  0088' 6F00'              	movwf	??_can_init& (0+255),b
  2881  008A' 3300'              	rrcf	??_can_init& (0+255),f,b
  2882  008C' 3300'              	rrcf	??_can_init& (0+255),f,b
  2883  008E' 0137               	movlb	55	; () banked
  2884  0090' 5104               	movf	4,w,b	;volatile
  2885  0092' 0100               	movlb	0	; () banked
  2886  0094' 1900'              	xorwf	??_can_init& (0+255),w,b
  2887  0096' 0B7F               	andlw	-129
  2888  0098' 1900'              	xorwf	??_can_init& (0+255),w,b
  2889  009A' 0137               	movlb	55	; () banked
  2890  009C' 6F04               	movwf	4,b	;volatile
  2891  009E'                    
  2892                           ; BSR set to: 55
  2893                           ;canlib/pic18f26k83/pic18f26k83_can.c: 37:     BRGCON2bits.SAM = timing->sam;
  2894  009E' 0100               	movlb	0	; () banked
  2895  00A0' EE20 F002          	lfsr	2,2
  2896  00A4' 5100'              	movf	can_init@timing& (0+255),w,b
  2897  00A6' 2700'              	addwf	fsr2l,f,b
  2898  00A8' 5100'              	movf	(can_init@timing+1)& (0+255),w,b
  2899  00AA' 2300'              	addwfc	fsr2h,f,b
  2900  00AC' 5100'              	movf	indf2,w,b
  2901  00AE' 6F00'              	movwf	??_can_init& (0+255),b
  2902  00B0' 3B00'              	swapf	??_can_init& (0+255),f,b
  2903  00B2' 4700'              	rlncf	??_can_init& (0+255),f,b
  2904  00B4' 4700'              	rlncf	??_can_init& (0+255),f,b
  2905  00B6' 0137               	movlb	55	; () banked
  2906  00B8' 5104               	movf	4,w,b	;volatile
  2907  00BA' 0100               	movlb	0	; () banked
  2908  00BC' 1900'              	xorwf	??_can_init& (0+255),w,b
  2909  00BE' 0BBF               	andlw	-65
  2910  00C0' 1900'              	xorwf	??_can_init& (0+255),w,b
  2911  00C2' 0137               	movlb	55	; () banked
  2912  00C4' 6F04               	movwf	4,b	;volatile
  2913  00C6'                    
  2914                           ; BSR set to: 55
  2915                           ;canlib/pic18f26k83/pic18f26k83_can.c: 38:     BRGCON2bits.SEG1PH = timing->seg1ph;
  2916  00C6' 0100               	movlb	0	; () banked
  2917  00C8' EE20 F003          	lfsr	2,3
  2918  00CC' 5100'              	movf	can_init@timing& (0+255),w,b
  2919  00CE' 2700'              	addwf	fsr2l,f,b
  2920  00D0' 5100'              	movf	(can_init@timing+1)& (0+255),w,b
  2921  00D2' 2300'              	addwfc	fsr2h,f,b
  2922  00D4' 5100'              	movf	indf2,w,b
  2923  00D6' 6F00'              	movwf	??_can_init& (0+255),b
  2924  00D8' 4700'              	rlncf	??_can_init& (0+255),f,b
  2925  00DA' 4700'              	rlncf	??_can_init& (0+255),f,b
  2926  00DC' 4700'              	rlncf	??_can_init& (0+255),f,b
  2927  00DE' 0137               	movlb	55	; () banked
  2928  00E0' 5104               	movf	4,w,b	;volatile
  2929  00E2' 0100               	movlb	0	; () banked
  2930  00E4' 1900'              	xorwf	??_can_init& (0+255),w,b
  2931  00E6' 0BC7               	andlw	-57
  2932  00E8' 1900'              	xorwf	??_can_init& (0+255),w,b
  2933  00EA' 0137               	movlb	55	; () banked
  2934  00EC' 6F04               	movwf	4,b	;volatile
  2935  00EE'                    
  2936                           ; BSR set to: 55
  2937                           ;canlib/pic18f26k83/pic18f26k83_can.c: 39:     BRGCON2bits.PRSEG = timing->prseg;
  2938  00EE' 0100               	movlb	0	; () banked
  2939  00F0' EE20 F005          	lfsr	2,5
  2940  00F4' 5100'              	movf	can_init@timing& (0+255),w,b
  2941  00F6' 2700'              	addwf	fsr2l,f,b
  2942  00F8' 5100'              	movf	(can_init@timing+1)& (0+255),w,b
  2943  00FA' 2300'              	addwfc	fsr2h,f,b
  2944  00FC' 5100'              	movf	indf2,w,b
  2945  00FE' 6F00'              	movwf	??_can_init& (0+255),b
  2946  0100' 0137               	movlb	55	; () banked
  2947  0102' 5104               	movf	4,w,b	;volatile
  2948  0104' 0100               	movlb	0	; () banked
  2949  0106' 1900'              	xorwf	??_can_init& (0+255),w,b
  2950  0108' 0BF8               	andlw	-8
  2951  010A' 1900'              	xorwf	??_can_init& (0+255),w,b
  2952  010C' 0137               	movlb	55	; () banked
  2953  010E' 6F04               	movwf	4,b	;volatile
  2954  0110'                    
  2955                           ; BSR set to: 55
  2956                           ;canlib/pic18f26k83/pic18f26k83_can.c: 40:     BRGCON3bits.SEG2PH = timing->seg2ph;
  2957  0110' 0100               	movlb	0	; () banked
  2958  0112' EE20 F004          	lfsr	2,4
  2959  0116' 5100'              	movf	can_init@timing& (0+255),w,b
  2960  0118' 2700'              	addwf	fsr2l,f,b
  2961  011A' 5100'              	movf	(can_init@timing+1)& (0+255),w,b
  2962  011C' 2300'              	addwfc	fsr2h,f,b
  2963  011E' 5100'              	movf	indf2,w,b
  2964  0120' 6F00'              	movwf	??_can_init& (0+255),b
  2965  0122' 0137               	movlb	55	; () banked
  2966  0124' 5105               	movf	5,w,b	;volatile
  2967  0126' 0100               	movlb	0	; () banked
  2968  0128' 1900'              	xorwf	??_can_init& (0+255),w,b
  2969  012A' 0BF8               	andlw	-8
  2970  012C' 1900'              	xorwf	??_can_init& (0+255),w,b
  2971  012E' 0137               	movlb	55	; () banked
  2972  0130' 6F05               	movwf	5,b	;volatile
  2973  0132'                    
  2974                           ; BSR set to: 55
  2975                           ;canlib/pic18f26k83/pic18f26k83_can.c: 46:     BRGCON3bits.WAKDIS = 1;
  2976  0132' 8F05               	bsf	5,7,b	;volatile
  2977  0134'                    
  2978                           ; BSR set to: 55
  2979                           ;canlib/pic18f26k83/pic18f26k83_can.c: 47:     BRGCON3bits.WAKFIL = 0;
  2980  0134' 9D05               	bcf	5,6,b	;volatile
  2981  0136'                    
  2982                           ; BSR set to: 55
  2983                           ;canlib/pic18f26k83/pic18f26k83_can.c: 51:     RXM0SIDH = 0;
  2984  0136' 0E00               	movlw	0
  2985  0138' 6FB8               	movwf	184,b	;volatile
  2986  013A'                    
  2987                           ; BSR set to: 55
  2988                           ;canlib/pic18f26k83/pic18f26k83_can.c: 52:     RXM0SIDL = 0;
  2989  013A' 0E00               	movlw	0
  2990  013C' 6FB9               	movwf	185,b	;volatile
  2991  013E'                    
  2992                           ; BSR set to: 55
  2993                           ;canlib/pic18f26k83/pic18f26k83_can.c: 53:     RXM1SIDH = 0;
  2994  013E' 0E00               	movlw	0
  2995  0140' 6FBC               	movwf	188,b	;volatile
  2996  0142'                    
  2997                           ; BSR set to: 55
  2998                           ;canlib/pic18f26k83/pic18f26k83_can.c: 54:     RXM1SIDL = 0;
  2999  0142' 0E00               	movlw	0
  3000  0144' 6FBD               	movwf	189,b	;volatile
  3001  0146'                    
  3002                           ; BSR set to: 55
  3003                           ;canlib/pic18f26k83/pic18f26k83_can.c: 58:     RXB0CONbits.RXM0 = 1;
  3004  0146' 8A80               	bsf	128,5,c	;volatile
  3005  0148'                    
  3006                           ; BSR set to: 55
  3007                           ;canlib/pic18f26k83/pic18f26k83_can.c: 59:     RXB0CONbits.RXM1 = 1;
  3008  0148' 8C80               	bsf	128,6,c	;volatile
  3009  014A'                    
  3010                           ; BSR set to: 55
  3011                           ;canlib/pic18f26k83/pic18f26k83_can.c: 62:     RXB0CONbits.RB0DBEN = 1;
  3012  014A' 8480               	bsf	128,2,c	;volatile
  3013  014C'                    
  3014                           ; BSR set to: 55
  3015                           ;canlib/pic18f26k83/pic18f26k83_can.c: 66:     PIE5bits.IRXIE = 1;
  3016  014C' 0139               	movlb	57	; () banked
  3017  014E' 8F95               	bsf	149,7,b	;volatile
  3018  0150'                    
  3019                           ; BSR set to: 57
  3020                           ;canlib/pic18f26k83/pic18f26k83_can.c: 68:     PIE5bits.WAKIE = 0;
  3021  0150' 9D95               	bcf	149,6,b	;volatile
  3022  0152'                    
  3023                           ; BSR set to: 57
  3024                           ;canlib/pic18f26k83/pic18f26k83_can.c: 70:     PIE5bits.ERRIE = 1;
  3025  0152' 8B95               	bsf	149,5,b	;volatile
  3026  0154'                    
  3027                           ; BSR set to: 57
  3028                           ;canlib/pic18f26k83/pic18f26k83_can.c: 72:     PIE5bits.TXB2IE = 0;
  3029  0154' 9995               	bcf	149,4,b	;volatile
  3030  0156'                    
  3031                           ; BSR set to: 57
  3032                           ;canlib/pic18f26k83/pic18f26k83_can.c: 73:     PIE5bits.TXB1IE = 0;
  3033  0156' 9795               	bcf	149,3,b	;volatile
  3034  0158'                    
  3035                           ; BSR set to: 57
  3036                           ;canlib/pic18f26k83/pic18f26k83_can.c: 74:     PIE5bits.TXB0IE = 0;
  3037  0158' 9595               	bcf	149,2,b	;volatile
  3038  015A'                    
  3039                           ; BSR set to: 57
  3040                           ;canlib/pic18f26k83/pic18f26k83_can.c: 76:     PIE5bits.RXB1IE = 1;
  3041  015A' 8395               	bsf	149,1,b	;volatile
  3042  015C'                    
  3043                           ; BSR set to: 57
  3044                           ;canlib/pic18f26k83/pic18f26k83_can.c: 77:     PIE5bits.RXB0IE = 1;
  3045  015C' 8195               	bsf	149,0,b	;volatile
  3046  015E'                    
  3047                           ; BSR set to: 57
  3048                           ;canlib/pic18f26k83/pic18f26k83_can.c: 80:     CANCONbits.REQOP = 0;
  3049  015E' 0E1F               	movlw	-225
  3050  0160' 168F               	andwf	143,f,c	;volatile
  3051  0162'                    l4749:
  3052  0162' 388E               	swapf	142,w,c	;volatile
  3053  0164' 3300'              	rrcf	wreg,f,b
  3054  0166' 0B07               	andlw	7
  3055  0168' 0900               	iorlw	0
  3056  016A' A500'              	btfss	status,2,b
  3057  016C' EF00' F000'        	goto	u3201
  3058  0170' EF00' F000'        	goto	u3200
  3059  0174'                    u3201:
  3060  0174' EF00' F000'        	goto	l4749
  3061  0178'                    u3200:
  3062  0178' 0012               	return		;funcret
  3063  017A'                    __end_of_can_init:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _can_generate_timing_params *****************
  3067 ;; Defined at:
  3068 ;;		line 7 in file "canlib/util/timing_util.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  can_frequenc    4    0[BANK0 ] unsigned long 
  3071 ;;  timing          2    4[BANK0 ] PTR struct .
  3072 ;;		 -> main@can_setup(7), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      _Bool 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3084 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;Total ram usage:       10 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 4
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text22
  3099  0000'                    __ptext22:
  3100                           	callstack 0
  3101  0000'                    _can_generate_timing_params:
  3102                           	callstack 26
  3103  0000'                    
  3104                           ;canlib/util/timing_util.c: 7: _Bool can_generate_timing_params(uint32_t can_frequency, 
      +                          can_timing_t *timing);canlib/util/timing_util.c: 8: {;canlib/util/timing_util.c: 10:    
      +                           switch (can_frequency) {
  3105  0000' EF00' F000'        	goto	l4621
  3106  0004'                    l4555:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;canlib/util/timing_util.c: 12:             timing->brp = 47;
  3110  0004' 0060' F000' F000'  	movff	can_generate_timing_params@timing,fsr2l
  3111  000A' 0060' F000' F000'  	movff	can_generate_timing_params@timing+1,fsr2h
  3112  0010' 0E2F               	movlw	47
  3113  0012' 6F00'              	movwf	indf2,b
  3114  0014'                    
  3115                           ; BSR set to: 0
  3116                           ;canlib/util/timing_util.c: 13:             timing->sjw = 3;
  3117  0014' EE20 F001          	lfsr	2,1
  3118  0018' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3119  001A' 2700'              	addwf	fsr2l,f,b
  3120  001C' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3121  001E' 2300'              	addwfc	fsr2h,f,b
  3122  0020' 0E03               	movlw	3
  3123  0022' 6F00'              	movwf	indf2,b
  3124  0024'                    
  3125                           ; BSR set to: 0
  3126                           ;canlib/util/timing_util.c: 14:             timing->btlmode = 1;
  3127  0024' EE20 F006          	lfsr	2,6
  3128  0028' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3129  002A' 2700'              	addwf	fsr2l,f,b
  3130  002C' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3131  002E' 2300'              	addwfc	fsr2h,f,b
  3132  0030' 0E01               	movlw	1
  3133  0032' 6F00'              	movwf	indf2,b
  3134  0034'                    
  3135                           ; BSR set to: 0
  3136                           ;canlib/util/timing_util.c: 15:             timing->sam = 0;
  3137  0034' EE20 F002          	lfsr	2,2
  3138  0038' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3139  003A' 2700'              	addwf	fsr2l,f,b
  3140  003C' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3141  003E' 2300'              	addwfc	fsr2h,f,b
  3142  0040' 0E00               	movlw	0
  3143  0042' 6F00'              	movwf	indf2,b
  3144  0044'                    
  3145                           ; BSR set to: 0
  3146                           ;canlib/util/timing_util.c: 16:             timing->seg1ph = 4;
  3147  0044' EE20 F003          	lfsr	2,3
  3148  0048' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3149  004A' 2700'              	addwf	fsr2l,f,b
  3150  004C' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3151  004E' 2300'              	addwfc	fsr2h,f,b
  3152  0050' 0E04               	movlw	4
  3153  0052' 6F00'              	movwf	indf2,b
  3154  0054'                    
  3155                           ; BSR set to: 0
  3156                           ;canlib/util/timing_util.c: 17:             timing->prseg = 0;
  3157  0054' EE20 F005          	lfsr	2,5
  3158  0058' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3159  005A' 2700'              	addwf	fsr2l,f,b
  3160  005C' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3161  005E' 2300'              	addwfc	fsr2h,f,b
  3162  0060' 0E00               	movlw	0
  3163  0062' 6F00'              	movwf	indf2,b
  3164  0064'                    
  3165                           ; BSR set to: 0
  3166                           ;canlib/util/timing_util.c: 18:             timing->seg2ph = 4;
  3167  0064' EE20 F004          	lfsr	2,4
  3168  0068' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3169  006A' 2700'              	addwf	fsr2l,f,b
  3170  006C' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3171  006E' 2300'              	addwfc	fsr2h,f,b
  3172  0070' 0E04               	movlw	4
  3173  0072' 6F00'              	movwf	indf2,b
  3174  0074' EF00' F000'        	goto	l399
  3175  0078'                    l4571:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;canlib/util/timing_util.c: 21:             timing->brp = 31;
  3179  0078' 0060' F000' F000'  	movff	can_generate_timing_params@timing,fsr2l
  3180  007E' 0060' F000' F000'  	movff	can_generate_timing_params@timing+1,fsr2h
  3181  0084' 0E1F               	movlw	31
  3182  0086' 6F00'              	movwf	indf2,b
  3183  0088'                    
  3184                           ; BSR set to: 0
  3185                           ;canlib/util/timing_util.c: 22:             timing->sjw = 3;
  3186  0088' EE20 F001          	lfsr	2,1
  3187  008C' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3188  008E' 2700'              	addwf	fsr2l,f,b
  3189  0090' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3190  0092' 2300'              	addwfc	fsr2h,f,b
  3191  0094' 0E03               	movlw	3
  3192  0096' 6F00'              	movwf	indf2,b
  3193  0098'                    
  3194                           ; BSR set to: 0
  3195                           ;canlib/util/timing_util.c: 23:             timing->btlmode = 1;
  3196  0098' EE20 F006          	lfsr	2,6
  3197  009C' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3198  009E' 2700'              	addwf	fsr2l,f,b
  3199  00A0' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3200  00A2' 2300'              	addwfc	fsr2h,f,b
  3201  00A4' 0E01               	movlw	1
  3202  00A6' 6F00'              	movwf	indf2,b
  3203  00A8'                    
  3204                           ; BSR set to: 0
  3205                           ;canlib/util/timing_util.c: 24:             timing->sam = 0;
  3206  00A8' EE20 F002          	lfsr	2,2
  3207  00AC' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3208  00AE' 2700'              	addwf	fsr2l,f,b
  3209  00B0' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3210  00B2' 2300'              	addwfc	fsr2h,f,b
  3211  00B4' 0E00               	movlw	0
  3212  00B6' 6F00'              	movwf	indf2,b
  3213  00B8'                    
  3214                           ; BSR set to: 0
  3215                           ;canlib/util/timing_util.c: 25:             timing->seg1ph = 4;
  3216  00B8' EE20 F003          	lfsr	2,3
  3217  00BC' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3218  00BE' 2700'              	addwf	fsr2l,f,b
  3219  00C0' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3220  00C2' 2300'              	addwfc	fsr2h,f,b
  3221  00C4' 0E04               	movlw	4
  3222  00C6' 6F00'              	movwf	indf2,b
  3223  00C8'                    
  3224                           ; BSR set to: 0
  3225                           ;canlib/util/timing_util.c: 26:             timing->prseg = 0;
  3226  00C8' EE20 F005          	lfsr	2,5
  3227  00CC' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3228  00CE' 2700'              	addwf	fsr2l,f,b
  3229  00D0' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3230  00D2' 2300'              	addwfc	fsr2h,f,b
  3231  00D4' 0E00               	movlw	0
  3232  00D6' 6F00'              	movwf	indf2,b
  3233  00D8'                    
  3234                           ; BSR set to: 0
  3235                           ;canlib/util/timing_util.c: 27:             timing->seg2ph = 4;
  3236  00D8' EE20 F004          	lfsr	2,4
  3237  00DC' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3238  00DE' 2700'              	addwf	fsr2l,f,b
  3239  00E0' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3240  00E2' 2300'              	addwfc	fsr2h,f,b
  3241  00E4' 0E04               	movlw	4
  3242  00E6' 6F00'              	movwf	indf2,b
  3243  00E8' EF00' F000'        	goto	l399
  3244  00EC'                    l4587:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;canlib/util/timing_util.c: 30:             timing->brp = 11;
  3248  00EC' 0060' F000' F000'  	movff	can_generate_timing_params@timing,fsr2l
  3249  00F2' 0060' F000' F000'  	movff	can_generate_timing_params@timing+1,fsr2h
  3250  00F8' 0E0B               	movlw	11
  3251  00FA' 6F00'              	movwf	indf2,b
  3252  00FC'                    
  3253                           ; BSR set to: 0
  3254                           ;canlib/util/timing_util.c: 31:             timing->sjw = 3;
  3255  00FC' EE20 F001          	lfsr	2,1
  3256  0100' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3257  0102' 2700'              	addwf	fsr2l,f,b
  3258  0104' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3259  0106' 2300'              	addwfc	fsr2h,f,b
  3260  0108' 0E03               	movlw	3
  3261  010A' 6F00'              	movwf	indf2,b
  3262  010C'                    
  3263                           ; BSR set to: 0
  3264                           ;canlib/util/timing_util.c: 32:             timing->btlmode = 1;
  3265  010C' EE20 F006          	lfsr	2,6
  3266  0110' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3267  0112' 2700'              	addwf	fsr2l,f,b
  3268  0114' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3269  0116' 2300'              	addwfc	fsr2h,f,b
  3270  0118' 0E01               	movlw	1
  3271  011A' 6F00'              	movwf	indf2,b
  3272  011C'                    
  3273                           ; BSR set to: 0
  3274                           ;canlib/util/timing_util.c: 33:             timing->sam = 0;
  3275  011C' EE20 F002          	lfsr	2,2
  3276  0120' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3277  0122' 2700'              	addwf	fsr2l,f,b
  3278  0124' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3279  0126' 2300'              	addwfc	fsr2h,f,b
  3280  0128' 0E00               	movlw	0
  3281  012A' 6F00'              	movwf	indf2,b
  3282  012C'                    
  3283                           ; BSR set to: 0
  3284                           ;canlib/util/timing_util.c: 34:             timing->seg1ph = 4;
  3285  012C' EE20 F003          	lfsr	2,3
  3286  0130' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3287  0132' 2700'              	addwf	fsr2l,f,b
  3288  0134' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3289  0136' 2300'              	addwfc	fsr2h,f,b
  3290  0138' 0E04               	movlw	4
  3291  013A' 6F00'              	movwf	indf2,b
  3292  013C'                    
  3293                           ; BSR set to: 0
  3294                           ;canlib/util/timing_util.c: 35:             timing->prseg = 0;
  3295  013C' EE20 F005          	lfsr	2,5
  3296  0140' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3297  0142' 2700'              	addwf	fsr2l,f,b
  3298  0144' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3299  0146' 2300'              	addwfc	fsr2h,f,b
  3300  0148' 0E00               	movlw	0
  3301  014A' 6F00'              	movwf	indf2,b
  3302  014C'                    
  3303                           ; BSR set to: 0
  3304                           ;canlib/util/timing_util.c: 36:             timing->seg2ph = 4;
  3305  014C' EE20 F004          	lfsr	2,4
  3306  0150' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3307  0152' 2700'              	addwf	fsr2l,f,b
  3308  0154' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3309  0156' 2300'              	addwfc	fsr2h,f,b
  3310  0158' 0E04               	movlw	4
  3311  015A' 6F00'              	movwf	indf2,b
  3312  015C' EF00' F000'        	goto	l399
  3313  0160'                    l4603:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;canlib/util/timing_util.c: 39:             timing->brp = 0;
  3317  0160' 0060' F000' F000'  	movff	can_generate_timing_params@timing,fsr2l
  3318  0166' 0060' F000' F000'  	movff	can_generate_timing_params@timing+1,fsr2h
  3319  016C' 0E00               	movlw	0
  3320  016E' 6F00'              	movwf	indf2,b
  3321  0170'                    
  3322                           ; BSR set to: 0
  3323                           ;canlib/util/timing_util.c: 40:             timing->sjw = 3;
  3324  0170' EE20 F001          	lfsr	2,1
  3325  0174' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3326  0176' 2700'              	addwf	fsr2l,f,b
  3327  0178' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3328  017A' 2300'              	addwfc	fsr2h,f,b
  3329  017C' 0E03               	movlw	3
  3330  017E' 6F00'              	movwf	indf2,b
  3331  0180'                    
  3332                           ; BSR set to: 0
  3333                           ;canlib/util/timing_util.c: 41:             timing->btlmode = 1;
  3334  0180' EE20 F006          	lfsr	2,6
  3335  0184' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3336  0186' 2700'              	addwf	fsr2l,f,b
  3337  0188' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3338  018A' 2300'              	addwfc	fsr2h,f,b
  3339  018C' 0E01               	movlw	1
  3340  018E' 6F00'              	movwf	indf2,b
  3341  0190'                    
  3342                           ; BSR set to: 0
  3343                           ;canlib/util/timing_util.c: 42:             timing->sam = 0;
  3344  0190' EE20 F002          	lfsr	2,2
  3345  0194' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3346  0196' 2700'              	addwf	fsr2l,f,b
  3347  0198' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3348  019A' 2300'              	addwfc	fsr2h,f,b
  3349  019C' 0E00               	movlw	0
  3350  019E' 6F00'              	movwf	indf2,b
  3351  01A0'                    
  3352                           ; BSR set to: 0
  3353                           ;canlib/util/timing_util.c: 43:             timing->seg1ph = 4;
  3354  01A0' EE20 F003          	lfsr	2,3
  3355  01A4' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3356  01A6' 2700'              	addwf	fsr2l,f,b
  3357  01A8' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3358  01AA' 2300'              	addwfc	fsr2h,f,b
  3359  01AC' 0E04               	movlw	4
  3360  01AE' 6F00'              	movwf	indf2,b
  3361  01B0'                    
  3362                           ; BSR set to: 0
  3363                           ;canlib/util/timing_util.c: 44:             timing->prseg = 0;
  3364  01B0' EE20 F005          	lfsr	2,5
  3365  01B4' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3366  01B6' 2700'              	addwf	fsr2l,f,b
  3367  01B8' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3368  01BA' 2300'              	addwfc	fsr2h,f,b
  3369  01BC' 0E00               	movlw	0
  3370  01BE' 6F00'              	movwf	indf2,b
  3371  01C0'                    
  3372                           ; BSR set to: 0
  3373                           ;canlib/util/timing_util.c: 45:             timing->seg2ph = 4;
  3374  01C0' EE20 F004          	lfsr	2,4
  3375  01C4' 5100'              	movf	can_generate_timing_params@timing& (0+255),w,b
  3376  01C6' 2700'              	addwf	fsr2l,f,b
  3377  01C8' 5100'              	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  3378  01CA' 2300'              	addwfc	fsr2h,f,b
  3379  01CC' 0E04               	movlw	4
  3380  01CE' 6F00'              	movwf	indf2,b
  3381  01D0' EF00' F000'        	goto	l399
  3382  01D4'                    l4621:
  3383  01D4' C000' F006'        	movff	can_generate_timing_params@can_frequency,??_can_generate_timing_params
  3384  01D8' C001' F007'        	movff	can_generate_timing_params@can_frequency+1,??_can_generate_timing_params+1
  3385  01DC' C002' F008'        	movff	can_generate_timing_params@can_frequency+2,??_can_generate_timing_params+2
  3386  01E0' C003' F009'        	movff	can_generate_timing_params@can_frequency+3,??_can_generate_timing_params+3
  3387                           
  3388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 7 sub-sw
      +                          itches
  3389                           ; Switch size 1, requested type "simple"
  3390                           ; Number of cases is 3, Range of values is 0 to 2
  3391                           ; switch strategies available:
  3392                           ; Name         Instructions Cycles
  3393                           ; simple_byte           10     6 (average)
  3394                           ;	Chosen strategy is simple_byte
  3395  01E4' 0100               	movlb	0	; () banked
  3396  01E6' 5100'              	movf	(??_can_generate_timing_params+3)& (0+255),w,b
  3397  01E8' 0A00               	xorlw	0	; case 0
  3398  01EA' B500'              	btfsc	status,2,b
  3399  01EC' EF00' F000'        	goto	l5397
  3400  01F0' 0A01               	xorlw	1	; case 1
  3401  01F2' B500'              	btfsc	status,2,b
  3402  01F4' EF00' F000'        	goto	l5399
  3403  01F8' 0A03               	xorlw	3	; case 2
  3404  01FA' B500'              	btfsc	status,2,b
  3405  01FC' EF00' F000'        	goto	l5401
  3406  0200' EF00' F000'        	goto	l399
  3407  0204'                    l5389:
  3408                           
  3409                           ; BSR set to: 0
  3410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 1, Range of values is 66 to 66
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte            4     3 (average)
  3416                           ;	Chosen strategy is simple_byte
  3417  0204' 5100'              	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  3418  0206' 0A42               	xorlw	66	; case 66
  3419  0208' B500'              	btfsc	status,2,b
  3420  020A' EF00' F000'        	goto	l5403
  3421  020E' EF00' F000'        	goto	l399
  3422  0212'                    l5403:
  3423                           
  3424                           ; BSR set to: 0
  3425                           ; Switch size 1, requested type "simple"
  3426                           ; Number of cases is 1, Range of values is 64 to 64
  3427                           ; switch strategies available:
  3428                           ; Name         Instructions Cycles
  3429                           ; simple_byte            4     3 (average)
  3430                           ;	Chosen strategy is simple_byte
  3431  0212' 5100'              	movf	??_can_generate_timing_params& (0+255),w,b
  3432  0214' 0A40               	xorlw	64	; case 64
  3433  0216' B500'              	btfsc	status,2,b
  3434  0218' EF00' F000'        	goto	l4603
  3435  021C' EF00' F000'        	goto	l399
  3436  0220'                    l5391:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3440                           ; Switch size 1, requested type "simple"
  3441                           ; Number of cases is 1, Range of values is 27 to 27
  3442                           ; switch strategies available:
  3443                           ; Name         Instructions Cycles
  3444                           ; simple_byte            4     3 (average)
  3445                           ;	Chosen strategy is simple_byte
  3446  0220' 5100'              	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  3447  0222' 0A1B               	xorlw	27	; case 27
  3448  0224' B500'              	btfsc	status,2,b
  3449  0226' EF00' F000'        	goto	l5405
  3450  022A' EF00' F000'        	goto	l399
  3451  022E'                    l5405:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ; Switch size 1, requested type "simple"
  3455                           ; Number of cases is 1, Range of values is 0 to 0
  3456                           ; switch strategies available:
  3457                           ; Name         Instructions Cycles
  3458                           ; simple_byte            4     3 (average)
  3459                           ;	Chosen strategy is simple_byte
  3460  022E' 5100'              	movf	??_can_generate_timing_params& (0+255),w,b
  3461  0230' 0A00               	xorlw	0	; case 0
  3462  0232' B500'              	btfsc	status,2,b
  3463  0234' EF00' F000'        	goto	l4587
  3464  0238' EF00' F000'        	goto	l399
  3465  023C'                    l5393:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3469                           ; Switch size 1, requested type "simple"
  3470                           ; Number of cases is 1, Range of values is 72 to 72
  3471                           ; switch strategies available:
  3472                           ; Name         Instructions Cycles
  3473                           ; simple_byte            4     3 (average)
  3474                           ;	Chosen strategy is simple_byte
  3475  023C' 5100'              	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  3476  023E' 0A48               	xorlw	72	; case 72
  3477  0240' B500'              	btfsc	status,2,b
  3478  0242' EF00' F000'        	goto	l5407
  3479  0246' EF00' F000'        	goto	l399
  3480  024A'                    l5407:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ; Switch size 1, requested type "simple"
  3484                           ; Number of cases is 1, Range of values is 0 to 0
  3485                           ; switch strategies available:
  3486                           ; Name         Instructions Cycles
  3487                           ; simple_byte            4     3 (average)
  3488                           ;	Chosen strategy is simple_byte
  3489  024A' 5100'              	movf	??_can_generate_timing_params& (0+255),w,b
  3490  024C' 0A00               	xorlw	0	; case 0
  3491  024E' B500'              	btfsc	status,2,b
  3492  0250' EF00' F000'        	goto	l4571
  3493  0254' EF00' F000'        	goto	l399
  3494  0258'                    l5395:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3498                           ; Switch size 1, requested type "simple"
  3499                           ; Number of cases is 1, Range of values is 108 to 108
  3500                           ; switch strategies available:
  3501                           ; Name         Instructions Cycles
  3502                           ; simple_byte            4     3 (average)
  3503                           ;	Chosen strategy is simple_byte
  3504  0258' 5100'              	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  3505  025A' 0A6C               	xorlw	108	; case 108
  3506  025C' B500'              	btfsc	status,2,b
  3507  025E' EF00' F000'        	goto	l5409
  3508  0262' EF00' F000'        	goto	l399
  3509  0266'                    l5409:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ; Switch size 1, requested type "simple"
  3513                           ; Number of cases is 1, Range of values is 0 to 0
  3514                           ; switch strategies available:
  3515                           ; Name         Instructions Cycles
  3516                           ; simple_byte            4     3 (average)
  3517                           ;	Chosen strategy is simple_byte
  3518  0266' 5100'              	movf	??_can_generate_timing_params& (0+255),w,b
  3519  0268' 0A00               	xorlw	0	; case 0
  3520  026A' B500'              	btfsc	status,2,b
  3521  026C' EF00' F000'        	goto	l4555
  3522  0270' EF00' F000'        	goto	l399
  3523  0274'                    l5397:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ; Switch size 1, requested type "simple"
  3527                           ; Number of cases is 2, Range of values is 15 to 183
  3528                           ; switch strategies available:
  3529                           ; Name         Instructions Cycles
  3530                           ; simple_byte            7     4 (average)
  3531                           ;	Chosen strategy is simple_byte
  3532  0274' 5100'              	movf	(??_can_generate_timing_params+2)& (0+255),w,b
  3533  0276' 0A0F               	xorlw	15	; case 15
  3534  0278' B500'              	btfsc	status,2,b
  3535  027A' EF00' F000'        	goto	l5389
  3536  027E' 0AB8               	xorlw	184	; case 183
  3537  0280' B500'              	btfsc	status,2,b
  3538  0282' EF00' F000'        	goto	l5391
  3539  0286' EF00' F000'        	goto	l399
  3540  028A'                    l5399:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ; Switch size 1, requested type "simple"
  3544                           ; Number of cases is 1, Range of values is 232 to 232
  3545                           ; switch strategies available:
  3546                           ; Name         Instructions Cycles
  3547                           ; simple_byte            4     3 (average)
  3548                           ;	Chosen strategy is simple_byte
  3549  028A' 5100'              	movf	(??_can_generate_timing_params+2)& (0+255),w,b
  3550  028C' 0AE8               	xorlw	232	; case 232
  3551  028E' B500'              	btfsc	status,2,b
  3552  0290' EF00' F000'        	goto	l5393
  3553  0294' EF00' F000'        	goto	l399
  3554  0298'                    l5401:
  3555                           
  3556                           ; BSR set to: 0
  3557                           ; Switch size 1, requested type "simple"
  3558                           ; Number of cases is 1, Range of values is 220 to 220
  3559                           ; switch strategies available:
  3560                           ; Name         Instructions Cycles
  3561                           ; simple_byte            4     3 (average)
  3562                           ;	Chosen strategy is simple_byte
  3563  0298' 5100'              	movf	(??_can_generate_timing_params+2)& (0+255),w,b
  3564  029A' 0ADC               	xorlw	220	; case 220
  3565  029C' B500'              	btfsc	status,2,b
  3566  029E' EF00' F000'        	goto	l5395
  3567  02A2' EF00' F000'        	goto	l399
  3568  02A6'                    l399:
  3569                           
  3570                           ; BSR set to: 0
  3571  02A6' 0012               	return		;funcret
  3572  02A8'                    __end_of_can_generate_timing_params:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _build_radi_info_msg *****************
  3576 ;; Defined at:
  3577 ;;		line 390 in file "canlib/can_common.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  timestamp       4    6[BANK0 ] unsigned long 
  3580 ;;  sensor_ident    1   10[BANK0 ] unsigned char 
  3581 ;;  adc_value       2   11[BANK0 ] unsigned short 
  3582 ;;  output          2   13[BANK0 ] PTR struct .
  3583 ;;		 -> main@radiation_msg(11), 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      _Bool 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3595 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;Total ram usage:        9 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 5
  3602 ;; This function calls:
  3603 ;;		_write_timestamp_3bytes
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text23
  3610  0000'                    __ptext23:
  3611                           	callstack 0
  3612  0000'                    _build_radi_info_msg:
  3613                           	callstack 25
  3614  0000'                    
  3615                           ;canlib/can_common.c: 390: _Bool build_radi_info_msg(uint32_t timestamp,;canlib/can_comm
      +                          on.c: 391:                          uint8_t sensor_identifier,;canlib/can_common.c: 392:
      +                                                    uint16_t adc_value,;canlib/can_common.c: 393:                 
      +                                   can_msg_t *output);canlib/can_common.c: 394:  {;canlib/can_common.c: 395:     i
      +                          f (!output) { return 0; }
  3616  0000' 0100               	movlb	0	; () banked
  3617  0002' 5100'              	movf	build_radi_info_msg@output& (0+255),w,b
  3618  0004' 1100'              	iorwf	(build_radi_info_msg@output+1)& (0+255),w,b
  3619  0006' A500'              	btfss	status,2,b
  3620  0008' EF00' F000'        	goto	u3141
  3621  000C' EF00' F000'        	goto	u3140
  3622  0010'                    u3141:
  3623  0010' EF00' F000'        	goto	l4527
  3624  0014'                    u3140:
  3625  0014' EF00' F000'        	goto	l95
  3626  0018'                    l4527:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;canlib/can_common.c: 397:     output->sid = 0x7A0 | 0x07;
  3630  0018' 0060' F000' F000'  	movff	build_radi_info_msg@output,fsr2l
  3631  001E' 0060' F000' F000'  	movff	build_radi_info_msg@output+1,fsr2h
  3632  0024' 0EA7               	movlw	167
  3633  0026' 6E00'              	movwf	postinc2,c
  3634  0028' 0E07               	movlw	7
  3635  002A' 6E00'              	movwf	postdec2,c
  3636  002C'                    
  3637                           ; BSR set to: 0
  3638                           ;canlib/can_common.c: 398:     write_timestamp_3bytes(timestamp, output);
  3639  002C' C006' F000'        	movff	build_radi_info_msg@timestamp,write_timestamp_3bytes@timestamp
  3640  0030' C007' F001'        	movff	build_radi_info_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
  3641  0034' C008' F002'        	movff	build_radi_info_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
  3642  0038' C009' F003'        	movff	build_radi_info_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
  3643  003C' C00D' F004'        	movff	build_radi_info_msg@output,write_timestamp_3bytes@output
  3644  0040' C00E' F005'        	movff	build_radi_info_msg@output+1,write_timestamp_3bytes@output+1
  3645  0044' EC00' F000'        	call	_write_timestamp_3bytes	;wreg free
  3646  0048'                    
  3647                           ;canlib/can_common.c: 400:     output->data[3] = sensor_identifier;
  3648  0048' 0100               	movlb	0	; () banked
  3649  004A' EE20 F006          	lfsr	2,6
  3650  004E' 5100'              	movf	build_radi_info_msg@output& (0+255),w,b
  3651  0050' 2700'              	addwf	fsr2l,f,b
  3652  0052' 5100'              	movf	(build_radi_info_msg@output+1)& (0+255),w,b
  3653  0054' 2300'              	addwfc	fsr2h,f,b
  3654  0056' 0060' F000' F000'  	movff	build_radi_info_msg@sensor_identifier,indf2
  3655  005C'                    
  3656                           ; BSR set to: 0
  3657                           ;canlib/can_common.c: 401:     output->data[4] = (uint8_t) ((adc_value >> 8) & 0x0F);
  3658  005C' EE20 F007          	lfsr	2,7
  3659  0060' 5100'              	movf	build_radi_info_msg@output& (0+255),w,b
  3660  0062' 2700'              	addwf	fsr2l,f,b
  3661  0064' 5100'              	movf	(build_radi_info_msg@output+1)& (0+255),w,b
  3662  0066' 2300'              	addwfc	fsr2h,f,b
  3663  0068' 5100'              	movf	(build_radi_info_msg@adc_value+1)& (0+255),w,b
  3664  006A' 0B0F               	andlw	15
  3665  006C' 6E00'              	movwf	indf2,c
  3666  006E'                    
  3667                           ; BSR set to: 0
  3668                           ;canlib/can_common.c: 402:     output->data[5] = (uint8_t) (adc_value & 0xFF);
  3669  006E' EE20 F008          	lfsr	2,8
  3670  0072' 5100'              	movf	build_radi_info_msg@output& (0+255),w,b
  3671  0074' 2700'              	addwf	fsr2l,f,b
  3672  0076' 5100'              	movf	(build_radi_info_msg@output+1)& (0+255),w,b
  3673  0078' 2300'              	addwfc	fsr2h,f,b
  3674  007A' 0060' F000' F000'  	movff	build_radi_info_msg@adc_value,indf2
  3675  0080'                    
  3676                           ; BSR set to: 0
  3677                           ;canlib/can_common.c: 404:     output->data_len = 6;
  3678  0080' EE20 F002          	lfsr	2,2
  3679  0084' 5100'              	movf	build_radi_info_msg@output& (0+255),w,b
  3680  0086' 2700'              	addwf	fsr2l,f,b
  3681  0088' 5100'              	movf	(build_radi_info_msg@output+1)& (0+255),w,b
  3682  008A' 2300'              	addwfc	fsr2h,f,b
  3683  008C' 0E06               	movlw	6
  3684  008E' 6F00'              	movwf	indf2,b
  3685  0090'                    l95:
  3686                           
  3687                           ; BSR set to: 0
  3688  0090' 0012               	return		;funcret
  3689  0092'                    __end_of_build_radi_info_msg:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function _write_timestamp_3bytes *****************
  3693 ;; Defined at:
  3694 ;;		line 19 in file "canlib/can_common.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  timestamp       4    0[BANK0 ] unsigned long 
  3697 ;;  output          2    4[BANK0 ] PTR struct .
  3698 ;;		 -> send_status_ok@board_stat_msg(11), main@radiation_msg(11), 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3710 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;Total ram usage:        6 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 4
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_build_board_stat_msg
  3721 ;;		_build_radi_info_msg
  3722 ;;		_build_general_cmd_msg
  3723 ;;		_build_debug_msg
  3724 ;;		_build_reset_msg
  3725 ;;		_build_actuator_cmd_msg
  3726 ;;		_build_actuator_stat_msg
  3727 ;;		_build_arm_cmd_msg
  3728 ;;		_build_arm_stat_msg
  3729 ;;		_build_altitude_data_msg
  3730 ;;		_build_gps_time_msg
  3731 ;;		_build_gps_lat_msg
  3732 ;;		_build_gps_lon_msg
  3733 ;;		_build_gps_alt_msg
  3734 ;;		_build_gps_info_msg
  3735 ;;		_build_fill_msg
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text24
  3740  0000'                    __ptext24:
  3741                           	callstack 0
  3742  0000'                    _write_timestamp_3bytes:
  3743                           	callstack 24
  3744  0000'                    
  3745                           ;canlib/can_common.c: 19: static void write_timestamp_3bytes(uint32_t timestamp, can_msg
      +                          _t *output);canlib/can_common.c: 20: {;canlib/can_common.c: 21:     output->data[0] = (t
      +                          imestamp >> 16) & 0xff;
  3746  0000' 0100               	movlb	0	; () banked
  3747  0002' EE20 F003          	lfsr	2,3
  3748  0006' 5100'              	movf	write_timestamp_3bytes@output& (0+255),w,b
  3749  0008' 2700'              	addwf	fsr2l,f,b
  3750  000A' 5100'              	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
  3751  000C' 2300'              	addwfc	fsr2h,f,b
  3752  000E' 0060' F000' F000'  	movff	write_timestamp_3bytes@timestamp+2,indf2
  3753                           
  3754                           ;canlib/can_common.c: 22:     output->data[1] = (timestamp >> 8) & 0xff;
  3755  0014' EE20 F004          	lfsr	2,4
  3756  0018' 5100'              	movf	write_timestamp_3bytes@output& (0+255),w,b
  3757  001A' 2700'              	addwf	fsr2l,f,b
  3758  001C' 5100'              	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
  3759  001E' 2300'              	addwfc	fsr2h,f,b
  3760  0020' 0060' F000' F000'  	movff	write_timestamp_3bytes@timestamp+1,indf2
  3761                           
  3762                           ;canlib/can_common.c: 23:     output->data[2] = (timestamp >> 0) & 0xff;
  3763  0026' EE20 F005          	lfsr	2,5
  3764  002A' 5100'              	movf	write_timestamp_3bytes@output& (0+255),w,b
  3765  002C' 2700'              	addwf	fsr2l,f,b
  3766  002E' 5100'              	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
  3767  0030' 2300'              	addwfc	fsr2h,f,b
  3768  0032' 0060' F000' F000'  	movff	write_timestamp_3bytes@timestamp,indf2
  3769  0038'                    
  3770                           ; BSR set to: 0
  3771  0038' 0012               	return		;funcret
  3772  003A'                    __end_of_write_timestamp_3bytes:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _adc_init *****************
  3776 ;; Defined at:
  3777 ;;		line 4 in file "adc.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 4
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_main
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text25
  3806  0000'                    __ptext25:
  3807                           	callstack 0
  3808  0000'                    _adc_init:
  3809                           	callstack 26
  3810  0000'                    
  3811                           ;adc.c: 9:     TRISCbits.TRISC7 = 1;
  3812  0000' 8EC4               	bsf	196,7,c	;volatile
  3813                           
  3814                           ;adc.c: 10:     TRISCbits.TRISC6 = 1;
  3815  0002' 8CC4               	bsf	196,6,c	;volatile
  3816                           
  3817                           ;adc.c: 11:     TRISCbits.TRISC5 = 1;
  3818  0004' 8AC4               	bsf	196,5,c	;volatile
  3819                           
  3820                           ;adc.c: 14:     ANSELCbits.ANSELC7 = 1;
  3821  0006' 013A               	movlb	58	; () banked
  3822  0008' 8F60               	bsf	96,7,b	;volatile
  3823                           
  3824                           ;adc.c: 15:     ANSELCbits.ANSELC6 = 1;
  3825  000A' 8D60               	bsf	96,6,b	;volatile
  3826                           
  3827                           ;adc.c: 16:     ANSELCbits.ANSELC5 = 1;
  3828  000C' 8B60               	bsf	96,5,b	;volatile
  3829                           
  3830                           ;adc.c: 19:     ADCON0bits.CS = 1;
  3831  000E' 013E               	movlb	62	; () banked
  3832  0010' 89F8               	bsf	248,4,b	;volatile
  3833  0012'                    
  3834                           ; BSR set to: 62
  3835                           ;adc.c: 20:     ADCON0bits.FM = 1;
  3836  0012' 51F8               	movf	248,w,b	;volatile
  3837  0014' 0BF3               	andlw	-13
  3838  0016' 0904               	iorlw	4
  3839  0018' 6FF8               	movwf	248,b	;volatile
  3840  001A'                    
  3841                           ; BSR set to: 62
  3842                           ;adc.c: 21:     ADCON0bits.ON = 1;
  3843  001A' 8FF8               	bsf	248,7,b	;volatile
  3844                           
  3845                           ;adc.c: 30:     ADREFbits.ADPREF = 11;
  3846  001C' 51FD               	movf	253,w,b	;volatile
  3847  001E' 0BF0               	andlw	-16
  3848  0020' 090B               	iorlw	11
  3849  0022' 6FFD               	movwf	253,b	;volatile
  3850                           
  3851                           ;adc.c: 31:     ADREFbits.ADNREF = 0;
  3852  0024' 0E0F               	movlw	-241
  3853  0026' 17FD               	andwf	253,f,b	;volatile
  3854  0028'                    
  3855                           ; BSR set to: 62
  3856  0028' 0012               	return		;funcret
  3857  002A'                    __end_of_adc_init:
  3858                           	callstack 0
  3859                           
  3860 ;; *************** function _WHITE_LED_ON *****************
  3861 ;; Defined at:
  3862 ;;		line 17 in file "mama.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		None
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:        0 bytes
  3881 ;; Hardware stack levels used: 1
  3882 ;; Hardware stack levels required when called: 4
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text26
  3891  0000'                    __ptext26:
  3892                           	callstack 0
  3893  0000'                    _WHITE_LED_ON:
  3894                           	callstack 26
  3895  0000' 88BB               	bsf	16315,4,c	;volatile
  3896  0002' 0012               	return		;funcret
  3897  0004'                    __end_of_WHITE_LED_ON:
  3898                           	callstack 0
  3899                           
  3900 ;; *************** function _WHITE_LED_OFF *****************
  3901 ;; Defined at:
  3902 ;;		line 18 in file "mama.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		None
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 4
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text27
  3931  0000'                    __ptext27:
  3932                           	callstack 0
  3933  0000'                    _WHITE_LED_OFF:
  3934                           	callstack 26
  3935  0000' 98BB               	bcf	16315,4,c	;volatile
  3936  0002' 0012               	return		;funcret
  3937  0004'                    __end_of_WHITE_LED_OFF:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _BLUE_LED_ON *****************
  3941 ;; Defined at:
  3942 ;;		line 19 in file "mama.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		None
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;Total ram usage:        0 bytes
  3961 ;; Hardware stack levels used: 1
  3962 ;; Hardware stack levels required when called: 4
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_main
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text28
  3971  0000'                    __ptext28:
  3972                           	callstack 0
  3973  0000'                    _BLUE_LED_ON:
  3974                           	callstack 26
  3975  0000' 86BB               	bsf	16315,3,c	;volatile
  3976  0002' 0012               	return		;funcret
  3977  0004'                    __end_of_BLUE_LED_ON:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function _BLUE_LED_OFF *****************
  3981 ;; Defined at:
  3982 ;;		line 20 in file "mama.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		None
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;Total ram usage:        0 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 4
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_main
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text29
  4011  0000'                    __ptext29:
  4012                           	callstack 0
  4013  0000'                    _BLUE_LED_OFF:
  4014                           	callstack 26
  4015  0000' 96BB               	bcf	16315,3,c	;volatile
  4016  0002' 0012               	return		;funcret
  4017  0004'                    __end_of_BLUE_LED_OFF:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _interrupt_handler *****************
  4021 ;; Defined at:
  4022 ;;		line 113 in file "main.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 3
  4043 ;; This function calls:
  4044 ;;		_can_handle_interrupt
  4045 ;;		_pin_interrupt_handler
  4046 ;;		_timer0_handle_interrupt
  4047 ;; This function is called by:
  4048 ;;		Interrupt level 2
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text30
  4053  0000'                    __ptext30:
  4054                           	callstack 0
  4055  0000'                    _interrupt_handler:
  4056                           	callstack 22
  4057  0000'                    
  4058                           ;main.c: 114:     if (PIR5) {
  4059  0000' 0139               	movlb	57	; () banked
  4060  0002' 51A5               	movf	165,w,b	;volatile
  4061  0004' B500'              	btfsc	status,2,b
  4062  0006' EF00' F000'        	goto	i2u283_41
  4063  000A' EF00' F000'        	goto	i2u283_40
  4064  000E'                    i2u283_41:
  4065  000E' EF00' F000'        	goto	i2l4033
  4066  0012'                    i2u283_40:
  4067  0012'                    
  4068                           ; BSR set to: 57
  4069                           ;main.c: 115:         can_handle_interrupt();
  4070  0012' EC00' F000'        	call	_can_handle_interrupt	;wreg free
  4071  0016'                    i2l4033:
  4072                           
  4073                           ;main.c: 119:     if (IOCAFbits.IOCAF0 || IOCAFbits.IOCAF1 || IOCAFbits.IOCAF2) {
  4074  0016' 013A               	movlb	58	; () banked
  4075  0018' B147               	btfsc	71,0,b	;volatile
  4076  001A' EF00' F000'        	goto	i2u284_41
  4077  001E' EF00' F000'        	goto	i2u284_40
  4078  0022'                    i2u284_41:
  4079  0022' EF00' F000'        	goto	i2l4039
  4080  0026'                    i2u284_40:
  4081  0026'                    
  4082                           ; BSR set to: 58
  4083  0026' B347               	btfsc	71,1,b	;volatile
  4084  0028' EF00' F000'        	goto	i2u285_41
  4085  002C' EF00' F000'        	goto	i2u285_40
  4086  0030'                    i2u285_41:
  4087  0030' EF00' F000'        	goto	i2l4039
  4088  0034'                    i2u285_40:
  4089  0034'                    
  4090                           ; BSR set to: 58
  4091  0034' A547               	btfss	71,2,b	;volatile
  4092  0036' EF00' F000'        	goto	i2u286_41
  4093  003A' EF00' F000'        	goto	i2u286_40
  4094  003E'                    i2u286_41:
  4095  003E' EF00' F000'        	goto	i2l4041
  4096  0042'                    i2u286_40:
  4097  0042'                    i2l4039:
  4098                           
  4099                           ; BSR set to: 58
  4100                           ;main.c: 120:         pin_interrupt_handler();
  4101  0042' EC00' F000'        	call	_pin_interrupt_handler	;wreg free
  4102  0046'                    i2l4041:
  4103                           
  4104                           ;main.c: 125:     if (PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1) {
  4105  0046' 0139               	movlb	57	; () banked
  4106  0048' AF93               	btfss	147,7,b	;volatile
  4107  004A' EF00' F000'        	goto	i2u287_41
  4108  004E' EF00' F000'        	goto	i2u287_40
  4109  0052'                    i2u287_41:
  4110  0052' EF00' F000'        	goto	i2l642
  4111  0056'                    i2u287_40:
  4112  0056'                    
  4113                           ; BSR set to: 57
  4114  0056' AFA3               	btfss	163,7,b	;volatile
  4115  0058' EF00' F000'        	goto	i2u288_41
  4116  005C' EF00' F000'        	goto	i2u288_40
  4117  0060'                    i2u288_41:
  4118  0060' EF00' F000'        	goto	i2l642
  4119  0064'                    i2u288_40:
  4120  0064'                    
  4121                           ; BSR set to: 57
  4122                           ;main.c: 126:         timer0_handle_interrupt();
  4123  0064' EC00' F000'        	call	_timer0_handle_interrupt	;wreg free
  4124  0068'                    
  4125                           ;main.c: 127:         PIR3bits.TMR0IF = 0;
  4126  0068' 0139               	movlb	57	; () banked
  4127  006A' 9FA3               	bcf	163,7,b	;volatile
  4128  006C'                    i2l642:
  4129                           
  4130                           ; BSR set to: 57
  4131  006C' 0011               	retfie		f
  4132  006E'                    __end_of_interrupt_handler:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _timer0_handle_interrupt *****************
  4136 ;; Defined at:
  4137 ;;		line 49 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;Total ram usage:        0 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_interrupt_handler
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text31
  4165  0000'                    __ptext31:
  4166                           	callstack 0
  4167  0000'                    _timer0_handle_interrupt:
  4168                           	callstack 24
  4169  0000'                    
  4170                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 53:     internal_count += 64;
  4171  0000' 0E40               	movlw	64
  4172  0002' 2600'              	addwf	timer0_handle_interrupt@internal_count^0,f,c
  4173                           
  4174                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 54:     if (internal_count > 125) {
  4175  0004' 0E7D               	movlw	125
  4176  0006' 6400'              	cpfsgt	timer0_handle_interrupt@internal_count^0,c
  4177  0008' EF00' F000'        	goto	i2u59_41
  4178  000C' EF00' F000'        	goto	i2u59_40
  4179  0010'                    i2u59_41:
  4180  0010' EF00' F000'        	goto	i2l526
  4181  0014'                    i2u59_40:
  4182  0014'                    
  4183                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 55:         internal_count -= 125;
  4184  0014' 0E7D               	movlw	125
  4185  0016' 5E00'              	subwf	timer0_handle_interrupt@internal_count^0,f,c
  4186                           
  4187                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 56:         millis_counter++;
  4188  0018' 0E01               	movlw	1
  4189  001A' 2600'              	addwf	_millis_counter^0,f,c
  4190  001C' 0E00               	movlw	0
  4191  001E' 2200'              	addwfc	(_millis_counter+1)^0,f,c
  4192  0020' 2200'              	addwfc	(_millis_counter+2)^0,f,c
  4193  0022' 2200'              	addwfc	(_millis_counter+3)^0,f,c
  4194  0024'                    i2l526:
  4195  0024' 0012               	return		;funcret
  4196  0026'                    __end_of_timer0_handle_interrupt:
  4197                           	callstack 0
  4198                           
  4199 ;; *************** function _pin_interrupt_handler *****************
  4200 ;; Defined at:
  4201 ;;		line 26 in file "pin_interrupt.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;Total ram usage:        0 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; This function calls:
  4222 ;;		Nothing
  4223 ;; This function is called by:
  4224 ;;		_interrupt_handler
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text32
  4229  0000'                    __ptext32:
  4230                           	callstack 0
  4231  0000'                    _pin_interrupt_handler:
  4232                           	callstack 24
  4233  0000'                    
  4234                           ;pin_interrupt.c: 28:     if (IOCAFbits.IOCAF0) {
  4235  0000' 013A               	movlb	58	; () banked
  4236  0002' A147               	btfss	71,0,b	;volatile
  4237  0004' EF00' F000'        	goto	i2u207_41
  4238  0008' EF00' F000'        	goto	i2u207_40
  4239  000C'                    i2u207_41:
  4240  000C' EF00' F000'        	goto	i2l3475
  4241  0010'                    i2u207_40:
  4242  0010'                    
  4243                           ; BSR set to: 58
  4244                           ;pin_interrupt.c: 29:         IOCAFbits.IOCAF0 = 0;
  4245  0010' 9147               	bcf	71,0,b	;volatile
  4246  0012'                    
  4247                           ; BSR set to: 58
  4248                           ;pin_interrupt.c: 30:         sensor_identifier = 3;
  4249  0012' 0E03               	movlw	3
  4250  0014' 0100               	movlb	0	; () banked
  4251  0016' 6F00'              	movwf	_sensor_identifier& (0+255),b	;volatile
  4252                           
  4253                           ;pin_interrupt.c: 32:         ADPCH = 0b010111;
  4254  0018' 0E17               	movlw	23
  4255  001A' 013E               	movlb	62	; () banked
  4256  001C' 6FF1               	movwf	241,b	;volatile
  4257  001E'                    i2l3475:
  4258                           
  4259                           ;pin_interrupt.c: 34:     if (IOCAFbits.IOCAF1) {
  4260  001E' 013A               	movlb	58	; () banked
  4261  0020' A347               	btfss	71,1,b	;volatile
  4262  0022' EF00' F000'        	goto	i2u208_41
  4263  0026' EF00' F000'        	goto	i2u208_40
  4264  002A'                    i2u208_41:
  4265  002A' EF00' F000'        	goto	i2l3481
  4266  002E'                    i2u208_40:
  4267  002E'                    
  4268                           ; BSR set to: 58
  4269                           ;pin_interrupt.c: 35:         IOCAFbits.IOCAF1 = 0;
  4270  002E' 9347               	bcf	71,1,b	;volatile
  4271  0030'                    
  4272                           ; BSR set to: 58
  4273                           ;pin_interrupt.c: 36:         sensor_identifier = 1;
  4274  0030' 0E01               	movlw	1
  4275  0032' 0100               	movlb	0	; () banked
  4276  0034' 6F00'              	movwf	_sensor_identifier& (0+255),b	;volatile
  4277                           
  4278                           ;pin_interrupt.c: 38:         ADPCH = 0b010101;
  4279  0036' 0E15               	movlw	21
  4280  0038' 013E               	movlb	62	; () banked
  4281  003A' 6FF1               	movwf	241,b	;volatile
  4282  003C'                    i2l3481:
  4283                           
  4284                           ;pin_interrupt.c: 40:     if (IOCAFbits.IOCAF2) {
  4285  003C' 013A               	movlb	58	; () banked
  4286  003E' A547               	btfss	71,2,b	;volatile
  4287  0040' EF00' F000'        	goto	i2u209_41
  4288  0044' EF00' F000'        	goto	i2u209_40
  4289  0048'                    i2u209_41:
  4290  0048' EF00' F000'        	goto	i2l682
  4291  004C'                    i2u209_40:
  4292  004C'                    
  4293                           ; BSR set to: 58
  4294                           ;pin_interrupt.c: 41:         IOCAFbits.IOCAF2 = 0;
  4295  004C' 9547               	bcf	71,2,b	;volatile
  4296  004E'                    
  4297                           ; BSR set to: 58
  4298                           ;pin_interrupt.c: 42:         sensor_identifier = 2;
  4299  004E' 0E02               	movlw	2
  4300  0050' 0100               	movlb	0	; () banked
  4301  0052' 6F00'              	movwf	_sensor_identifier& (0+255),b	;volatile
  4302                           
  4303                           ;pin_interrupt.c: 44:         ADPCH = 0b010110;
  4304  0054' 0E16               	movlw	22
  4305  0056' 013E               	movlb	62	; () banked
  4306  0058' 6FF1               	movwf	241,b	;volatile
  4307  005A'                    i2l682:
  4308  005A' 0012               	return		;funcret
  4309  005C'                    __end_of_pin_interrupt_handler:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _can_handle_interrupt *****************
  4313 ;; Defined at:
  4314 ;;		line 120 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  rcvd_msg       11   26[COMRAM] struct .
  4319 ;;  rcvd_msg       11   15[COMRAM] struct .
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      void 
  4322 ;; Registers used:
  4323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;Total ram usage:       26 bytes
  4334 ;; Hardware stack levels used: 1
  4335 ;; Hardware stack levels required when called: 2
  4336 ;; This function calls:
  4337 ;;		Absolute function
  4338 ;;		_can_msg_handler
  4339 ;;		i2_memcpy
  4340 ;; This function is called by:
  4341 ;;		_interrupt_handler
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text33
  4346  0000'                    __ptext33:
  4347                           	callstack 0
  4348  0000'                    _can_handle_interrupt:
  4349                           	callstack 22
  4350  0000'                    
  4351                           ;canlib/pic18f26k83/pic18f26k83_can.c: 124:     if (COMSTATbits.RXB0OVFL || COMSTATbits.
      +                          RXB1OVFL) {
  4352  0000' BE90               	btfsc	144,7,c	;volatile
  4353  0002' EF00' F000'        	goto	i2u192_41
  4354  0006' EF00' F000'        	goto	i2u192_40
  4355  000A'                    i2u192_41:
  4356  000A' EF00' F000'        	goto	i2l490
  4357  000E'                    i2u192_40:
  4358  000E' AC90               	btfss	144,6,c	;volatile
  4359  0010' EF00' F000'        	goto	i2u193_41
  4360  0014' EF00' F000'        	goto	i2u193_40
  4361  0018'                    i2u193_41:
  4362  0018' EF00' F000'        	goto	i2l488
  4363  001C'                    i2u193_40:
  4364  001C'                    i2l490:
  4365                           
  4366                           ;canlib/pic18f26k83/pic18f26k83_can.c: 125:         COMSTATbits.RXB0OVFL = 0;
  4367  001C' 9E90               	bcf	144,7,c	;volatile
  4368                           
  4369                           ;canlib/pic18f26k83/pic18f26k83_can.c: 126:         COMSTATbits.RXB1OVFL = 0;
  4370  001E' 9C90               	bcf	144,6,c	;volatile
  4371  0020'                    i2l488:
  4372                           
  4373                           ;canlib/pic18f26k83/pic18f26k83_can.c: 131:     if (PIR5bits.RXB0IF) {
  4374  0020' 0139               	movlb	57	; () banked
  4375  0022' A1A5               	btfss	165,0,b	;volatile
  4376  0024' EF00' F000'        	goto	i2u194_41
  4377  0028' EF00' F000'        	goto	i2u194_40
  4378  002C'                    i2u194_41:
  4379  002C' EF00' F000'        	goto	i2l491
  4380  0030'                    i2u194_40:
  4381  0030'                    
  4382                           ; BSR set to: 57
  4383                           ;canlib/pic18f26k83/pic18f26k83_can.c: 132:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 133:         rcvd_msg.sid = (((uint16_t)RXB0SIDH) << 3) | (RXB0SID
      +                          L >> 5);
  4384  0030' 006F F000' F000'   	movff	16258,??_can_handle_interrupt	;volatile
  4385  0036' 0E05               	movlw	5
  4386  0038' 6E00'              	movwf	(??_can_handle_interrupt+1)^0,c
  4387  003A'                    i2u195_45:
  4388  003A' 9100'              	bcf	status,0,b
  4389  003C' 3200'              	rrcf	??_can_handle_interrupt^0,f,c
  4390  003E' 2E00'              	decfsz	(??_can_handle_interrupt+1)^0,f,c
  4391  0040' EF00' F000'        	goto	i2u195_45
  4392  0044' 5000'              	movf	??_can_handle_interrupt^0,w,c
  4393  0046' 006F F000' F000'   	movff	16257,??_can_handle_interrupt+2	;volatile
  4394  004C' 6A00'              	clrf	(??_can_handle_interrupt+3)^0,c
  4395  004E' 9100'              	bcf	status,0,b
  4396  0050' 3600'              	rlcf	(??_can_handle_interrupt+2)^0,f,c
  4397  0052' 3600'              	rlcf	(??_can_handle_interrupt+3)^0,f,c
  4398  0054' 9100'              	bcf	status,0,b
  4399  0056' 3600'              	rlcf	(??_can_handle_interrupt+2)^0,f,c
  4400  0058' 3600'              	rlcf	(??_can_handle_interrupt+3)^0,f,c
  4401  005A' 9100'              	bcf	status,0,b
  4402  005C' 3600'              	rlcf	(??_can_handle_interrupt+2)^0,f,c
  4403  005E' 3600'              	rlcf	(??_can_handle_interrupt+3)^0,f,c
  4404  0060' 1000'              	iorwf	(??_can_handle_interrupt+2)^0,w,c
  4405  0062' 6E00'              	movwf	can_handle_interrupt@rcvd_msg^0,c
  4406  0064' 5000'              	movf	(??_can_handle_interrupt+3)^0,w,c
  4407  0066' 6E00'              	movwf	(can_handle_interrupt@rcvd_msg+1)^0,c
  4408                           
  4409                           ;canlib/pic18f26k83/pic18f26k83_can.c: 134:         rcvd_msg.data_len = RXB0DLCbits.DLC;
  4410  0068' 5085               	movf	133,w,c	;volatile
  4411  006A' 0B0F               	andlw	15
  4412  006C' 6E00'              	movwf	(can_handle_interrupt@rcvd_msg+2)^0,c
  4413  006E'                    
  4414                           ; BSR set to: 57
  4415                           ;canlib/pic18f26k83/pic18f26k83_can.c: 135:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB0D0, rcvd_msg.data_len);
  4416  006E' 0E00'              	movlw	low (can_handle_interrupt@rcvd_msg+3)
  4417  0070' 6E00'              	movwf	i2memcpy@d1^0,c
  4418  0072' 0E00'              	movlw	high (can_handle_interrupt@rcvd_msg+3)
  4419  0074' 6E00'              	movwf	(i2memcpy@d1+1)^0,c
  4420  0076' 0E86               	movlw	134
  4421  0078' 6E00'              	movwf	i2memcpy@s1^0,c
  4422  007A' 0E3F               	movlw	63
  4423  007C' 6E00'              	movwf	(i2memcpy@s1+1)^0,c
  4424  007E' C011' F004'        	movff	can_handle_interrupt@rcvd_msg+2,i2memcpy@n
  4425  0082' 6A00'              	clrf	(i2memcpy@n+1)^0,c
  4426  0084' EC00' F000'        	call	i2_memcpy	;wreg free
  4427  0088'                    
  4428                           ;canlib/pic18f26k83/pic18f26k83_can.c: 138:         if (((void*)0) != can_rcv_cb) {
  4429  0088' 5000'              	movf	_can_rcv_cb^0,w,c
  4430  008A' 1000'              	iorwf	(_can_rcv_cb+1)^0,w,c
  4431  008C' B500'              	btfsc	status,2,b
  4432  008E' EF00' F000'        	goto	i2u196_41
  4433  0092' EF00' F000'        	goto	i2u196_40
  4434  0096'                    i2u196_41:
  4435  0096' EF00' F000'        	goto	i2l3401
  4436  009A'                    i2u196_40:
  4437  009A'                    
  4438                           ;canlib/pic18f26k83/pic18f26k83_can.c: 139:             can_rcv_cb(&rcvd_msg);
  4439  009A' 0E00'              	movlw	low can_handle_interrupt@rcvd_msg
  4440  009C' 6E00'              	movwf	can_msg_handler@msg^0,c
  4441  009E' 0E00'              	movlw	high can_handle_interrupt@rcvd_msg
  4442  00A0' 6E00'              	movwf	(can_msg_handler@msg+1)^0,c
  4443  00A2' D802               	call	i2u197_48
  4444  00A4' EF00' F000'        	goto	i2u197_49
  4445  00A8'                    i2u197_48:
  4446  00A8' 0005               	push	
  4447  00AA' 6F00'              	movwf	pclath,b
  4448  00AC' 5000'              	movf	_can_rcv_cb^0,w,c
  4449  00AE' 6F00'              	movwf	tosl,b
  4450  00B0' 5000'              	movf	(_can_rcv_cb+1)^0,w,c
  4451  00B2' 6F01'              	movwf	tosl+1,b
  4452  00B4' 5100'              	movf	tblptru,w,b
  4453  00B6' 6F02'              	movwf	tosl+2,b
  4454  00B8' 5100'              	movf	pclath,w,b
  4455  00BA' 0012               	return		;indir
  4456  00BC'                    i2u197_49:
  4457  00BC'                    i2l3401:
  4458                           
  4459                           ;canlib/pic18f26k83/pic18f26k83_can.c: 142:         PIR5bits.RXB0IF = 0;
  4460  00BC' 0139               	movlb	57	; () banked
  4461  00BE' 91A5               	bcf	165,0,b	;volatile
  4462  00C0'                    
  4463                           ; BSR set to: 57
  4464                           ;canlib/pic18f26k83/pic18f26k83_can.c: 143:         RXB0CONbits.RXFUL = 0;
  4465  00C0' 9E80               	bcf	128,7,c	;volatile
  4466  00C2' EF00' F000'        	goto	i2l493
  4467  00C6'                    i2l491:
  4468                           
  4469                           ; BSR set to: 57
  4470  00C6' A3A5               	btfss	165,1,b	;volatile
  4471  00C8' EF00' F000'        	goto	i2u198_41
  4472  00CC' EF00' F000'        	goto	i2u198_40
  4473  00D0'                    i2u198_41:
  4474  00D0' EF00' F000'        	goto	i2l495
  4475  00D4'                    i2u198_40:
  4476  00D4'                    
  4477                           ; BSR set to: 57
  4478                           ;canlib/pic18f26k83/pic18f26k83_can.c: 147:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 148:         rcvd_msg.sid = (((uint16_t)RXB1SIDH) << 3) | (RXB1SID
      +                          L >> 5);
  4479  00D4' 006D F000' F000'   	movff	14322,??_can_handle_interrupt	;volatile
  4480  00DA' 0E05               	movlw	5
  4481  00DC' 6E00'              	movwf	(??_can_handle_interrupt+1)^0,c
  4482  00DE'                    i2u199_45:
  4483  00DE' 9100'              	bcf	status,0,b
  4484  00E0' 3200'              	rrcf	??_can_handle_interrupt^0,f,c
  4485  00E2' 2E00'              	decfsz	(??_can_handle_interrupt+1)^0,f,c
  4486  00E4' EF00' F000'        	goto	i2u199_45
  4487  00E8' 5000'              	movf	??_can_handle_interrupt^0,w,c
  4488  00EA' 006D F000' F000'   	movff	14321,??_can_handle_interrupt+2	;volatile
  4489  00F0' 6A00'              	clrf	(??_can_handle_interrupt+3)^0,c
  4490  00F2' 9100'              	bcf	status,0,b
  4491  00F4' 3600'              	rlcf	(??_can_handle_interrupt+2)^0,f,c
  4492  00F6' 3600'              	rlcf	(??_can_handle_interrupt+3)^0,f,c
  4493  00F8' 9100'              	bcf	status,0,b
  4494  00FA' 3600'              	rlcf	(??_can_handle_interrupt+2)^0,f,c
  4495  00FC' 3600'              	rlcf	(??_can_handle_interrupt+3)^0,f,c
  4496  00FE' 9100'              	bcf	status,0,b
  4497  0100' 3600'              	rlcf	(??_can_handle_interrupt+2)^0,f,c
  4498  0102' 3600'              	rlcf	(??_can_handle_interrupt+3)^0,f,c
  4499  0104' 1000'              	iorwf	(??_can_handle_interrupt+2)^0,w,c
  4500  0106' 6E00'              	movwf	can_handle_interrupt@rcvd_msg_1373^0,c
  4501  0108' 5000'              	movf	(??_can_handle_interrupt+3)^0,w,c
  4502  010A' 6E00'              	movwf	(can_handle_interrupt@rcvd_msg_1373+1)^0,c
  4503                           
  4504                           ;canlib/pic18f26k83/pic18f26k83_can.c: 149:         rcvd_msg.data_len = RXB1DLCbits.DLC;
  4505  010C' 0137               	movlb	55	; () banked
  4506  010E' 51F5               	movf	245,w,b	;volatile
  4507  0110' 0B0F               	andlw	15
  4508  0112' 6E00'              	movwf	(can_handle_interrupt@rcvd_msg_1373+2)^0,c
  4509  0114'                    
  4510                           ; BSR set to: 55
  4511                           ;canlib/pic18f26k83/pic18f26k83_can.c: 150:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB1D0, rcvd_msg.data_len);
  4512  0114' 0E00'              	movlw	low (can_handle_interrupt@rcvd_msg_1373+3)
  4513  0116' 6E00'              	movwf	i2memcpy@d1^0,c
  4514  0118' 0E00'              	movlw	high (can_handle_interrupt@rcvd_msg_1373+3)
  4515  011A' 6E00'              	movwf	(i2memcpy@d1+1)^0,c
  4516  011C' 0EF6               	movlw	246
  4517  011E' 6E00'              	movwf	i2memcpy@s1^0,c
  4518  0120' 0E37               	movlw	55
  4519  0122' 6E00'              	movwf	(i2memcpy@s1+1)^0,c
  4520  0124' C01C' F004'        	movff	can_handle_interrupt@rcvd_msg_1373+2,i2memcpy@n
  4521  0128' 6A00'              	clrf	(i2memcpy@n+1)^0,c
  4522  012A' EC00' F000'        	call	i2_memcpy	;wreg free
  4523  012E'                    
  4524                           ;canlib/pic18f26k83/pic18f26k83_can.c: 153:         if (((void*)0) != can_rcv_cb) {
  4525  012E' 5000'              	movf	_can_rcv_cb^0,w,c
  4526  0130' 1000'              	iorwf	(_can_rcv_cb+1)^0,w,c
  4527  0132' B500'              	btfsc	status,2,b
  4528  0134' EF00' F000'        	goto	i2u200_41
  4529  0138' EF00' F000'        	goto	i2u200_40
  4530  013C'                    i2u200_41:
  4531  013C' EF00' F000'        	goto	i2l3417
  4532  0140'                    i2u200_40:
  4533  0140'                    
  4534                           ;canlib/pic18f26k83/pic18f26k83_can.c: 154:             can_rcv_cb(&rcvd_msg);
  4535  0140' 0E00'              	movlw	low can_handle_interrupt@rcvd_msg_1373
  4536  0142' 6E00'              	movwf	can_msg_handler@msg^0,c
  4537  0144' 0E00'              	movlw	high can_handle_interrupt@rcvd_msg_1373
  4538  0146' 6E00'              	movwf	(can_msg_handler@msg+1)^0,c
  4539  0148' D802               	call	i2u201_48
  4540  014A' EF00' F000'        	goto	i2u201_49
  4541  014E'                    i2u201_48:
  4542  014E' 0005               	push	
  4543  0150' 6F00'              	movwf	pclath,b
  4544  0152' 5000'              	movf	_can_rcv_cb^0,w,c
  4545  0154' 6F00'              	movwf	tosl,b
  4546  0156' 5000'              	movf	(_can_rcv_cb+1)^0,w,c
  4547  0158' 6F01'              	movwf	tosl+1,b
  4548  015A' 5100'              	movf	tblptru,w,b
  4549  015C' 6F02'              	movwf	tosl+2,b
  4550  015E' 5100'              	movf	pclath,w,b
  4551  0160' 0012               	return		;indir
  4552  0162'                    i2u201_49:
  4553  0162'                    i2l3417:
  4554                           
  4555                           ;canlib/pic18f26k83/pic18f26k83_can.c: 157:         PIR5bits.RXB1IF = 0;
  4556  0162' 0139               	movlb	57	; () banked
  4557  0164' 93A5               	bcf	165,1,b	;volatile
  4558  0166'                    
  4559                           ; BSR set to: 57
  4560                           ;canlib/pic18f26k83/pic18f26k83_can.c: 158:         RXB1CONbits.RXFUL = 0;
  4561  0166' 0137               	movlb	55	; () banked
  4562  0168' 9FF0               	bcf	240,7,b	;volatile
  4563                           
  4564                           ;canlib/pic18f26k83/pic18f26k83_can.c: 159:     }
  4565  016A' EF00' F000'        	goto	i2l493
  4566  016E'                    i2l495:
  4567                           
  4568                           ; BSR set to: 57
  4569  016E' A5A5               	btfss	165,2,b	;volatile
  4570  0170' EF00' F000'        	goto	i2u202_41
  4571  0174' EF00' F000'        	goto	i2u202_40
  4572  0178'                    i2u202_41:
  4573  0178' EF00' F000'        	goto	i2l498
  4574  017C'                    i2u202_40:
  4575  017C'                    
  4576                           ; BSR set to: 57
  4577                           ;canlib/pic18f26k83/pic18f26k83_can.c: 164:         PIR5bits.TXB0IF = 0;
  4578  017C' 95A5               	bcf	165,2,b	;volatile
  4579                           
  4580                           ;canlib/pic18f26k83/pic18f26k83_can.c: 165:         return;
  4581  017E' EF00' F000'        	goto	i2l493
  4582  0182'                    i2l498:
  4583                           
  4584                           ; BSR set to: 57
  4585  0182' A7A5               	btfss	165,3,b	;volatile
  4586  0184' EF00' F000'        	goto	i2u203_41
  4587  0188' EF00' F000'        	goto	i2u203_40
  4588  018C'                    i2u203_41:
  4589  018C' EF00' F000'        	goto	i2l500
  4590  0190'                    i2u203_40:
  4591  0190'                    
  4592                           ; BSR set to: 57
  4593                           ;canlib/pic18f26k83/pic18f26k83_can.c: 167:         PIR5bits.TXB1IF = 0;
  4594  0190' 97A5               	bcf	165,3,b	;volatile
  4595                           
  4596                           ;canlib/pic18f26k83/pic18f26k83_can.c: 168:         return;
  4597  0192' EF00' F000'        	goto	i2l493
  4598  0196'                    i2l500:
  4599                           
  4600                           ; BSR set to: 57
  4601  0196' A9A5               	btfss	165,4,b	;volatile
  4602  0198' EF00' F000'        	goto	i2u204_41
  4603  019C' EF00' F000'        	goto	i2u204_40
  4604  01A0'                    i2u204_41:
  4605  01A0' EF00' F000'        	goto	i2l502
  4606  01A4'                    i2u204_40:
  4607  01A4'                    
  4608                           ; BSR set to: 57
  4609                           ;canlib/pic18f26k83/pic18f26k83_can.c: 170:         PIR5bits.TXB2IF = 0;
  4610  01A4' 99A5               	bcf	165,4,b	;volatile
  4611                           
  4612                           ;canlib/pic18f26k83/pic18f26k83_can.c: 171:         return;
  4613  01A6' EF00' F000'        	goto	i2l493
  4614  01AA'                    i2l502:
  4615                           
  4616                           ; BSR set to: 57
  4617  01AA' AFA5               	btfss	165,7,b	;volatile
  4618  01AC' EF00' F000'        	goto	i2u205_41
  4619  01B0' EF00' F000'        	goto	i2u205_40
  4620  01B4'                    i2u205_41:
  4621  01B4' EF00' F000'        	goto	i2l504
  4622  01B8'                    i2u205_40:
  4623  01B8'                    
  4624                           ; BSR set to: 57
  4625                           ;canlib/pic18f26k83/pic18f26k83_can.c: 175:         PIR5bits.IRXIF = 0;
  4626  01B8' 9FA5               	bcf	165,7,b	;volatile
  4627                           
  4628                           ;canlib/pic18f26k83/pic18f26k83_can.c: 176:         return;
  4629  01BA' EF00' F000'        	goto	i2l493
  4630  01BE'                    i2l504:
  4631                           
  4632                           ; BSR set to: 57
  4633  01BE' ABA5               	btfss	165,5,b	;volatile
  4634  01C0' EF00' F000'        	goto	i2u206_41
  4635  01C4' EF00' F000'        	goto	i2u206_40
  4636  01C8'                    i2u206_41:
  4637  01C8' EF00' F000'        	goto	i2l501
  4638  01CC'                    i2u206_40:
  4639  01CC'                    
  4640                           ; BSR set to: 57
  4641                           ;canlib/pic18f26k83/pic18f26k83_can.c: 180:         PIR5bits.ERRIF = 0;
  4642  01CC' 9BA5               	bcf	165,5,b	;volatile
  4643                           
  4644                           ;canlib/pic18f26k83/pic18f26k83_can.c: 181:         return;
  4645  01CE' EF00' F000'        	goto	i2l493
  4646  01D2'                    i2l501:
  4647  01D2'                    i2l493:
  4648  01D2' 0012               	return		;funcret
  4649  01D4'                    __end_of_can_handle_interrupt:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function i2_memcpy *****************
  4653 ;; Defined at:
  4654 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memcpy.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  d1              2    0[COMRAM] PTR void 
  4657 ;;		 -> tx_pool(100), can_handle_interrupt@rcvd_msg_1373(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
  4658 ;;		 -> txb_heartbeat@msg_sent(11), 
  4659 ;;  s1              2    2[COMRAM] PTR const void 
  4660 ;;		 -> send_status_ok@board_stat_msg(11), main@radiation_msg(11), tx_pool(100), RXB1D0(1), 
  4661 ;;		 -> RXB0D0(1), txb_heartbeat@msg_sent(11), 
  4662 ;;  n               2    4[COMRAM] unsigned int 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4665 ;;		 -> send_status_ok@board_stat_msg(11), main@radiation_msg(11), tx_pool(100), RXB1D0(1), 
  4666 ;;		 -> RXB0D0(1), txb_heartbeat@msg_sent(11), 
  4667 ;;  d               2    6[COMRAM] PTR unsigned char 
  4668 ;;		 -> tx_pool(100), can_handle_interrupt@rcvd_msg_1373(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
  4669 ;;		 -> txb_heartbeat@msg_sent(11), 
  4670 ;;  tmp             1   10[COMRAM] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  2    0[COMRAM] PTR void 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4680 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;Total ram usage:       11 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_can_handle_interrupt
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text34
  4694  0000'                    __ptext34:
  4695                           	callstack 0
  4696  0000'                    i2_memcpy:
  4697                           	callstack 23
  4698  0000' C002' F008'        	movff	i2memcpy@s1,i2memcpy@s
  4699  0004' C003' F009'        	movff	i2memcpy@s1+1,i2memcpy@s+1
  4700  0008' C000' F006'        	movff	i2memcpy@d1,i2memcpy@d
  4701  000C' C001' F007'        	movff	i2memcpy@d1+1,i2memcpy@d+1
  4702  0010' EF00' F000'        	goto	i2l3155
  4703  0014'                    i2l3147:
  4704  0014' 0060' F000' F000'  	movff	i2memcpy@s,fsr2l
  4705  001A' 0060' F000' F000'  	movff	i2memcpy@s+1,fsr2h
  4706  0020' 5100'              	movf	indf2,w,b
  4707  0022' 6E00'              	movwf	i2memcpy@tmp^0,c
  4708  0024' 4A00'              	infsnz	i2memcpy@s^0,f,c
  4709  0026' 2A00'              	incf	(i2memcpy@s+1)^0,f,c
  4710  0028' 0060' F000' F000'  	movff	i2memcpy@d,fsr2l
  4711  002E' 0060' F000' F000'  	movff	i2memcpy@d+1,fsr2h
  4712  0034' 0060' F000' F000'  	movff	i2memcpy@tmp,indf2
  4713  003A' 4A00'              	infsnz	i2memcpy@d^0,f,c
  4714  003C' 2A00'              	incf	(i2memcpy@d+1)^0,f,c
  4715  003E'                    i2l3155:
  4716  003E' 0600'              	decf	i2memcpy@n^0,f,c
  4717  0040' A100'              	btfss	status,0,b
  4718  0042' 0600'              	decf	(i2memcpy@n+1)^0,f,c
  4719  0044' 2800'              	incf	i2memcpy@n^0,w,c
  4720  0046' E106               	bnz	i2u179_41
  4721  0048' 2800'              	incf	(i2memcpy@n+1)^0,w,c
  4722  004A' A500'              	btfss	status,2,b
  4723  004C' EF00' F000'        	goto	i2u179_41
  4724  0050' EF00' F000'        	goto	i2u179_40
  4725  0054'                    i2u179_41:
  4726  0054' EF00' F000'        	goto	i2l3147
  4727  0058'                    i2u179_40:
  4728  0058' 0012               	return		;funcret
  4729  005A'                    __end_ofi2_memcpy:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _can_msg_handler *****************
  4733 ;; Defined at:
  4734 ;;		line 131 in file "main.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  msg             2    4[COMRAM] PTR const struct .
  4737 ;;		 -> can_handle_interrupt@rcvd_msg_1373(11), can_handle_interrupt@rcvd_msg(11), 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  msg_type        2    8[COMRAM] unsigned short 
  4740 ;;  cmd_type        2    0        int 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;Total ram usage:        6 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 1
  4757 ;; This function calls:
  4758 ;;		_get_board_unique_id
  4759 ;;		_get_message_type
  4760 ;;		i2_millis
  4761 ;; This function is called by:
  4762 ;;		_main
  4763 ;;		_can_handle_interrupt
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text35
  4768  0000'                    __ptext35:
  4769                           	callstack 0
  4770  0000'                    _can_msg_handler:
  4771                           	callstack 22
  4772  0000'                    
  4773                           ;main.c: 132:     uint16_t msg_type = get_message_type(msg);
  4774  0000' C004' F000'        	movff	can_msg_handler@msg,get_message_type@msg
  4775  0004' C005' F001'        	movff	can_msg_handler@msg+1,get_message_type@msg+1
  4776  0008' EC00' F000'        	call	_get_message_type	;wreg free
  4777  000C' C000' F008'        	movff	?_get_message_type,can_msg_handler@msg_type
  4778  0010' C001' F009'        	movff	?_get_message_type+1,can_msg_handler@msg_type+1
  4779  0014'                    
  4780                           ;main.c: 139:     if (get_board_unique_id(msg) == 0x07) {
  4781  0014' C004' F000'        	movff	can_msg_handler@msg,get_board_unique_id@msg
  4782  0018' C005' F001'        	movff	can_msg_handler@msg+1,get_board_unique_id@msg+1
  4783  001C' EC00' F000'        	call	_get_board_unique_id	;wreg free
  4784  0020' 0A07               	xorlw	7
  4785  0022' A500'              	btfss	status,2,b
  4786  0024' EF00' F000'        	goto	i2u178_41
  4787  0028' EF00' F000'        	goto	i2u178_40
  4788  002C'                    i2u178_41:
  4789  002C' EF00' F000'        	goto	i2l3129
  4790  0030'                    i2u178_40:
  4791  0030' EF00' F000'        	goto	i2l646
  4792  0034'                    i2l651:
  4793  0034' EF00' F000'        	goto	i2l3131
  4794  0038'                    i2l3129:
  4795  0038' C008' F006'        	movff	can_msg_handler@msg_type,??_can_msg_handler
  4796  003C' C009' F007'        	movff	can_msg_handler@msg_type+1,??_can_msg_handler+1
  4797                           
  4798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  4799                           ; Switch size 1, requested type "simple"
  4800                           ; Number of cases is 3, Range of values is 1 to 6
  4801                           ; switch strategies available:
  4802                           ; Name         Instructions Cycles
  4803                           ; simple_byte           10     6 (average)
  4804                           ;	Chosen strategy is simple_byte
  4805  0040' 5000'              	movf	(??_can_msg_handler+1)^0,w,c
  4806  0042' 0A01               	xorlw	1	; case 1
  4807  0044' B500'              	btfsc	status,2,b
  4808  0046' EF00' F000'        	goto	i2l5411
  4809  004A' 0A04               	xorlw	4	; case 5
  4810  004C' B500'              	btfsc	status,2,b
  4811  004E' EF00' F000'        	goto	i2l5413
  4812  0052' 0A03               	xorlw	3	; case 6
  4813  0054' B500'              	btfsc	status,2,b
  4814  0056' EF00' F000'        	goto	i2l5415
  4815  005A' EF00' F000'        	goto	i2l3131
  4816  005E'                    i2l5411:
  4817                           
  4818                           ; Switch size 1, requested type "simple"
  4819                           ; Number of cases is 2, Range of values is 128 to 224
  4820                           ; switch strategies available:
  4821                           ; Name         Instructions Cycles
  4822                           ; simple_byte            7     4 (average)
  4823                           ;	Chosen strategy is simple_byte
  4824  005E' 5000'              	movf	??_can_msg_handler^0,w,c
  4825  0060' 0A80               	xorlw	128	; case 128
  4826  0062' B500'              	btfsc	status,2,b
  4827  0064' EF00' F000'        	goto	i2l651
  4828  0068' 0A60               	xorlw	96	; case 224
  4829  006A' B500'              	btfsc	status,2,b
  4830  006C' EF00' F000'        	goto	i2l3131
  4831  0070' EF00' F000'        	goto	i2l3131
  4832  0074'                    i2l5413:
  4833                           
  4834                           ; Switch size 1, requested type "simple"
  4835                           ; Number of cases is 3, Range of values is 32 to 224
  4836                           ; switch strategies available:
  4837                           ; Name         Instructions Cycles
  4838                           ; simple_byte           10     6 (average)
  4839                           ;	Chosen strategy is simple_byte
  4840  0074' 5000'              	movf	??_can_msg_handler^0,w,c
  4841  0076' 0A20               	xorlw	32	; case 32
  4842  0078' B500'              	btfsc	status,2,b
  4843  007A' EF00' F000'        	goto	i2l3131
  4844  007E' 0AA0               	xorlw	160	; case 128
  4845  0080' B500'              	btfsc	status,2,b
  4846  0082' EF00' F000'        	goto	i2l3131
  4847  0086' 0A60               	xorlw	96	; case 224
  4848  0088' B500'              	btfsc	status,2,b
  4849  008A' EF00' F000'        	goto	i2l3131
  4850  008E' EF00' F000'        	goto	i2l3131
  4851  0092'                    i2l5415:
  4852                           
  4853                           ; Switch size 1, requested type "simple"
  4854                           ; Number of cases is 2, Range of values is 64 to 160
  4855                           ; switch strategies available:
  4856                           ; Name         Instructions Cycles
  4857                           ; simple_byte            7     4 (average)
  4858                           ;	Chosen strategy is simple_byte
  4859  0092' 5000'              	movf	??_can_msg_handler^0,w,c
  4860  0094' 0A40               	xorlw	64	; case 64
  4861  0096' B500'              	btfsc	status,2,b
  4862  0098' EF00' F000'        	goto	i2l3131
  4863  009C' 0AE0               	xorlw	224	; case 160
  4864  009E' B500'              	btfsc	status,2,b
  4865  00A0' EF00' F000'        	goto	i2l3131
  4866  00A4' EF00' F000'        	goto	i2l3131
  4867  00A8'                    i2l3131:
  4868                           
  4869                           ;main.c: 166:     last_can_traffic_timestamp_ms = millis();
  4870  00A8' EC00' F000'        	call	i2_millis	;wreg free
  4871  00AC' C000' F000'        	movff	?i2_millis,_last_can_traffic_timestamp_ms
  4872  00B0' C001' F001'        	movff	?i2_millis+1,_last_can_traffic_timestamp_ms+1
  4873  00B4' C002' F002'        	movff	?i2_millis+2,_last_can_traffic_timestamp_ms+2
  4874  00B8' C003' F003'        	movff	?i2_millis+3,_last_can_traffic_timestamp_ms+3
  4875  00BC'                    i2l646:
  4876  00BC' 0012               	return		;funcret
  4877  00BE'                    __end_of_can_msg_handler:
  4878                           	callstack 0
  4879                           
  4880 ;; *************** function i2_millis *****************
  4881 ;; Defined at:
  4882 ;;		line 26 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  4    0[COMRAM] unsigned long 
  4889 ;; Registers used:
  4890 ;;		None
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;Total ram usage:        4 bytes
  4901 ;; Hardware stack levels used: 1
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_can_msg_handler
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text36
  4910  0000'                    __ptext36:
  4911                           	callstack 0
  4912  0000'                    i2_millis:
  4913                           	callstack 22
  4914  0000'                    
  4915                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 27:     return millis_counter;
  4916  0000' C004' F000'        	movff	_millis_counter,?i2_millis
  4917  0004' C005' F001'        	movff	_millis_counter+1,?i2_millis+1
  4918  0008' C006' F002'        	movff	_millis_counter+2,?i2_millis+2
  4919  000C' C007' F003'        	movff	_millis_counter+3,?i2_millis+3
  4920  0010' 0012               	return		;funcret
  4921  0012'                    __end_ofi2_millis:
  4922                           	callstack 0
  4923                           
  4924 ;; *************** function _get_message_type *****************
  4925 ;; Defined at:
  4926 ;;		line 514 in file "canlib/can_common.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  msg             2    0[COMRAM] PTR const struct .
  4929 ;;		 -> can_handle_interrupt@rcvd_msg_1373(11), can_handle_interrupt@rcvd_msg(11), 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  2    0[COMRAM] unsigned short 
  4934 ;; Registers used:
  4935 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;Total ram usage:        4 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_can_msg_handler
  4951 ;;		_get_fill_info
  4952 ;;		_get_general_cmd_type
  4953 ;;		_get_reset_board_id
  4954 ;;		_get_actuator_id
  4955 ;;		_get_curr_actuator_state
  4956 ;;		_get_req_actuator_state
  4957 ;;		_get_curr_arm_state
  4958 ;;		_get_req_arm_state
  4959 ;;		_get_timestamp
  4960 ;;		_is_sensor_data
  4961 ;;		_get_imu_data
  4962 ;;		_get_analog_data
  4963 ;;		_get_altitude_data
  4964 ;;		_get_pyro_voltage_data
  4965 ;;		_get_gps_time
  4966 ;;		_get_gps_lat
  4967 ;;		_get_gps_lon
  4968 ;;		_get_gps_alt
  4969 ;;		_get_gps_info
  4970 ;;		_get_radi_info
  4971 ;;		_message_debug_level
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text37
  4976  0000'                    __ptext37:
  4977                           	callstack 0
  4978  0000'                    _get_message_type:
  4979                           	callstack 22
  4980  0000'                    
  4981                           ;canlib/can_common.c: 514: uint16_t get_message_type(const can_msg_t *msg);canlib/can_co
      +                          mmon.c: 515: {;canlib/can_common.c: 517:     if (!msg) { return 0; }
  4982  0000' 5000'              	movf	get_message_type@msg^0,w,c
  4983  0002' 1000'              	iorwf	(get_message_type@msg+1)^0,w,c
  4984  0004' A500'              	btfss	status,2,b
  4985  0006' EF00' F000'        	goto	i2u156_41
  4986  000A' EF00' F000'        	goto	i2u156_40
  4987  000E'                    i2u156_41:
  4988  000E' EF00' F000'        	goto	i2l2957
  4989  0012'                    i2u156_40:
  4990  0012' 0E00               	movlw	0
  4991  0014' 6E00'              	movwf	(?_get_message_type+1)^0,c
  4992  0016' 0E00               	movlw	0
  4993  0018' 6E00'              	movwf	?_get_message_type^0,c
  4994  001A' EF00' F000'        	goto	i2l156
  4995  001E'                    i2l2957:
  4996                           
  4997                           ;canlib/can_common.c: 519:     return (msg->sid & 0x7E0);
  4998  001E' 0060' F000' F000'  	movff	get_message_type@msg,fsr2l
  4999  0024' 0060' F000' F000'  	movff	get_message_type@msg+1,fsr2h
  5000  002A' 0060' F000' F000'  	movff	postinc2,??_get_message_type
  5001  0030' 0060' F000' F000'  	movff	postdec2,??_get_message_type+1
  5002  0036' 0EE0               	movlw	224
  5003  0038' 1400'              	andwf	??_get_message_type^0,w,c
  5004  003A' 6E00'              	movwf	?_get_message_type^0,c
  5005  003C' 0E07               	movlw	7
  5006  003E' 1400'              	andwf	(??_get_message_type+1)^0,w,c
  5007  0040' 6E00'              	movwf	(?_get_message_type+1)^0,c
  5008  0042'                    i2l156:
  5009  0042' 0012               	return		;funcret
  5010  0044'                    __end_of_get_message_type:
  5011                           	callstack 0
  5012                           
  5013 ;; *************** function _get_board_unique_id *****************
  5014 ;; Defined at:
  5015 ;;		line 522 in file "canlib/can_common.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  msg             2    0[COMRAM] PTR const struct .
  5018 ;;		 -> can_handle_interrupt@rcvd_msg_1373(11), can_handle_interrupt@rcvd_msg(11), 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      unsigned char 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;Total ram usage:        2 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_can_msg_handler
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text38
  5044  0000'                    __ptext38:
  5045                           	callstack 0
  5046  0000'                    _get_board_unique_id:
  5047                           	callstack 22
  5048  0000'                    
  5049                           ;canlib/can_common.c: 522: uint8_t get_board_unique_id(const can_msg_t *msg);canlib/can_
      +                          common.c: 523: {;canlib/can_common.c: 525:     if (!msg) { return 0; }
  5050  0000' 5000'              	movf	get_board_unique_id@msg^0,w,c
  5051  0002' 1000'              	iorwf	(get_board_unique_id@msg+1)^0,w,c
  5052  0004' A500'              	btfss	status,2,b
  5053  0006' EF00' F000'        	goto	i2u157_41
  5054  000A' EF00' F000'        	goto	i2u157_40
  5055  000E'                    i2u157_41:
  5056  000E' EF00' F000'        	goto	i2l2967
  5057  0012'                    i2u157_40:
  5058  0012' 0E00               	movlw	0
  5059  0014' EF00' F000'        	goto	i2l160
  5060  0018'                    i2l2967:
  5061                           
  5062                           ;canlib/can_common.c: 527:     return ((uint8_t) (msg->sid & 0x1F));
  5063  0018' 0060' F000' F000'  	movff	get_board_unique_id@msg,fsr2l
  5064  001E' 0060' F000' F000'  	movff	get_board_unique_id@msg+1,fsr2h
  5065  0024' 5100'              	movf	indf2,w,b
  5066  0026' 0B1F               	andlw	31
  5067  0028'                    i2l160:
  5068  0028' 0012               	return		;funcret
  5069  002A'                    __end_of_get_board_unique_id:
  5070                           	callstack 0
  5071                           
  5072                           ;
  5073                           ; Interrupt Vector Table @ 0x8
  5074                           ;
  5075                           
  5076                           	psect	ivt0x8
  5077  0000'                    __pivt0x8:
  5078                           	callstack 0
  5079  0000'                    ivt0x8_base:
  5080                           	callstack 0
  5081                           
  5082                           ; high-priority vector
  5083  0000' EF00' F000'        	goto	_interrupt_handler
  5084  0010'                    	org	16
  5085                           
  5086                           ; low-priority vector
  5087  0010' 00FF               	reset	
  5088  0000                     
  5089                           	psect	text39
  5090  0000'                    __ptext39:
  5091                           	callstack 0
  5092  0000'                    
  5093                           	psect	rparam
  5094  0000                     
  5095                           	psect	idloc
  5096                           
  5097                           ;Config register IDLOC0 @ 0x200000
  5098                           ;	unspecified, using default values
  5099  200000                     	org	2097152
  5100  200000  0FFF               	dw	4095
  5101                           
  5102                           ;Config register IDLOC1 @ 0x200002
  5103                           ;	unspecified, using default values
  5104  200002                     	org	2097154
  5105  200002  0FFF               	dw	4095
  5106                           
  5107                           ;Config register IDLOC2 @ 0x200004
  5108                           ;	unspecified, using default values
  5109  200004                     	org	2097156
  5110  200004  0FFF               	dw	4095
  5111                           
  5112                           ;Config register IDLOC3 @ 0x200006
  5113                           ;	unspecified, using default values
  5114  200006                     	org	2097158
  5115  200006  0FFF               	dw	4095
  5116                           
  5117                           ;Config register IDLOC4 @ 0x200008
  5118                           ;	unspecified, using default values
  5119  200008                     	org	2097160
  5120  200008  0FFF               	dw	4095
  5121                           
  5122                           ;Config register IDLOC5 @ 0x20000A
  5123                           ;	unspecified, using default values
  5124  20000A                     	org	2097162
  5125  20000A  0FFF               	dw	4095
  5126                           
  5127                           ;Config register IDLOC6 @ 0x20000C
  5128                           ;	unspecified, using default values
  5129  20000C                     	org	2097164
  5130  20000C  0FFF               	dw	4095
  5131                           
  5132                           ;Config register IDLOC7 @ 0x20000E
  5133                           ;	unspecified, using default values
  5134  20000E                     	org	2097166
  5135  20000E  0FFF               	dw	4095
  5136                           
  5137                           	psect	config
  5138                           
  5139                           ;Config register CONFIG1L @ 0x300000
  5140                           ;	External Oscillator Selection
  5141                           ;	FEXTOSC = OFF, Oscillator not enabled
  5142                           ;	Reset Oscillator Selection
  5143                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  5144  300000                     	org	3145728
  5145  300000  EC                 	db	236
  5146                           
  5147                           ;Config register CONFIG1H @ 0x300001
  5148                           ;	Clock out Enable bit
  5149                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5150                           ;	PRLOCKED One-Way Set Enable bit
  5151                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  5152                           ;	Clock Switch Enable bit
  5153                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5154                           ;	Fail-Safe Clock Monitor Enable bit
  5155                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5156  300001                     	org	3145729
  5157  300001  FF                 	db	255
  5158                           
  5159                           ;Config register CONFIG2L @ 0x300002
  5160                           ;	MCLR Enable bit
  5161                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  5162                           ;	Power-up timer selection bits
  5163                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5164                           ;	Multi-vector enable bit
  5165                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  5166                           ;	IVTLOCK bit One-way set enable bit
  5167                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  5168                           ;	Low Power BOR Enable bit
  5169                           ;	LPBOREN = OFF, ULPBOR disabled
  5170                           ;	Brown-out Reset Enable bits
  5171                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5172  300002                     	org	3145730
  5173  300002  F7                 	db	247
  5174                           
  5175                           ;Config register CONFIG2H @ 0x300003
  5176                           ;	Brown-out Reset Voltage Selection bits
  5177                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  5178                           ;	ZCD Disable bit
  5179                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5180                           ;	PPSLOCK bit One-Way Set Enable bit
  5181                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  5182                           ;	Stack Full/Underflow Reset Enable bit
  5183                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5184                           ;	Debugger Enable bit
  5185                           ;	DEBUG = 0x1, unprogrammed default
  5186                           ;	Extended Instruction Set Enable bit
  5187                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5188  300003                     	org	3145731
  5189  300003  FF                 	db	255
  5190                           
  5191                           ;Config register CONFIG3L @ 0x300004
  5192                           ;	WDT Period selection bits
  5193                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5194                           ;	WDT operating mode
  5195                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  5196  300004                     	org	3145732
  5197  300004  9F                 	db	159
  5198                           
  5199                           ;Config register CONFIG3H @ 0x300005
  5200                           ;	WDT Window Select bits
  5201                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5202                           ;	WDT input clock selector
  5203                           ;	WDTCCS = SC, Software Control
  5204  300005                     	org	3145733
  5205  300005  FF                 	db	255
  5206                           
  5207                           ;Config register CONFIG4L @ 0x300006
  5208                           ;	Boot Block Size selection bits
  5209                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  5210                           ;	Boot Block enable bit
  5211                           ;	BBEN = OFF, Boot block disabled
  5212                           ;	Storage Area Flash enable bit
  5213                           ;	SAFEN = OFF, SAF disabled
  5214                           ;	Application Block write protection bit
  5215                           ;	WRTAPP = OFF, Application Block not write protected
  5216  300006                     	org	3145734
  5217  300006  FF                 	db	255
  5218                           
  5219                           ;Config register CONFIG4H @ 0x300007
  5220                           ;	Configuration Register Write Protection bit
  5221                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  5222                           ;	Boot Block Write Protection bit
  5223                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  5224                           ;	Data EEPROM Write Protection bit
  5225                           ;	WRTD = OFF, Data EEPROM not write-protected
  5226                           ;	SAF Write protection bit
  5227                           ;	WRTSAF = OFF, SAF not Write Protected
  5228                           ;	Low Voltage Programming Enable bit
  5229                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  5230  300007                     	org	3145735
  5231  300007  FF                 	db	255
  5232                           
  5233                           ;Config register CONFIG5L @ 0x300008
  5234                           ;	PFM and Data EEPROM Code Protection bit
  5235                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  5236  300008                     	org	3145736
  5237  300008  FF                 	db	255
  5238                           
  5239                           ;Config register CONFIG5H @ 0x300009
  5240                           ;	unspecified, using default values
  5241  300009                     	org	3145737
  5242  300009  FF                 	db	255
  5243                           tosu	equ	0x3FFF
  5244                           tosh	equ	0x3FFE
  5245                           tosl	equ	0x3FFD
  5246                           stkptr	equ	0x3FFC
  5247                           pclatu	equ	0x3FFB
  5248                           pclath	equ	0x3FFA
  5249                           pcl	equ	0x3FF9
  5250                           tblptru	equ	0x3FF8
  5251                           tblptrh	equ	0x3FF7
  5252                           tblptrl	equ	0x3FF6
  5253                           tablat	equ	0x3FF5
  5254                           prodh	equ	0x3FF4
  5255                           prodl	equ	0x3FF3
  5256                           indf0	equ	0x3FEF
  5257                           postinc0	equ	0x3FEE
  5258                           postdec0	equ	0x3FED
  5259                           preinc0	equ	0x3FEC
  5260                           plusw0	equ	0x3FEB
  5261                           fsr0h	equ	0x3FEA
  5262                           fsr0l	equ	0x3FE9
  5263                           wreg	equ	0x3FE8
  5264                           indf1	equ	0x3FE7
  5265                           postinc1	equ	0x3FE6
  5266                           postdec1	equ	0x3FE5
  5267                           preinc1	equ	0x3FE4
  5268                           plusw1	equ	0x3FE3
  5269                           fsr1h	equ	0x3FE2
  5270                           fsr1l	equ	0x3FE1
  5271                           bsr	equ	0x3FE0
  5272                           indf2	equ	0x3FDF
  5273                           postinc2	equ	0x3FDE
  5274                           postdec2	equ	0x3FDD
  5275                           preinc2	equ	0x3FDC
  5276                           plusw2	equ	0x3FDB
  5277                           fsr2h	equ	0x3FDA
  5278                           fsr2l	equ	0x3FD9
  5279                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         137
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      59
    BANK0           160     69      84
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    can_send_fp$0	PTR const struct . size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    Absolute function$0	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_1373(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    receive_callback$0	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_1373(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    can_rcv_cb$0	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_1373(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    S517$0$0	PTR const struct . size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), can_handle_interrupt@rcvd_msg_1373(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), TXB0D0(SFR[1]), 
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), can_handle_interrupt@rcvd_msg_1373(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), TXB0D0(SFR[1]), 
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 100
		 -> send_status_ok@board_stat_msg(BANK0[11]), main@radiation_msg(BANK0[11]), tx_pool(BANK1[100]), RXB1D0(SFR[1]), 
		 -> RXB0D0(SFR_9[1]), txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> send_status_ok@board_stat_msg(BANK0[11]), main@radiation_msg(BANK0[11]), tx_pool(BANK1[100]), RXB1D0(SFR[1]), 
		 -> RXB0D0(SFR_9[1]), txb_heartbeat@msg_sent(BANK0[11]), 

    can_msg_handler@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_1373(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    can_send@message	PTR const struct . size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    can_init@timing	PTR const struct . size(2) Largest target is 7
		 -> main@can_setup(BANK0[7]), 

    can_init@receive_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), 

    can_rcv_cb	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), can_msg_handler(), 

    can_generate_timing_params@timing	PTR struct . size(2) Largest target is 7
		 -> main@can_setup(BANK0[7]), 

    srb_peek@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_pop@element	PTR void  size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    srb_pop@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_pop@ctx	PTR struct . size(2) Largest target is 11
		 -> buf@can_tx_buffer$F533(BANK0[10]), buf(COMRAM[10]), 

    srb_is_empty@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_is_empty@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf@can_tx_buffer$F533(BANK0[10]), buf(COMRAM[10]), 

    srb_is_full@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_is_full@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf@can_tx_buffer$F533(BANK0[10]), buf(COMRAM[10]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), can_handle_interrupt@rcvd_msg_1373(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), TXB0D0(SFR[1]), 
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    srb_push@element	PTR const void  size(2) Largest target is 11
		 -> send_status_ok@board_stat_msg(BANK0[11]), main@radiation_msg(BANK0[11]), 

    srb_push@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_push@ctx	PTR struct . size(2) Largest target is 11
		 -> buf@can_tx_buffer$F533(BANK0[10]), buf(COMRAM[10]), 

    srb_init@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_init@ctx	PTR struct . size(2) Largest target is 11
		 -> buf@can_tx_buffer$F533(BANK0[10]), buf(COMRAM[10]), 

    get_offset_bytes@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    get_offset_bytes@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf@can_tx_buffer$F533(BANK0[10]), buf(COMRAM[10]), 

    txb_enqueue@msg	PTR const struct . size(2) Largest target is 11
		 -> send_status_ok@board_stat_msg(BANK0[11]), main@radiation_msg(BANK0[11]), 

    txb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    txb_init@can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    txb_init@can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S517$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    ctx.can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    S517$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    ctx.can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    buf.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    S439$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    buf.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    sp__build_radio_cmd_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__build_printf_can_message	PTR const unsigned char  size(2) Largest target is 0

    get_board_unique_id@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_1373(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    get_message_type@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_1373(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    build_radi_info_msg@output	PTR struct . size(2) Largest target is 11
		 -> main@radiation_msg(BANK0[11]), 

    build_board_stat_msg@output	PTR struct . size(2) Largest target is 11
		 -> send_status_ok@board_stat_msg(BANK0[11]), 

    build_board_stat_msg@error_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    write_timestamp_3bytes@output	PTR struct . size(2) Largest target is 11
		 -> send_status_ok@board_stat_msg(BANK0[11]), main@radiation_msg(BANK0[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_handler in COMRAM

    _interrupt_handler->_can_handle_interrupt
    _can_handle_interrupt->i2_memcpy
    _can_msg_handler->_get_message_type
    _can_msg_handler->i2_millis

Critical Paths under _main in BANK0

    _main->_send_status_ok
    _txb_init->_srb_init
    _srb_init->___lwdiv
    _txb_heartbeat->_srb_pop
    _srb_pop->_get_offset_bytes
    _can_send->_memcpy
    _send_status_ok->_txb_enqueue
    _txb_enqueue->_srb_push
    _srb_push->_get_offset_bytes
    _get_offset_bytes->___wmul
    _build_board_stat_msg->_write_timestamp_3bytes
    _build_radi_info_msg->_write_timestamp_3bytes

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_handler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_handler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_handler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_handler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_handler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_handler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_handler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_handler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    29      5   26697
                                             35 BANK0     34    29      5
                       _BLUE_LED_OFF
                        _BLUE_LED_ON
                      _WHITE_LED_OFF
                       _WHITE_LED_ON
                           _adc_init
                _build_radi_info_msg
         _can_generate_timing_params
                           _can_init
                           _led_init
                             _millis
                 _pin_interrupt_init
                     _send_status_ok
                        _timer0_init
                        _txb_enqueue
                      _txb_heartbeat
                           _txb_init
 ---------------------------------------------------------------------------------
 (1) _txb_init                                             8     0      8    1904
                                             15 BANK0      8     0      8
                           _srb_init
 ---------------------------------------------------------------------------------
 (2) _srb_init                                             8     0      8    1420
                                              7 BANK0      8     0      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _txb_heartbeat                                       11    11      0    6149
                                             22 BANK0     11    11      0
                           _can_send *
                       _can_send_rdy *
                       _srb_is_empty
                            _srb_pop
 ---------------------------------------------------------------------------------
 (2) _srb_pop                                             10     6      4    3729
                                             12 BANK0     10     6      4
                   _get_offset_bytes
                             _memcpy
                       _srb_is_empty
 ---------------------------------------------------------------------------------
 (3) _srb_is_empty                                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _can_send_rdy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _can_send                                             4     2      2    1900
                                             11 BANK0      4     2      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_ok                                      11    11      0    8527
                                             24 BANK0     11    11      0
               _build_board_stat_msg
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (1) _txb_enqueue                                          2     0      2    4368
                                             22 BANK0      2     0      2
                        _srb_is_full
                           _srb_push
 ---------------------------------------------------------------------------------
 (2) _srb_push                                            10     6      4    3732
                                             12 BANK0     10     6      4
                   _get_offset_bytes
                             _memcpy
                        _srb_is_full
 ---------------------------------------------------------------------------------
 (3) _srb_is_full                                          6     4      2     425
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    1618
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _get_offset_bytes                                     6     2      4    1016
                                              6 BANK0      6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     352
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _build_board_stat_msg                                15     5     10    4049
                                              6 BANK0     15     5     10
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (1) _pin_interrupt_init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _can_init                                             5     1      4     428
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _can_generate_timing_params                          10     4      6    1079
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _build_radi_info_msg                                  9     0      9    3767
                                              6 BANK0      9     0      9
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (3) _write_timestamp_3bytes                               6     0      6    3066
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WHITE_LED_ON                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WHITE_LED_OFF                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BLUE_LED_ON                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BLUE_LED_OFF                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupt_handler                                    0     0      0    2505
               _can_handle_interrupt
              _pin_interrupt_handler
            _timer0_handle_interrupt
 ---------------------------------------------------------------------------------
 (7) _timer0_handle_interrupt                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _pin_interrupt_handler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _can_handle_interrupt                                26    26      0    2505
                                             11 COMRAM    26    26      0
                   Absolute function *
                    _can_msg_handler *
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (8) i2_memcpy                                            11     5      6     299
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _can_msg_handler                                      8     6      2    2010
                                              4 COMRAM     6     4      2
                _get_board_unique_id
                   _get_message_type
                           i2_millis
 ---------------------------------------------------------------------------------
 (9) i2_millis                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _get_message_type                                     4     2      2    1716
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _get_board_unique_id                                  2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BLUE_LED_OFF
   _BLUE_LED_ON
   _WHITE_LED_OFF
   _WHITE_LED_ON
   _adc_init
   _build_radi_info_msg
     _millis (ARG)
     _write_timestamp_3bytes (ARG)
   _can_generate_timing_params
   _can_init
   _led_init
   _millis
   _pin_interrupt_init
   _send_status_ok
     _build_board_stat_msg
       _millis (ARG)
       _write_timestamp_3bytes (ARG)
     _millis
     _txb_enqueue
       _srb_is_full
       _srb_push
         _get_offset_bytes
           ___wmul
         _memcpy
         _srb_is_full
   _timer0_init
   _txb_enqueue
   _txb_heartbeat
     _can_send *
       _memcpy
     _can_send_rdy *
     _srb_is_empty *
     _srb_pop *
       _get_offset_bytes
       _memcpy
       _srb_is_empty
   _txb_init
     _srb_init
       ___lwdiv

 _interrupt_handler (ROOT)
   _can_handle_interrupt
     Absolute function(Fake) *
     _can_msg_handler *
       _get_board_unique_id
       _get_message_type
       i2_millis
     i2_memcpy *
   _pin_interrupt_handler
   _timer0_handle_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      64       8       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      54       5       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      3B       1       62.1%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3       6        0.0%
DATA                 0      0      F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 27 16:37:40 2022

                     ??_get_message_type 000002                             srb_init@pool 000009  
                                      l8 000038             build_radi_info_msg@adc_value 00000B  
                                     l48 000106                                       l95 000090  
                    ___wmul@multiplicand 000002    timer0_handle_interrupt@internal_count 00000A  
                 __size_of_txb_heartbeat 000000                    build_board_stat_msg@i 000013  
                                    l352 000038                                      l520 00001C  
                                    l372 0000E6                                      l348 000036  
                                    l517 000010                                      l365 00005C  
                                    l357 000086                                      l702 000002  
                                    l711 000002                                      l720 00002A  
                                    l384 00003A                                      l368 000088  
                                    l705 000002                                      l537 000028  
                                    l475 000178                                      l379 0000B0  
                                    l708 000002                                      l485 000014  
                                    l389 0000E6                                      l629 000128  
                                    l399 0002A6                                      l479 000110  
                                    l659 000040                                      l676 000018  
                                    l699 00000C                                      _buf 00000C  
                                    _ctx 000000             write_timestamp_3bytes@output 000004  
                                    tosl 000000*                                     wreg 000000* 
                            main@adc_res 00002C                              _txb_enqueue 000000  
            __size_of_pin_interrupt_init 000000                           srb_is_full@ctx 000000  
               ??_write_timestamp_3bytes 000006                                     l1211 00006C  
                                   l1218 000074                                     l1397 00005A  
                                   l4401 000038                                     l4331 000022  
                                   l4411 000024                                     l4341 0000A8  
                                   l4501 000032                                     l4421 00005E  
                                   l4413 00002C                                     l4405 000000  
                                   l4351 000000                                     l4335 000000  
                                   l4511 0000BA                                     l4503 000056  
                                   l4423 000060                                     l4415 00003A  
                                   l4407 00000A                                     l5401 000298  
                                   l4441 000052                                     l4433 000028  
                                   l4521 000000                                     l4329 000000  
                                   l4353 000024                                     l4361 000000  
                                   l4337 000046                                     l4513 0000DC  
                                   l4505 00005C                                     l4425 000066  
                                   l4417 000040                                     l4409 00001C  
                                   l4531 000048                                     l4523 000000  
                                   l5403 000212                                     l4611 0001A0  
                                   l4603 000160                                     l4451 0000CC  
                                   l4443 000066                                     l4427 000000  
                                   l4363 000014                                     l4371 00003E  
                                   l4339 00008A                                     l4347 0000AE  
                                   l4515 00010C                                     l4507 00008E  
                                   l4419 000056                                     l4373 000000  
                                   l4533 00005C                                     l5405 00022E  
                                   l4613 0001B0                                     l4605 000170  
                                   l4621 0001D4                                     l4701 000056  
                                   l4453 0000D0                                     l4445 000082  
                                   l4437 00003E                                     l4429 000012  
                                   l4357 000030                                     l4365 000024  
                                   l4381 000022                                     l4509 0000B8  
                                   l4517 000000                                     l4461 000018  
                                   l4541 000000                                     l4535 00006E  
                                   l4527 000018                                     l5407 00024A  
                                   l4615 0001C0                                     l4607 000180  
                                   l4711 000110                                     l4703 000078  
                                   l4455 0000F4                                     l4447 000096  
                                   l4367 000028                                     l4383 000050  
                                   l4375 000000                                     l4471 00001C  
                                   l4551 000062                                     l4463 000032  
                                   l4543 000010                                     l4537 000080  
                                   l4529 00002C                                     l5409 000266  
                                   l4609 000190                                     l4561 000034  
                                   l4553 000000                                     l4721 00013E  
                                   l4713 000132                                     l4705 00009E  
                                   l4449 0000A2                                     l4369 00003A  
                                   l4385 00009A                                     l4377 00001C  
                                   l4393 000000                                     l4481 0000D0  
                                   l4545 000000                                     l4465 000060  
                                   l4571 000078                                     l4563 000044  
                                   l4555 000004                                     l4731 00014C  
                                   l4723 000142                                     l4715 000134  
                                   l4707 0000C6                                     l4387 0000D0  
                                   l4491 000022                                     l4395 000032  
                                   l4483 0000E4                                     l4475 000022  
                                   l4547 00001E                                     l4467 000074  
                                   l4459 000000                                     l4581 0000C8  
                                   l4573 000088                                     l4565 000054  
                                   l4557 000014                                     l4741 000158  
                                   l4733 000150                                     l4725 000146  
                                   l4717 000136                                     l4709 0000EE  
                                   l4389 0000E4                                     l4477 000050  
                                   l4469 000000                                     l4549 00004C  
                                   l5391 000220                                     l4591 00010C  
                                   l4583 0000D8                                     l4575 000098  
                                   l4567 000064                                     l4559 000024  
                                   l4743 00015A                                     l4735 000152  
                                   l4727 000148                                     l4719 00013A  
                                   l4487 000000                                     l4751 000000  
                                   l4495 000000                                     l4479 00009A  
                                   l4761 000012                                     l5393 00023C  
                                   l4593 00011C                                     l4577 0000A8  
                                   l4745 00015C                                     l4737 000154  
                                   l4729 00014A                                     l4753 000008  
                                   l4771 000000                                     l4763 00001A  
                                   l5395 000258                                     l4595 00012C  
                                   l4587 0000EC                                     l4579 0000B8  
                                   l4747 00015E                                     l4739 000156  
                                   l4691 000008                                     l4755 000018  
                                   l4499 000014                                     l5389 000204  
                                   l5397 000274                                     l4597 00013C  
                                   l4589 0000FC                                     l4749 000162  
                                   l4693 000010                                     l4765 000000  
                                   l4773 000000                                     l4757 00001A  
                                   l4941 000008                                     l4759 000000  
                                   l5399 00028A                                     l4599 00014C  
                                   l4695 000026                                     l4767 000000  
                                   l4775 000032                                     l4951 00001E  
                                   l4943 00000E                                     l4935 000000  
                                   l4769 000000                                     l4777 000000  
                                   l4697 00002A                                     l4689 000000  
                                   l4961 000090                                     l4953 000022  
                                   l4945 000010                                     l4937 000004  
                                   l4779 000000                                     l4699 00002E  
                                   l4971 0000EA                                     l4963 000096  
                                   l4955 000040                                     l4947 000012  
                                   l4939 000006                                     l4981 00011C  
                                   l4973 0000EE                                     l4965 0000CE  
                                   l4957 000056                                     l4949 00001A  
                                   l4991 00017E                                     l4983 000120  
                                   l4975 0000F2                                     l4967 0000D2  
                                   l4959 00007C                                     l4993 00018C  
                                   l4985 000124                                     l4969 0000E2  
                                   l4977 000106                                     l4995 000192  
                                   l4987 000136                                     l4979 00010A  
                                   l4989 000150                                     l4997 000196  
                                   u3000 000012                                     u3001 00000E  
                                   u3010 000024                                     u3011 000020  
                                   u3020 00003A                                     u3100 000052  
                                   u3021 000036                                     u3101 00004E  
                                   u3030 00004E                                     u3031 00004A  
                                   u3200 000178                                     u3040 0000F4  
                                   u3120 000012                                     u3201 000174  
                                   u3041 0000F0                                     u3121 00000C  
                                   u3130 000014                                     u3050 00001C  
                                   u3115 0000A8                                     u3051 000018  
                                   u3140 000014                                     u3060 0000D0  
                                   u3141 000010                                     u3061 0000CC  
                                   u3070 00001E                                     u3150 00001E  
                                   u3071 00001A                                     u3151 00001A  
                                   u3080 000010                                     u3400 00011C  
                                   u3081 00000C                                     u3401 000118  
                                   u3090 000032                                     u3170 00004C  
                                   u3410 000136                                     u3091 00002E  
                                   u3171 000048                                     u3411 000132  
                                   u3190 000026                                     u3191 000022  
                                   u3168 000028                                     u3169 00003C  
                                   u2900 00008A                                     u3188 000072  
                                   u3380 0000CE                                     u2901 000086  
                                   u3189 000086                                     u3381 0000CA  
                                   u2910 0000A8                                     u3390 0000E2  
                                   u2911 0000A4                                     u3391 0000DE  
                                   u2920 000024                                     u2921 000020  
                                   u2930 00005A                                     u2931 000056  
                                   u2940 00001C                                     u2941 000018  
                                   u2950 0000D0                                     u2951 0000CC  
                                   u2960 000032                                     u2961 00002E  
                                   u2890 000046                                     u2970 00001C  
                                   u2891 000042                                     u2971 000018  
                                   u2980 00003A                                     u2981 000036  
                                   u2990 000056                                     u2991 000052  
                                   _PIR5 0039A5             __end_of_build_board_stat_msg 000108  
                                   _main 000000                            srb_pop@offset 000014  
                                   fsr1h 000000*                                    fsr2h 000000* 
                                   indf1 000000*                                    indf2 000000* 
                                   fsr1l 000000*                                    fsr2l 000000* 
                                   prodh 000000*                                    prodl 000000* 
                                   start 000000*                       main@radiation_msg 000033  
                           ___param_bank 000000                          srb_is_empty@ctx 000000  
                    get_offset_bytes@ctx 000006                                    ?_main 000023  
                                  _ADPCH 003EF1                     __end_of_BLUE_LED_OFF 000004  
                                  _LATB2 01FDDA                                    _LATB3 01FDDB  
                                  _LATB4 01FDDC                          __end_of___lwdiv 000076  
                                  i2l160 000028                                    i2l156 000042  
                                  i2l500 000196                                    i2l501 0001D2  
                                  i2l502 0001AA                                    i2l504 0001BE  
                                  i2l517 000010                                    i2l526 000024  
                                  i2l490 00001C                                    i2l642 00006C  
                                  i2l651 000034                                    i2l491 0000C6  
                                  i2l493 0001D2                                    i2l646 0000BC  
                                  i2l495 00016E                                    i2l488 000020  
                                  i2l498 000182                                    i2l682 00005A  
                             i2memcpy@d1 000000                               i2memcpy@s1 000002  
                         srb_pop@element 00000E                           txb_enqueue@msg 000016  
                                  pclath 000000*            build_radi_info_msg@timestamp 000006  
                        __end_of_srb_pop 0000E8                            _txb_heartbeat 000000  
                                  status 000000*                 __size_of_send_status_ok 000000  
                       __end_ofi2_memcpy 00005A                         __end_ofi2_millis 000012  
                    _get_board_unique_id 000000                          __initialization 000000  
                          main@can_setup 00003E                     __size_of_BLUE_LED_ON 000000  
                           __end_of_main 0001A2         can_generate_timing_params@timing 000004  
                                 ??_main 000028                            __activetblptr 000002  
                    get_message_type@msg 000000                        srb_init@pool_size 00000B  
                   ?_get_board_unique_id 000000                   _buf@can_tx_buffer$F533 000005  
                  __size_of_can_send_rdy 000000                                   _ADRESH 003EF0  
                                 _ADRESL 003EEF          __size_of_write_timestamp_3bytes 000000  
                                 _RC0PPS 003A10                         __end_of_adc_init 00002A  
                                 i2l3023 000000                                   i2l3121 000000  
                                 i2l3131 0000A8                                   i2l3123 000014  
                                 i2l3151 000028                                   i2l4031 000012  
                                 i2l3129 000038                                   i2l3153 00003A  
                                 i2l3145 000000                                   i2l3401 0000BC  
                                 i2l4041 000046                                   i2l4033 000016  
                                 i2l3147 000014                                   i2l3155 00003E  
                                 i2l3411 000114                                   i2l3403 0000C0  
                                 i2l4043 000056                                   i2l4035 000026  
                                 i2l1397 000058                                   i2l3149 000024  
                                 i2l3421 00017C                                   i2l3413 00012E  
                                 i2l4045 000064                                   i2l4037 000034  
                                 i2l4029 000000                                   i2l3415 000140  
                                 i2l4047 000068                                   i2l4039 000042  
                                 i2l3433 0001B8                                   i2l3425 000190  
                                 i2l3417 000162                                   i2l3409 0000D4  
                                 i2l3419 000166                                   i2l3437 0001CC  
                                 i2l3429 0001A4                                   i2l3391 00000E  
                                 i2l3471 000010                                   i2l3393 000030  
                                 i2l3481 00003C                                   i2l3473 000012  
                                 i2l1961 000000                                   i2l5411 00005E  
                                 i2l3395 00006E                                   i2l3483 00004C  
                                 i2l3475 00001E                                   i2l1963 000014  
                                 i2l5413 000074                                   i2l3397 000088  
                                 i2l3389 000000                                   i2l3485 00004E  
                                 i2l3477 00002E                                   i2l3469 000000  
                                 i2l2951 000000                                   i2l5415 000092  
                                 i2l3399 00009A                                   i2l3479 000030  
                                 i2l2961 000000                                   i2l2953 000012  
                                 i2l2963 000012                                   i2l2957 00001E  
                                 i2l2967 000018                           ?_txb_heartbeat 000000  
                    _build_radi_info_msg 000000                                   _RXB0D0 003F86  
                                 _RXB1D0 0037F6                                   _TXB0D0 0037E6  
                       __end_of_can_init 00017A                                   _TRISC0 01FE20  
                                 _TRISB2 01FE1A                                   _TRISC1 01FE21  
                                 _TRISB3 01FE1B                                   _TRISB4 01FE1C  
                       __end_of_can_send 000112        can_handle_interrupt@rcvd_msg_1373 00001A  
     build_board_stat_msg@error_data_len 00000D                           can_init@timing 000000  
can_generate_timing_params@can_frequency 000000                              i2memcpy@tmp 00000A  
                       __end_of_led_init 00000E                                   ___wmul 000000  
                           ?_timer0_init 000000                                ??___lwdiv 000004  
                         srb_push@offset 000014                                   _memcpy 000000  
                                 _millis 000000                                   clear_0 000006  
                                 clear_1 000012                                   clear_2 00001E  
                   ?_build_radi_info_msg 000006                    _pin_interrupt_handler 000000  
                                 isa$std 000001                     _build_board_stat_msg 000000  
                           _can_send_rdy 000000                    ??_get_board_unique_id 000002  
                       __end_of_srb_init 00008A                         __end_of_srb_push 0000E8  
                                 tblptru 000000*                            ?_srb_is_full 000000  
                              ??_srb_pop 000010            __size_of_can_handle_interrupt 000000  
                       __end_of_txb_init 000038                        _sensor_identifier 000004  
                             __accesstop 000000*          build_board_stat_msg@error_data 00000B  
                __end_of__initialization 000030           build_board_stat_msg@error_code 00000A  
                          ___rparam_used 000001                           __pcstackCOMRAM 000000  
                 _write_timestamp_3bytes 000000                build_radi_info_msg@output 00000D  
                  __size_of_BLUE_LED_OFF 000000                             txb_init@pool 00000F  
                  ??_build_radi_info_msg 00000F                 ?_timer0_handle_interrupt 000000  
                  ?_build_board_stat_msg 000006                    get_offset_bytes@index 000008  
              __size_of_get_offset_bytes 000000                __size_of_get_message_type 000000  
                              ?i2_memcpy 000000                                ?i2_millis 000000  
                           ?_txb_enqueue 000016                               _can_rcv_cb 000008  
                        ??_txb_heartbeat 000016                               __pbssBANK0 000000  
                             __pbssBANK1 000000                           _send_status_ok 000000  
                  __end_of_WHITE_LED_OFF 000004                             _BLUE_LED_OFF 000000  
                                IVTBASEH 003FD6                                  IVTBASEL 003FD5  
                                IVTBASEU 003FD7                   get_board_unique_id@msg 000000  
                                ?___wmul 000000                   ?_pin_interrupt_handler 000000  
                                ?_memcpy 000000                                  ?_millis 000000  
               __size_of_can_msg_handler 000000                                  _ANSELC1 01D301  
                              ?_adc_init 000000                       fp__can_msg_handler 000000  
                              ?_can_init 000000                                ?_can_send 00000B  
             __end_of_pin_interrupt_init 00001A                               ??i2_memcpy 000006  
                             ??i2_millis 000004                                  i2u59_40 000014  
                                i2u59_41 000010                                ?_led_init 000000  
                 __end_of_send_status_ok 000042                                _ADREFbits 003EFD  
                                __Hparam 000000                                  __Lparam 000000  
        write_timestamp_3bytes@timestamp 000000                                ?_srb_init 000007  
                              ?_srb_push 00000C                          __size_of___wmul 000000  
                                ___lwdiv 000000                   ??_build_board_stat_msg 000010  
                              ?_txb_init 00000F                          srb_push@element 00000E  
                                __pcinit 000000                          __size_of_memcpy 000000  
                        __size_of_millis 000000                                  __ramtop 000000* 
                   __size_of_timer0_init 000000                               ??_adc_init 000000  
                                __ptext0 000000                                  __ptext1 000000  
                                __ptext2 000000                                  __ptext3 000000  
                                __ptext4 000000                                  __ptext5 000000  
                                __ptext6 000000                                  __ptext7 000000  
                                __ptext8 000000                                  __ptext9 000000  
                             ??_can_init 000004                               ??_can_send 00000D  
                          ?_WHITE_LED_ON 000000                                _IOCAFbits 003A47  
                              _IOCAPbits 003A45                                  _srb_pop 000000  
             build_board_stat_msg@output 00000E                                  _tx_pool 000000  
                             ??_led_init 000000                     end_of_initialization 000030  
                   __size_of_srb_is_full 000000                          ?_send_status_ok 000000  
                                memcpy@d 000007                                  memcpy@n 000004  
                                memcpy@s 000009                            __Lmediumconst 000000* 
    __size_of_can_generate_timing_params 000000                            ??_BLUE_LED_ON 000000  
                          ?_srb_is_empty 000000                               ??_srb_init 00000F  
                                postdec1 000000*                                 postdec2 000000* 
                             ??_srb_push 000010                                  postinc0 000000* 
                                postinc1 000000*                                 postinc2 000000* 
                             ??_txb_init 000017                         _get_offset_bytes 000000  
                         ??_WHITE_LED_ON 000000                         _get_message_type 000000  
                              _TRISAbits 003FC2                                _TRISCbits 003FC4  
                            srb_init@ctx 000007                        ??_can_msg_handler 000006  
                   __size_of_txb_enqueue 000000                              srb_push@ctx 00000C  
                ?_write_timestamp_3bytes 000000                           ??_srb_is_empty 000002  
           __end_of_can_handle_interrupt 0001D4              __end_of_get_board_unique_id 00002A  
                    __end_of_BLUE_LED_ON 000004                           __end_of___wmul 00002C  
                        can_send@message 00000B                                i2memcpy@d 000006  
                              i2memcpy@n 000004                                i2memcpy@s 000008  
                            _ECANCONbits 003F91                           __end_of_memcpy 00005C  
                         __end_of_millis 000012                      start_initialization 000000  
                can_msg_handler@msg_type 000008                        __size_ofi2_memcpy 000000  
                      __size_ofi2_millis 000000         __size_of_timer0_handle_interrupt 000000  
                             ivt0x8_base 000000                              _CANSTATbits 003F8E  
                     can_msg_handler@msg 000004           __end_of_write_timestamp_3bytes 00003A  
            __end_of_build_radi_info_msg 000092                  ??_pin_interrupt_handler 000000  
     __end_of_can_generate_timing_params 0002A8               _can_generate_timing_params 000000  
                               ??___wmul 000004                                 ??_memcpy 000006  
                               ??_millis 000004                        __size_of_adc_init 000000  
                            __pbssCOMRAM 000000                            __pcstackBANK0 000000  
                            _BRGCON1bits 003703                        __size_of_can_init 000000  
                            _BRGCON2bits 003704                              _BRGCON3bits 003705  
                      __size_of_can_send 000000            _last_can_traffic_timestamp_ms 000000  
                  __end_of_txb_heartbeat 000088                       _pin_interrupt_init 000000  
                      __size_of_led_init 000000                     __end_of_WHITE_LED_ON 000004  
                            _BLUE_LED_ON 000000            build_board_stat_msg@timestamp 000006  
                       ___lwdiv@dividend 000000                      ?_pin_interrupt_init 000000  
                        fp__can_send_rdy 000000                                 ?___lwdiv 000000  
                      __size_of_srb_init 000000                        __size_of_srb_push 000000  
                      __size_of_txb_init 000000                        _interrupt_handler 000000  
                 __size_of_WHITE_LED_OFF 000000                              _COMSTATbits 003F90  
                       ??_send_status_ok 000018                       ?_interrupt_handler 000000  
                               _CANRXPPS 003AED                        main@led_heartbeat 000032  
                   ??_pin_interrupt_init 000000                     __end_of_srb_is_empty 00003C  
                               ?_srb_pop 00000C                     _can_handle_interrupt 000000  
                       ___lwdiv@quotient 000005                      ??_interrupt_handler 000025  
   build_radi_info_msg@sensor_identifier 00000A                           ___wmul@product 000004  
               __end_of_get_offset_bytes 00005E                                 _PIE0bits 003990  
                               _PIE3bits 003993                                 _PIE5bits 003995  
               __end_of_get_message_type 000044                                 i2u200_40 000140  
                               i2u200_41 00013C                                 i2u202_40 00017C  
                               i2u201_48 00014E                                 i2u202_41 000178  
                               i2u201_49 000162                                 i2u203_40 000190  
                               i2u203_41 00018C                                 i2u204_40 0001A4  
                               i2u204_41 0001A0                                 i2u205_40 0001B8  
                               i2u205_41 0001B4                                 i2u206_40 0001CC  
                               i2u206_41 0001C8                                 i2u207_40 000010  
                               i2u207_41 00000C                                 i2u208_40 00002E  
                               i2u208_41 00002A                                 i2u209_40 00004C  
                               i2u209_41 000048                                 i2u156_40 000012  
                               i2u156_41 00000E                                 i2u157_40 000012  
                               i2u157_41 00000E                                 i2u192_40 00000E  
                               i2u192_41 00000A                                 i2u193_40 00001C  
                               i2u193_41 000018                                 i2u178_40 000030  
                               i2u194_40 000030                                 i2u178_41 00002C  
                               i2u194_41 00002C                                 i2u179_40 000058  
                               i2u283_40 000012                                 i2u179_41 000054  
                               i2u283_41 00000E                                 i2u195_45 00003A  
                               i2u196_40 00009A                                 i2u284_40 000026  
                               i2u196_41 000096                                 i2u284_41 000022  
                               i2u285_40 000034                                 i2u285_41 000030  
                               _PIR3bits 0039A3                                 i2u198_40 0000D4  
                               i2u197_48 0000A8                                 i2u286_40 000042  
                               i2u198_41 0000D0                                 i2u197_49 0000BC  
                               i2u286_41 00003E                                 i2u287_40 000056  
                               i2u287_41 000052                                 i2u199_45 0000DE  
                               i2u288_40 000064                                 i2u288_41 000060  
                               _PIR5bits 0039A5                                 _RXB0SIDH 003F81  
                               _RXB0SIDL 003F82                                 _RXB1SIDH 0037F1  
                               _RXB1SIDL 0037F2                            ??_timer0_init 000000  
                               _TXB0SIDH 0037E1                                 _TXB0SIDL 0037E2  
                               _RXM0SIDH 0037B8                                 _RXM0SIDL 0037B9  
                               _RXM1SIDH 0037BC                                 _RXM1SIDL 0037BD  
                        main@last_millis 00002E                          _can_msg_handler 000000  
              __end_of_interrupt_handler 00006E                            ?_can_send_rdy 000000  
                             _ADCON0bits 003EF8            __size_of_build_board_stat_msg 000000  
                      ___wmul@multiplier 000000                               srb_pop@ctx 00000C  
                               i2_memcpy 000000                                 i2_millis 000000  
                          ??_srb_is_full 000002                    ?_can_handle_interrupt 000000  
                   srb_init@element_size 00000D                  _timer0_handle_interrupt 000000  
                            _INTCON0bits 003FD2                               _CANCONbits 003F8F  
                          _WHITE_LED_OFF 000000             send_status_ok@board_stat_msg 000018  
                               __Hrparam 000000*                               memcpy@tmp 000006  
                               __Lrparam 000000*                              _CIOCONbits 003700  
                       __size_of___lwdiv 000000                           ??_can_send_rdy 000000  
           ??_can_generate_timing_params 000006                                 _adc_init 000000  
                             _ANSELAbits 003A40                               _ANSELCbits 003A60  
                      txb_init@pool_size 000011                      __end_of_timer0_init 00001E  
                               _can_init 000000                                 _can_send 000000  
                             _T0CON0bits 003FB8                               _T0CON1bits 003FB9  
                          ??_txb_enqueue 000018                                 __pivt0x8 000000  
                        ___lwdiv@divisor 000002                          ___lwdiv@counter 000004  
                               __ptext10 000000                                 __ptext11 000000  
                               __ptext20 000000                                 __ptext12 000000  
                               __ptext21 000000                                 __ptext13 000000  
                               __ptext30 000000                                 __ptext22 000000  
                               __ptext14 000000                                 __ptext31 000000  
                               __ptext23 000000                                 __ptext15 000000  
                               __ptext32 000000                                 __ptext24 000000  
                               __ptext16 000000                                 __ptext33 000000  
                               __ptext25 000000                                 __ptext17 000000  
                               __ptext34 000000                                 __ptext26 000000  
                               __ptext18 000000                                 __ptext35 000000  
                               __ptext27 000000                                 __ptext19 000000  
                               __ptext36 000000                                 __ptext28 000000  
                               __ptext37 000000                                 __ptext29 000000  
                               __ptext38 000000                                 __ptext39 000000  
                       __size_of_srb_pop 000000                                 _led_init 000000  
                  __size_of_WHITE_LED_ON 000000                    txb_heartbeat@msg_sent 000016  
                    __end_of_srb_is_full 0000B2                            __size_of_main 000000  
                         ?_WHITE_LED_OFF 000000                            ?_BLUE_LED_OFF 000000  
                __end_of_can_msg_handler 0000BE                                 isa$xinst 000000  
                               _srb_init 000000                 can_init@receive_callback 000002  
            ?_can_generate_timing_params 000000           __size_of_pin_interrupt_handler 000000  
                               _srb_push 000000            __end_of_pin_interrupt_handler 00005C  
                               _txb_init 000000                                 main@argc 000023  
                               main@argv 000025               __size_of_interrupt_handler 000000  
                         _millis_counter 000004                              _RXB0DLCbits 003F85  
                  __size_of_srb_is_empty 000000                              _RXB1DLCbits 0037F5  
                            _RXB0CONbits 003F80                ??_timer0_handle_interrupt 000000  
                            _RXB1CONbits 0037F0                   ??_can_handle_interrupt 00000B  
           __size_of_get_board_unique_id 000000                             _WHITE_LED_ON 000000  
                               memcpy@d1 000000                                 memcpy@s1 000002  
                   txb_init@can_tx_ready 000015                                 intlevel2 000000* 
           can_handle_interrupt@rcvd_msg 00000F                      __end_of_txb_enqueue 00003A  
                         ??_BLUE_LED_OFF 000000                              _TXB0DLCbits 0037E5  
                            _TXB0CONbits 0037E0                             ?_BLUE_LED_ON 000000  
                           _srb_is_empty 000000                      txb_init@can_send_fp 000013  
                            _timer0_init 000000                            _overflow_flag 00000B  
           __size_of_build_radi_info_msg 000000                              _srb_is_full 000000  
                            fp__can_send 000000                          ??_WHITE_LED_OFF 000000  
                   __end_of_can_send_rdy 000016          __end_of_timer0_handle_interrupt 000026  
                      ?_get_offset_bytes 000006                        ?_get_message_type 000000  
                       ?_can_msg_handler 000004                       ??_get_offset_bytes 00000A  
